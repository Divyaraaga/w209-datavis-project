<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <DashboardGridOverlay />
    <DashboardGridSize />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='W209_WorldEduStats_Overview' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
        <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        <members>
          <member value='&quot;GPI-Composite&quot;' />
          <member value='&quot;GPI-Primary&quot;' />
          <member value='&quot;GPI-Secondary&quot;' />
          <member value='&quot;GPI-Tertiary&quot;' />
        </members>
      </column>
      <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
        <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        <members>
          <member value='&quot;Population Growth&quot;' />
          <member value='&quot;GDP per Capita Growth&quot;' />
        </members>
      </column>
      <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
        <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        <members>
          <member value='&quot;Composite-All&quot;' />
          <member value='&quot;Composite-Female&quot;' />
          <member value='&quot;Primary-All&quot;' />
          <member value='&quot;Primary-Female&quot;' />
          <member value='&quot;Secondary-All&quot;' />
          <member value='&quot;Secondary-Female&quot;' />
          <member value='&quot;Tertiary-All&quot;' />
          <member value='&quot;Tertiary-Female&quot;' />
        </members>
      </column>
      <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
        <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        <members>
          <member value='&quot;Composite Enrollment-All&quot;' />
          <member value='&quot;Composite Enrollment-Female&quot;' />
          <member value='&quot;Composite-GPI&quot;' />
          <member value='&quot;Primary Female Enrollment&quot;' />
        </members>
      </column>
      <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
        <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
        <members>
          <member value='&quot;Gender Parity Indexï¼ˆGPI)&quot;' />
          <member value='&quot;Enrollment Rate of Female&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Filter On (copy)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Composite-All&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tertiary-All&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='R_Munged_Final_B_Sunday+' inline='true' name='federated.1y9ncyu0j61v2319xoh3217e9wty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='R_Munged_Final_B_Sunday' name='textscan.1l5u1ps12oi0mw14zwktj1peh4jz'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='EdStatsCountry_Modified_KeyCols.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='EdStatsCountry_Modified_KeyCols' name='textscan.0vymfro1seivzv1fk6u2i0wqp6u2'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='EdStatsCountry_Modified_KeyCols.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[R_Munged_Final_B_Sunday.csv].[Country.Code]' />
              <expression op='[EdStatsCountry_Modified_KeyCols.csv].[Country Code]' />
            </expression>
          </clause>
          <relation connection='textscan.1l5u1ps12oi0mw14zwktj1peh4jz' name='R_Munged_Final_B_Sunday.csv' table='[R_Munged_Final_B_Sunday#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country.Name' ordinal='0' />
              <column datatype='string' name='Country.Code' ordinal='1' />
              <column datatype='string' name='Indicator.Name' ordinal='2' />
              <column datatype='string' name='Indicator.Code' ordinal='3' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
              <column datatype='real' name='Indicator.Value' ordinal='5' />
              <column datatype='real' name='GDP.Capita.Constant' ordinal='6' />
              <column datatype='real' name='GDP.Capita.PPP' ordinal='7' />
              <column datatype='real' name='GPI.Primary' ordinal='8' />
              <column datatype='real' name='GPI.Secondary' ordinal='9' />
              <column datatype='real' name='GPI.Tertiary' ordinal='10' />
              <column datatype='real' name='Primary.Enrollment.All' ordinal='11' />
              <column datatype='real' name='Primary.Enrollment.Female' ordinal='12' />
              <column datatype='real' name='Primary.Enrollment.Male' ordinal='13' />
              <column datatype='real' name='Secondary.Enrollment.All' ordinal='14' />
              <column datatype='real' name='Secondary.Enrollment.Female' ordinal='15' />
              <column datatype='real' name='Secondary.Enrollment.Male' ordinal='16' />
              <column datatype='real' name='Tertiary.Enrollment.All' ordinal='17' />
              <column datatype='real' name='Tertiary.Enrollment.Female' ordinal='18' />
              <column datatype='real' name='Tertiary.Enrollment.Male' ordinal='19' />
              <column datatype='real' name='Population.Growth' ordinal='20' />
              <column datatype='real' name='Total.Population' ordinal='21' />
              <column datatype='real' name='Pct.Growth' ordinal='22' />
              <column datatype='string' name='Indicator' ordinal='23' />
              <column datatype='string' name='Education.Indicators' ordinal='24' />
              <column datatype='string' name='Macro.Indicators' ordinal='25' />
              <column datatype='date' date-parse-format='yyyy' name='Year.X' ordinal='26' />
              <column datatype='date' date-parse-format='yyyy' name='Year.Y' ordinal='27' />
              <column datatype='real' name='Indicator.Value.X' ordinal='28' />
              <column datatype='real' name='Indicator.Value.Y' ordinal='29' />
              <column datatype='string' name='Indicator.Code.X' ordinal='30' />
              <column datatype='string' name='Indicator.Code.Y' ordinal='31' />
              <column datatype='string' name='Indicator.X' ordinal='32' />
              <column datatype='string' name='Indicator.Y' ordinal='33' />
            </columns>
          </relation>
          <relation connection='textscan.0vymfro1seivzv1fk6u2i0wqp6u2' name='EdStatsCountry_Modified_KeyCols.csv' table='[EdStatsCountry_Modified_KeyCols#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country Code' ordinal='0' />
              <column datatype='string' name='Short Name' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
              <column datatype='string' name='Income_Group' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.Constant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.Constant]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.Constant</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.PPP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.PPP]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.PPP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Primary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Primary</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Secondary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Secondary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Secondary</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Tertiary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Tertiary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Tertiary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.All</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Female</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Male</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.All</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Female</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Male</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.All</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Female</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Male</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Population.Growth</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Population]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Total.Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pct.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pct.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Pct.Growth</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Education.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Education.Indicators</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Macro.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Macro.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Macro.Indicators</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.X</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.X</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.Y</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.Y</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.X</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.Y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.Y</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.X</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.Y</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.X</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Y</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Short Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Short Name]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Short Name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income_Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income_Group]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Income_Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;' value='Pop. Growth' />
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' value='Enrollment Ratio of Female' />
        </aliases>
      </column>
      <column caption='Filter On' datatype='real' name='[Calculation_145592933528252417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Composite Enrollment-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite Enrollment-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Composite-GPI&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Primary Female Enrollment&quot; THEN [Primary.Enrollment.Female]&#10;END' />
      </column>
      <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
      </column>
      <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
      </column>
      <column caption='GPI.Composite*100' datatype='real' name='[Calculation_4658762711690080257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_146648464326504452]*100' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
      </column>
      <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
      </column>
      <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
      </column>
      <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;High income&quot;' value='High' />
          <alias key='&quot;Low income&quot;' value='Low' />
          <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
          <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year.X]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Sum' name='[sum:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Sum' name='[sum:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country.Code,Income Group)' hidden='true' name='[Action (Country.Code,Income Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Code]' />
          <groupfilter function='level-members' level='[Income_Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Country.Name)' hidden='true' name='[Action (Country.Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group name='[Income ex Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Region ex. Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <aliases>
          <alias key='(&quot;East Asia &amp; Pacific&quot;)' value='East Asia' />
          <alias key='(&quot;Europe &amp; Central Asia&quot;)' value='Europe' />
          <alias key='(&quot;Latin America &amp; Caribbean&quot;)' value='Latin America' />
          <alias key='(&quot;Middle East &amp; North Africa&quot;)' value='MENA' />
        </aliases>
      </group>
      <group caption='Years.Cont.80' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Years80]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ds639c/Desktop/UCB_DataScience/w209 - Data Viz/w209-datavis-project/final_tableau_folder/R_Munged_Final_B_Sunday+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2018 09:36:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='170976' timestamp-start='2018-12-10 21:36:35.683' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Name</remote-alias>
              <ordinal>0</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Code</remote-alias>
              <ordinal>1</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Name</remote-alias>
              <ordinal>2</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code</remote-alias>
              <ordinal>3</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value</remote-alias>
              <ordinal>5</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.Constant</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.Constant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.Constant</remote-alias>
              <ordinal>6</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.PPP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.PPP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.PPP</remote-alias>
              <ordinal>7</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Primary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Primary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Primary</remote-alias>
              <ordinal>8</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Secondary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Secondary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Secondary</remote-alias>
              <ordinal>9</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Tertiary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Tertiary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Tertiary</remote-alias>
              <ordinal>10</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.All</remote-alias>
              <ordinal>11</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Female</remote-alias>
              <ordinal>12</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Male</remote-alias>
              <ordinal>13</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.All</remote-alias>
              <ordinal>14</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Female</remote-alias>
              <ordinal>15</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Male</remote-alias>
              <ordinal>16</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.All</remote-alias>
              <ordinal>17</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Female</remote-alias>
              <ordinal>18</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Male</remote-alias>
              <ordinal>19</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population.Growth</remote-alias>
              <ordinal>20</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total.Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Population</remote-alias>
              <ordinal>21</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pct.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pct.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pct.Growth</remote-alias>
              <ordinal>22</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>467</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator</remote-alias>
              <ordinal>23</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Education.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Education.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Education.Indicators</remote-alias>
              <ordinal>24</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Macro.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Macro.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Macro.Indicators</remote-alias>
              <ordinal>25</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.X</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.X</remote-alias>
              <ordinal>26</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.Y</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.Y</remote-alias>
              <ordinal>27</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.X</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.X</remote-alias>
              <ordinal>28</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.Y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.Y</remote-alias>
              <ordinal>29</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.X</remote-alias>
              <ordinal>30</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.Y</remote-alias>
              <ordinal>31</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.X</remote-alias>
              <ordinal>32</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Y</remote-alias>
              <ordinal>33</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>34</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Short Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Short Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Short Name</remote-alias>
              <ordinal>35</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>36</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Income_Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Income_Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income_Group</remote-alias>
              <ordinal>37</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.416514' group-percentage='0.0697248' measure-ordering='alphabetic' measure-percentage='0.423853' parameter-percentage='0.0899083' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country.Code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EMU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LDC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HPC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UMC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LMY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OED&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, Dem. Peopleâ€™s Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
          <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        </column>
        <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
          <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        </column>
        <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
          <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        </column>
        <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
          <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        </column>
        <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
          <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter5' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter6' name='[Action11]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter2' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter3' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight6' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight7' name='[Action15]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter7' name='[Action16]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight7 1 1 1 1 1 1 1' name='[Action17]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight4 1 1 1 1 1 1 1' name='[Action18]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter7 1 1 1 1 1 1 1' name='[Action19]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region ex. Null' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Filter1 1 1 1 1 1 1 1' name='[Action20]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight3 1 1 1 1 1 1 1' name='[Action21]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight1 1 1 1 1 1 1 1' name='[Action22]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter6 1 1 1 1 1 1 1' name='[Action23]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter3 1 1 1 1 1 1 1' name='[Action24]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight2 1 1 1 1 1 1 1' name='[Action25]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter2 1 1 1 1 1 1 1' name='[Action26]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight6 1 1 1 1 1 1 1' name='[Action27]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight5 1 1 1 1 1 1 1' name='[Action28]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter5 1 1 1 1 1 1 1' name='[Action29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' worksheet='Enroll.FE.v.POP.Scatter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Filter4 1 1 1 1 1 1 1' name='[Action30]'>
      <activation type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter4 1 1 1 1 1 1' name='[Action31]'>
      <activation type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight1 1 1 1 1 1 1' name='[Action32]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight4 1 1 1 1 1 1' name='[Action33]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter1 1 1 1 1 1 1' name='[Action34]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter6 1 1 1 1 1 1' name='[Action35]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight5 1 1 1 1 1 1' name='[Action36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight6 1 1 1 1 1 1' name='[Action37]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter2 1 1 1 1 1 1' name='[Action38]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight3 1 1 1 1 1 1' name='[Action39]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter5 1 1 1 1 1 1' name='[Action40]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight7 1 1 1 1 1 1' name='[Action41]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight2 1 1 1 1 1 1' name='[Action42]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter3 1 1 1 1 1 1' name='[Action43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter7 1 1 1 1 1 1' name='[Action44]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter1' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight4' name='[Action7]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight5' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter4' name='[Action9]'>
      <activation type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Charlene_generaldistrib'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]'>
            <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' field-type='quantitative' max='18111580.128675207' min='-11778625.686535265' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' field-type='quantitative' max='11995195.326984644' min='-6492450.4920529462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#f5f5f5' />
            <format attr='color' data-class='total' value='#333333' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk] * [federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Composite II PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Composite PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1980' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1981' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1982' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1983' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1984' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1988' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1989' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1991' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1992' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1993' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1994' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1995' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1996' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1997' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1998' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dual.Axis.Test'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' included-values='in-range'>
            <min>#1970-01-01 00:00:00#</min>
            <max>#2015-07-06 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll Female'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Rate of Female</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='18' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='22' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#57b99d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
            <format attr='color' value='#4ea68d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' value='54' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rates-All:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country.Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country.Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run fontalignment='1'>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' value='Income Group'>
              <formatted-text>
                <run fontalignment='1'>Income Group</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='rows' value='Enrollment Rate (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure'>
              <formatted-text>
                <run>Enrollment Measure</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.GDP.Dual'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Composite Enrollment Rate (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capital Growth (%)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#a0cbe8'>Population Growth</run>
            <run fontalignment='1'> | </run>
            <run fontalignment='1' fontcolor='#f9a655'>Enrollment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='level-members' level='[none:Country.Code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='58' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' value='58' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1994-12-25 12:24:08.520#' major-spacing='2.0' major-units='years' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GDP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>GDP per Capital Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capita Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita YoY Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='line-interpolation' value='step' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GPI&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d3b348' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Enroll.TEST'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1991</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run fontalignment='1'>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs GDP Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs Annual Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
              <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.Values (copy)]' derivation='Avg' name='[avg:Enrollment.Values (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' scope='rows' value='Gender Parity Index' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Enrollment Indicators (copy)]' value='Gender Parity Index'>
              <formatted-text>
                <run fontalignment='1'>Gender Parity Index</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Primary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Primary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' scope='rows' value='Primary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Second.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Secondary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' scope='rows' value='Secondary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Tertiary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Tertiary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' scope='rows' value='Tertiary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Macro.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Main.Scatter'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]' scope='rows' value='Average Annual Growth in Macro Outcome Variable (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='cols' value='Average Enrollment Rate (%)' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' value='53' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy 2)]' value='Macro Outcome (Y-Axis)'>
              <formatted-text>
                <run>Macro Outcome (Y-Axis)</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure (X-Axis)'>
              <formatted-text>
                <run>Enrollment Measure (X-Axis)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' value='Highlight Country'>
              <formatted-text>
                <run>Highlight Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Macro Outcome Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Enrol Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Enrollment Rate Female (%)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='member' level='[tyr:Year:ok]' member='#2000-01-01 00:00:00#' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='22' />
            <format attr='tick-color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='#2f3e4e' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Gender Parity Index (GPI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='member' level='[tyr:Year:ok]' member='#2000-01-01 00:00:00#' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='#f5f5f5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
            <format attr='band-color' scope='rows' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview GPI (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Gender Parity Index (GPI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
            <format attr='band-color' scope='rows' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#8cd17d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Highlight Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;% </run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#212f3e' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='POP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Population Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Population Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Primary Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Primary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Time-chart'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Years' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash-Scatter.Filter.Problems'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='54625' id='1' name='Enroll.FE.v.POP.Scatter' w='82700' x='600' y='625' />
        <zone h='5500' id='2' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='12800' x='84300' y='875' />
        <zone h='5375' id='3' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='12800' x='84300' y='7125' />
        <zone h='5500' id='4' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='12500' x='84200' y='13375' />
        <zone h='20125' id='5' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14600' x='84300' y='19125' />
        <zone h='12750' id='6' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='84100' y='40000' />
        <zone h='44875' id='7' name='GPI.Dropdown.Indiv' w='47000' x='600' y='56500' />
        <zone h='44750' id='9' name='FE.Comp.POP.Dual.Bar' w='51100' x='48600' y='57000' />
        <zone h='6875' id='10' name='FE.Comp.POP.Dual.Bar' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='13200' x='43800' y='55250' />
      </zones>
    </dashboard>
    <dashboard name='DrillDown.Dash'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Annual Level Details for </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37250' id='1' name='GDP.for.Drill.Down' w='44000' x='44700' y='60000' />
        <zone h='56500' id='4' name='GDP.for.Drill.Down' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' w='11800' x='88100' y='2500' />
        <zone h='37500' id='5' name='POP.for.Drill.Down' w='44200' x='0' y='60125' />
        <zone h='36625' id='8' name='Enrollment.Dropdown.Indiv' w='43800' x='100' y='18500' />
        <zone h='9500' id='9' mode='checkdropdown' name='Enrollment.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='25100' x='100' y='1500' />
        <zone custom-title='true' h='9250' id='11' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='43800' x='0' y='10625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Enrollment Measure</run>
          </formatted-text>
        </zone>
        <zone h='37500' id='12' name='GPI.Dropdown.Indiv' w='43700' x='44700' y='17500' />
        <zone h='5875' id='14' name='GPI.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='27000' x='52000' y='2375' />
        <zone custom-title='true' h='7250' id='15' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='paramctrl' w='44000' x='44200' y='10500'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Gender Parity Index</run>
          </formatted-text>
        </zone>
        <zone h='4250' id='20' type='text' w='27300' x='24500' y='1625'>
          <formatted-text>
            <run fontname='Tableau Light' fontsize='18'>Annual Level Details for</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Maps_basicdistribution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='83000' id='1' name='Charlene_generaldistrib' w='96400' x='600' y='8750' />
        <zone h='9500' id='7' name='Charlene_generaldistrib' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' w='14000' x='85700' y='1125' />
        <zone custom-title='true' fixed-size='44' h='7000' id='8' is-fixed='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='83300' x='600' y='1500'>
          <formatted-text>
            <run fontcolor='#1b1b1b' fontname='Tableau Light' fontsize='15'>Enrollment based on income group</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='21125' id='11' name='Time-chart' show-title='false' w='95667' x='3500' y='62625' />
        <zone h='15625' id='28' type='empty' w='18500' x='78833' y='9500'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#3493af' />
          </zone-style>
        </zone>
        <zone h='15625' id='26' type='empty' w='19167' x='58333' y='9500'>
          <zone-style>
            <format attr='border-color' value='#72c0c7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#72c0c7' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2375'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='13875' id='10' name='Overview Enrol Ratio' w='37167' x='59333' y='36875' />
        <zone h='13000' id='8' name='Overview GPI' w='37000' x='59333' y='52125' />
        <zone h='7500' id='14' name='GPI' show-title='false' w='13083' x='81500' y='28125' />
        <zone h='5000' id='12' name='Enroll Female' show-title='false' w='18100' x='60600' y='28250' />
        <zone forceUpdate='true' h='9125' id='15' type='text' w='17000' x='82750' y='11000'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12125' id='16' type='text' w='16667' x='61167' y='17375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Ratio</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10800' x='70400' y='27750'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13200' x='61300' y='27875'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='125' id='31' type='empty' w='10750' x='82250' y='28125'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='41500' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9625' />
        <zone h='3875' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='14000' x='42167' y='46250' />
        <zone h='5875' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2625' />
        <zone h='13500' id='25' type='empty' w='39000' x='58417' y='51000'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='14000' id='24' type='empty' w='38917' x='58417' y='35750'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview (7)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='15857' id='25' type='empty' w='39000' x='58167' y='44857'>
          <zone-style>
            <format attr='border-color' value='#12827f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='15000' id='24' type='empty' w='39000' x='58083' y='27286'>
          <zone-style>
            <format attr='border-color' value='#12827f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29000' id='11' name='Time-chart' show-title='false' w='94500' x='2750' y='65143' />
        <zone h='15714' id='28' type='empty' w='18750' x='78333' y='9429'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#d3b348' />
          </zone-style>
        </zone>
        <zone h='15571' id='26' type='empty' w='19333' x='58167' y='9571'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#57b99d' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2125'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='12857' id='8' name='Overview GPI' w='37583' x='58833' y='46714' />
        <zone h='14429' id='10' name='Overview Enrol Ratio' w='37167' x='58833' y='27857' />
        <zone h='7429' id='14' name='GPI' show-title='false' w='13083' x='81750' y='19143' />
        <zone h='6143' id='12' name='Enroll Female' show-title='false' w='8750' x='61667' y='19000' />
        <zone forceUpdate='true' h='9143' id='15' type='text' w='10333' x='82917' y='10143'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12000' id='16' type='text' w='13417' x='62083' y='8714'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Rate</run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10750' x='70417' y='18625'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13167' x='60667' y='19000'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='143' id='31' type='empty' w='10750' x='81667' y='19143'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='51286' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9571' />
        <zone h='3143' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='38750' x='58333' y='5286' />
        <zone h='6571' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2714' />
      </zones>
    </dashboard>
    <dashboard name='Overview (8)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='15857' id='25' type='empty' w='39000' x='58167' y='44857'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='15000' id='24' type='empty' w='39000' x='58083' y='27286'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29000' id='11' name='Time-chart' show-title='false' w='94500' x='2750' y='65143' />
        <zone h='15714' id='28' type='empty' w='18750' x='78333' y='9429'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#d3b348' />
          </zone-style>
        </zone>
        <zone h='15571' id='26' type='empty' w='19333' x='58167' y='9571'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#57b99d' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2125'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='12857' id='8' name='Overview GPI' w='37583' x='58833' y='46714' />
        <zone h='14429' id='10' name='Overview Enrol Ratio' w='37167' x='58833' y='27857' />
        <zone h='7429' id='14' name='GPI' show-title='false' w='13083' x='81750' y='19143' />
        <zone h='6143' id='12' name='Enroll Female' show-title='false' w='8750' x='61667' y='19000' />
        <zone forceUpdate='true' h='9143' id='15' type='text' w='10333' x='82917' y='10143'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12000' id='16' type='text' w='13417' x='62083' y='8714'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Rate</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10750' x='70417' y='18625'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13167' x='60667' y='19000'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='143' id='31' type='empty' w='10750' x='81667' y='19143'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='51286' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9571' />
        <zone h='3143' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='38750' x='58333' y='5286' />
        <zone h='6571' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2714' />
      </zones>
    </dashboard>
    <dashboard name='Scatter.Dash.Final'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      <zones>
        <zone h='86125' id='1' name='Main.Scatter' w='80000' x='1400' y='10125' />
        <zone h='5500' id='2' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='16000' x='82200' y='10125' />
        <zone h='5500' id='3' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='16000' x='82200' y='42250' />
        <zone h='19750' id='4' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14000' x='82300' y='17625' />
        <zone h='12250' id='5' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='82400' y='50000' />
        <zone h='7250' id='6' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' w='16000' x='82000' y='67500' />
        <zone custom-title='true' h='11625' id='7' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='20100' x='22600' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Enrollment Measure </run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(X-Axis)</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='9625' id='8' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='paramctrl' w='15700' x='2100' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Macro Outcome</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(Y-Axis)</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3750' id='9' type='text' w='5000' x='18000' y='625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>vs</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Scatter.Dash.Final'>
      <viewpoints>
        <viewpoint name='Main.Scatter' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{471F94DA-871C-4999-9627-40F5EC7BBACF}' />
    </window>
    <window class='worksheet' name='Main.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='204'>
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{49DEDFA5-E2D8-43A3-89AD-E765F3122434}' />
    </window>
    <window class='dashboard' name='DrillDown.Dash'>
      <viewpoints>
        <viewpoint name='Enrollment.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='POP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <grid grid-size='40' />
      <simple-id uuid='{81118CBE-7221-4F54-8F8E-DF73E42F4AED}' />
    </window>
    <window class='worksheet' name='GPI.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{9753E190-40AD-4B47-B4AF-A228A536EC7F}' />
    </window>
    <window class='worksheet' name='Enrollment.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{C2B651C3-3DCB-4FC8-814C-4956DC245808}' />
    </window>
    <window class='worksheet' name='GDP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{310BF565-3CAA-47B4-AEA4-33E491C30F3C}' />
    </window>
    <window class='worksheet' name='POP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{59068638-233E-4D91-BE89-D2B49CF65D29}' />
    </window>
    <window class='dashboard' name='Dash-Scatter.Filter.Problems'>
      <viewpoints>
        <viewpoint name='Enroll.FE.v.POP.Scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='FE.Comp.POP.Dual.Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{302C0DD8-C9BA-4281-8EAD-B79DB47F67E3}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2A45457C-F6CC-4745-8C7B-296A40804B56}' />
    </window>
    <window class='worksheet' name='Composite PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{564FFA84-11FC-4D19-A462-54425D0D6D57}' />
    </window>
    <window class='worksheet' name='Composite II PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{87A04373-E075-4EEA-94DF-406203428BDE}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F66F5775-AC3F-4637-8437-2C1EB6343D4C}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{596A9832-F609-4062-8FB4-2C42C9C3FE6C}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{92CCA1FA-55A3-4DB2-958A-9BD4D807784B}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4F941176-87BB-4365-A3DC-545252B39C6D}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{DEC10AD2-8036-4E22-AA02-15428E9629A5}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4AF9CA13-6C78-436D-A7C8-92EA149DBADA}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D7B0680A-8B96-403E-92F0-52816E19867F}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6C4C6375-2EF4-46D2-BCDA-540F577D5FD6}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8F596492-121C-4D8F-98B8-16D9D71604DA}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6495488D-0FBF-47B2-A22C-6C678361511B}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{091B3F07-1B44-4B68-BEAA-352735E7C559}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B60F8BCE-D4D3-4E4D-9BF8-A0CDC3A29F31}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Enroll.TEST'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{882A2F0C-0A08-4041-AF18-103132868572}' />
    </window>
    <window class='worksheet' name='GPI.Primary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{15EAE7B1-6A07-4961-83E2-5C34678AD406}' />
    </window>
    <window class='worksheet' name='GPI.Second.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{3B6ED21F-6EE9-4ECB-A7EF-185EAE0DB3D4}' />
    </window>
    <window class='worksheet' name='GPI.Tertiary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{D7B19EC8-12C1-4B04-A6ED-281319EA7873}' />
    </window>
    <window class='worksheet' name='FE.Comp.GDP.Dual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9AB43CDC-23E5-4543-9299-550274440713}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC08BB23-6A7C-4ADA-9B5A-A1FCD2A962AD}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6CCC8E50-C914-4C57-9CAB-CC4ED29627EB}' />
    </window>
    <window class='worksheet' name='Dual.Axis.Test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F6B221B2-BDAF-4BA4-9A75-22EBE4589A49}' />
    </window>
    <window class='worksheet' name='Enrollment.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA62A126-7625-4288-B120-AA7627846722}' />
    </window>
    <window class='worksheet' name='Macro.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F31A5A8F-0925-4793-B01C-8804F3440FDF}' />
    </window>
    <window class='worksheet' name='Charlene_generaldistrib'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0A6BC0F7-B042-479B-8187-862A397D8859}' />
    </window>
    <window class='dashboard' name='Maps_basicdistribution'>
      <viewpoints>
        <viewpoint name='Charlene_generaldistrib'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{955B0529-45BB-45E1-A5CC-439E8C2A554F}' />
    </window>
    <window class='worksheet' name='Time-chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2329FCAF-E229-4183-8CBA-58F6B362AD85}' />
    </window>
    <window class='worksheet' name='Overview Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A3087891-D206-46BB-84B4-9BF49C0DD244}' />
    </window>
    <window class='worksheet' name='Overview GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{703C04DF-3741-4B93-93B7-72391EF94E64}' />
    </window>
    <window class='worksheet' name='Overview GPI (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C342667-6351-425F-A702-E5D1425F6ECE}' />
    </window>
    <window class='worksheet' name='Overview Enrol Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{44FE06C4-88F6-4C26-9198-AFFFD4D1C7E5}' />
    </window>
    <window class='worksheet' name='Enroll Female'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5205D116-341F-458B-ACF7-B8C45CD1AE3E}' />
    </window>
    <window class='worksheet' name='GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DAC4E88-14C6-4015-9C17-8DCFE2698F2B}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI' />
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F2596251-84AA-4867-AB8F-6DEFA5338D67}' />
    </window>
    <window class='dashboard' maximized='true' name='Overview (7)'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7EBF7B8E-AFF0-4948-86A3-2CB847098B4A}' />
    </window>
    <window class='dashboard' name='Overview (8)'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{3D00DB6E-7698-4A15-BD8D-656C9D34A8E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Composite II PoC' width='119'>
      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
    </thumbnail>
    <thumbnail height='192' name='Composite PoC' width='192'>
      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
      JliWxf8HHxWP0f7DXSwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dash-Scatter.Filter.Problems' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3hU1daH35lkJslk0ntCOoQaSuhNihSBT0Avil4b4L2iV+woXKXEgg3B
      LlxFiigWVJpYkCotdEJLA9J7nWQmyWTK+f6IGROSkEQSEsh+nwcYzpzZ53faXnuvvdbeMkmS
      JAQCgUDQ7pC3tgCBQCAQtA7CAAgEAkE7RRgAgUAgaKcIAyAQCATtFGEABAKBoJ0iDIBAIBC0
      U4QBEAgEgnaKMADNgGQ2odWVtaqGCn05+gpDrc+ClkVbom1tCdcNnbYEs8gauqmwvnJDubaQ
      jz/6kJTsIiSTkXtnPc7g3p1bQ5uFNe+/yYh/PkmIh4q05Ms4ewegtqklvU6++Phtjl5Ipuq5
      /fec+fTu6t+s+nRZCSz9ehcvP/d4g/tG7dzCFz/+hkwmA8DOrQPvvPLfa9ZweMcPaBxCmTxy
      UI3PzY1k1BOfkkXnkMBa333x8dtEnU9GJpPw9gvmgRkzCfJ1r7csTWEupUZrfDxcml1nXZo8
      fYOZMWsmgT71a2oqkS+/yDvvfFDv97XP0cTCBa/x6muLr+m4OWkX+fDjzygzmCjX6xk5/nam
      /d+4ayrzSq581/73zmKmz30LP7WiWY8jaD2uqEUlliz8L/0nz+C5UYOoKNeRllXUOsqqcdes
      /2CjsgVg24/rGTn9Obr6qhv126SLabzxwcc4WLWcPplMzp/1eYMUZKVz94wnGDmga4tpaIqe
      pmLWF7Dyix94N/LZWt8lXUzjrQ8/Ri2XSDh3jIULXmbd6g/r7WbGnT1CvMaB+28f0TJiq2ly
      kEvEnj3Ciy9G8uWaj2iuyyNr4ELXPkcrnpv71DUd06DL59n5i5kX+SbhHf0xVpRx9Pi5ayqz
      Lq5812QyebNdN0HboIYBKEqNpVDpx+RRlS1Hpa09IUH2GMpLeHPJEgq0egxGM48+OZcenfz5
      ds1HXM7UUlhUQKFGy7CBvYm+kICmsJCn5i+m55/7JKQXUVJcjEZbzvMvLSLUz50TB35j1Vdb
      sFHI8evUl+eemIkcibUfvcO5lFzMBgMT77yPMcP78fMP67l1+qOc2LWRXXuPcS5pMU4qJQ/P
      mYfKkMHS9z/FxtYWWwcvXpz/NAp5zcf0yoe2oqyIN19/kzKTnPJyI/MXLMTL1YG3lyxCX25G
      o9MhVznj46QkM7cAjdbA28vfwcnWmrUr3+VcYjYyYwVB4YN4fMbdjSq7BnV0o79d8xF5pRKX
      E1PQFBbwyJPzGdCrE9+u+YghE+7i8/eW4t97GA9OvbXOe1EfjblHR/f+xJebd6GUSfQeNp77
      /zGB0wd/Z8/xC6SnpFCq0zJw9GQeuH0ILy58g5j4FF58MY+gzhE88tC0WtdaJpMRFj4AN9ln
      lJqgMCWG9z78DDuVihJtGU88Px+KUli15jtKjFZcOPwboyZMY0S/kHqvXVlhBp989SvPzZkF
      QNKF40RdLOLO0X15bckbGGXWlJXreeKZ+YT4e9S+/zIZXXoOwtN6DToTxB2u6/mDt19dQJlB
      orhEi7Xak4UL5mFVksE3u04wc/odAKz54D2mP/40qmqNCnNFCQsXv4YkV6ArLub2f84kyNFc
      6xzHDo/g66+/4LHHngQkvln9EftPJoDZwLip9zNl3NA6r/1Dd0+yHGv/jp8ZPeV+wjtW3ndr
      pR1DhvQH4PTB3ylVeROz/zdiC4wsjZxX5zHeffNNZs+dh8paxterPsTs0on7/nEbZQVprNpy
      gM4eVrXeNYANqz4iMzWDoqJCHn16Hv3DO9X77AluAKRqHN//s/Th6k3SlWz49B3p6+37JUmS
      pIKsZGnGv5+UzJIkLY98Tjp87rIkSZL0w+r3pXUbf5UkSZLOHNwhfbxuqyT9uc/x+HRJkiQp
      +fxRac7zi6UKXZ704MzZkra8QpIkSfrfskjpp72nJENxuvSv5xZLkiRJZpNRysrKspSRXlK5
      7yfLI6UL6SUWbXOfmC0lZeVLkiRJX/9vubRp57Ea2l9+eo4Un5IupaenS+npaZLeYJK+XLlU
      2rz7qCRJkhR/fJ+04K2VkiRJ0uOPzJBy8jWSJEnSi4//Szp3uVL3mg/ekKLOVX7OzK7UJJlN
      0n/n/EtKKdJL2ow4afGyjyRJkuotu4rt6z+W5i94TVq5cqW0cuVKaePmXyzn+HvUWUmSJCk7
      4aT08vIVlu2zHnlcOnI65qr3Yt+2DdLWvYcl6YrPDd2jCm2eNOuRx6WyCqMkmY3S3P88IqXk
      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
    </thumbnail>
    <thumbnail height='192' name='DrillDown.Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='88' name='Enroll Female' width='208'>
      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
    </thumbnail>
    <thumbnail height='88' name='GPI' width='248'>
      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
      DCkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GPI.Dropdown.Indiv' width='192'>
      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
      Nm0CCNEI/x/DV0AFU2PiLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Main.Scatter' width='192'>
      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
      mAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maps_basicdistribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Overview' width='384'>
      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
      lWCLG8UTQPX4UbwBFI8fxRMg6PaAplM6qzUTCASCS8esi8FJkkRMjJWhYWN/Li6JGJwkYU2N
      RRkKonoDYsKUQCBYkMx6FJCu69M2/pcMXcffLlJRCgSChc28mwfgcNhZu3JZZFC4raNrWp9b
      t6qYoyfLp7WvKFuUPdP7irLnd9nzqS7zqex55wD2fHh43PvpdgetW1V83l1HomxR9kzWQ5Q9
      f8ueT3WZT2XL595FIBAIBJcjsz4ILBAIBIL5iXgCEAgEggWKcAACgUCwQJl3g8AAV2/bxOce
      vJdPP/bXpCYn8heffQAkiWeeexmrxcLtN+1k0OPlF0/9kb/52hdQFIVdez5i/8Fj0y4nPzeL
      vJwsli7K51e/fY4Na1eQn5vN3/3gP6ZVx8K8HL766Kf5zTPPc7LsFN98/EsEg0Gqauqpa2xm
      66Z1JMbH0dDUQkyMFavFQqzTzvf+9WczWrbVasFoNDI46OHp516e0bLNZjNms4lN61by6ON/
      h6IoM1Z2YkIckiTRPzDIb57500XVOxgKsXxpEa5YJz/6r19x923Xn9e5PNt1UpCXHSn7J798
      mkc++TECwSCd3T08/ezF/d4lFVU8fP9dhBSFV9/+gPWrl8/YuTyz7LUri2fsXJ5Z9o4tG2bs
      XJ6qruPeO2/CYrHw458/xbLFhZFzMx3Op+w7br52xu7LM8u+/aZrZuxcnln2rTfsnLFzaUjL
      XfLdaf2yl5CQomC3x3DoWAlXb9vEno+O8OfX3+WTd99KUWEez7/yFgePnKQgL5vOrh6e/P2L
      fOLuWyc4gLOV8/SzL3P4eClXbFzDs39+g85uN9kZaRw6VjKtOppNJto6OkEHVVVJSoznp7/5
      HXfcfC0vvPI2h4+Xsqp4CS+/+R57PjxMdV0j269Yz3t7D8xo2Vs2ruWPL77GR0eOT0uD7nzK
      3vvREWrqGklPTWH/waMzVvYrb73P6hVL+befPsH1V2+76LJtMVbeem8vyYnxNDW3cbq24bzO
      5dmuE6fDHim7tr6JV99+n253L2tXLuOjwycuqt59/QMMDHqpPF1LemoyWZnpM3Yuzyz7d396
      ZcbO5diyM9JSSIiPm7FzmZqUyK+efo5jJ8u5Yed2jpwoi5yb6XA+Zf/mmT/N2H15ZtkpyYkz
      di7PLPvJ378wY+dyXnYBtbR1RJYPHDnJx++Jb/4aAAAFy0lEQVS4kUcfuh+H3U5KUgKFeTl8
      /UsP4+7tZ8vGtXzl8w+SmBB/XuUAbNmwhgNHTqDr+rh9p0NHVzeKogLQ2e0mNSWJr3z+QQrz
      sgFwxTqwWix0dvWQn5vFX3z2kwx6picadz5l7/3oMNs2r+N73/7GjJcNcP/dt/KHF16d0bI7
      OrvxDvn4yucfZOWyxcjyWTLUT6Ps5rYOrr96K2kpSXiGhs77XJ7tOjmz7Cu3bPj/27v/mKjr
      OI7jr1PT45BTV85faWaoDEXFgT9z/lgOp6ETsNCYWTmXtWo53dqca2ttNZfL+Yc/1i+Wyx8x
      pqaRWvljShlTFqapoQee/FSHCJi4o6M/2pzeLO70WxDv5+Nv9t4H3t/vnsfB3emlrAz5Si89
      8M/kytUaJcQP1fjkRJVXVju6y9DZknO7vHN2WUWVo7s8cORHvb5koRZkpMoT5Xb0vgyd7eR9
      GTrbyV2Gzpac22WbfAroTrV19Vq97mPFDR6kIbED9Wjf3iooLJI3JlqdOz+ktRuz1b2bV7Nn
      TItojvTX5xK888H6Bz5jc3OzNn62VR07dtCS5zMlSc/OnaXtO/Nuf827azborTeWKMrdRTcb
      w/8AmJZm1zfcUO7u/RoWN1gdOrgUDIb/T10tzY7pGq2YaE/YL7KKZPYXOV8pEGhSj+7eiM58
      r9kj4odqzfpPNXlCsuJiByk/jEdFfyf0OrlzdvKoBB0vOqUfCgq1ctnSiN/KPPTcyYkJytn1
      ja7WXNP8tKd1KP8nx3YZOvtssc+xXYbO/mxLrmO7LK+8rPfWbtL0KRNuf37I/QpntlP3Zehs
      J+/L0NlO3pdtMgAZs1PUFGjS4qx52rP/oNJTU1RX36AtuXsU09WjrHlzVFl9RcW+i3p5Uab+
      CAaVvXVHRHM8UW59/e1hBYNBRbndei4jVYFAQJlzZ2rbjrx7nOpuE8eOVvyQJyS5VFffoOTE
      BHXzxuiTzTmSpHPFPpVVVEmSRo8YppnTJ+v4z7+EdZFFMrtXz4c19cmx2nfgSFgXWaSzt+S2
      /Pzl/cyeOmmcHuvfV9lbW37OuKXZHk+UXlyQrmu113X0WKEWZ82LaJf/dJ306dXz9uy87w4r
      PTVFbncX5eza+8Dnvtl4S/PTZqlTp07a/OVOJY0a7tguQ2c7ucvQ2U7u0uvtqsy5M1VWUa29
      3x+5azfbd+a1+Gg9ktnpqSmO3Zehs5+aPN6xXYbOjn18gGO75HUAAGBUm/wbAADg30cAAMAo
      AgAARhEAADCKAACAUQQAAIwiAADahVXLX1X80FgNixusN5cuau3j/C/wOgAA7cLAAf204rXF
      ago06f11H2lc0khNmTBGRafP6tSZYmWmzZLL5dKKt1dr1fJX1KO7V0ePndCkcUnyXbykDzdk
      t/a38J/jNwAA7UKpv1wVldXyl1WosuqyFj4zR4fyCzR7xjSVVVbpQolfA/v3U59ejyhp1HCt
      2/S5oj0e1dU36HB+QWsfv1UQAADtxpnffDpT7JMk3fi9UY23bmnbjjy9MD9NF0r9ulhWIZfL
      pVJ/uc6X+FVQWKTd+w5q5bKlrXzy1tEm3w4aAO5Hc3OzrlytUU3tdZ389ZzGjh6p2ut1Onrs
      hMYnJ+rc+RKdPH1WNxsbdb7Er/59e2vKxDHas/9Q2O/w2p7wNwAAMIqngADAKAIAAEYRAAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACM+hMnmk+8DJO+AQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Overview (7)' width='384'>
      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
      TIHfm1UZ1224kplNdfh9HiwWM5vWX8HPfvMAly2aR1GBb6qMyvISgsEwC+fO5pFt23lqx86s
      +ya3XLuemU31uF0O7HYba1ct56e/uZ+1VyzHZrWy9cntPLJtO9WV5XSf6eORbc/xxDMvUl9b
      RSKZXb/sLTdspKW5HqvVgsvpYMVlC/nZbx/gho1ryaQzbH1Sfxx1NZU01FVjs1r57YOP8p2v
      35TV/QPceuMm5rQ0YTQYKCrwMW9OCz+/50EWzZvD0kVzCYUj3H3fVr5xyw3MaKyjddYMFs2b
      nfX9Fxb4WL/6cubOngnApqtWc6y9g2dffIW7bt/MmhVL6esf5L4/PMmdN19PLB7nvkee5IWX
      3+Cm6zdkVUZ5aTGrli9m/pwWADZfu549Bw6z89W3+eatN7Jh7QpOnDzN1m3bueOm65g9s4nj
      J0/zyLbtnOrszqqMmqoKli6cy4LWWQDctvkaXn59F2+8s487b7mB665ew/5DR3ly+05u33It
      L72xi0e2bScSjWIwZDd4sLmhlnmzZ7Bwnl7GN2+9gaeff4lDbSe46YYNbLn2Kl7ftZcdL73O
      rZs38a3bN3P3fY9gMZtZMn9OVmXMmdnE7JmNzG/Vn6s/+frXePiJ5+ju7ePaq9Zw5y03sHXb
      dgYGh9m4dhXrrljGjIZaqspLs7p/gIVzZ9HS3MDsmXq7dNftm7l/61NMBIKsW7WMb956I/c9
      so1INMrqFUvpHxzil/c+RCQSY3GWj2PZ4vnMaKpnRmOd/lzddiP3PvQEKArLlyzgrts3c/d9
      WzGaDCxdOJdli+fz3Iuv8si27QSCoazKuOLyJTQ31FJfWwXAnbfccHEFQCQa4//+/F7Gx99P
      ZrvNijY5ZGzB3Fl4XE7+6s++SX1NFWTA7XISCIYoKSr4yP098/zLvPrm7qnLmqbhdjnpPNND
      U30NwVAYVVUwGoycOt3N3fdt5cSp09Oq8+PPvMDbe94fk20waHhcTrp7+qirrSQYCmOzWgiG
      w3T3niWZSvHdb92GpqmMjGZ3VPvw48+y9+ARABT0E09ul4Pes/1UV5YRCIbwe930nR1kdHyc
      kqICvn7TdbS2NGf9OH7/h20cPnpiqgyT0YDbpR+NVJQVEwiGKC8tor2jk9HxCcYngiyYO4sd
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Overview (8)' width='384'>
      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
      ACGEyFL/PzMntK452h9xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='108' name='Overview Enrol Ratio' width='384'>
      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
    </thumbnail>
    <thumbnail height='108' name='Overview GPI' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABsCAYAAABjNmXyAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIDElEQVR4nO3cf2zU9R3H8Vd7dxbaQflR+f1jaClQxq8qOHSu0Q0V7AYDQUlK3BQnRpgs
      0k1NFoZkP4RFDEJUBKOO2g3RRCAhZj9gajsolt+DCUhhZsnC+oMqhWLvevvjrh3S9vqlvc/R
      8H4+/v1++r7P5dV+X/f93l2TwuFwWAAAc5Kv9gYAAFcHBQAARlEAAGAUBQAARlEAAGAUBQAA
      RlEAAGCUv60F43OnJ2IfAIAE4woAAIyiAADAKAoAAIyiAADAKAoAAIyiAADAKAoAAIzqcAGU
      bC+Kxz4AAAnGFQAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBR
      FAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBR
      FAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBR
      FAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBR
      FAAAGEUBAIBRFAAAGEUBAIBRFAAAGEUBAIBR/ngMKdleFI8xAIAE4goAAIxKCofD4VgLxudO
      T9ReAAAJ1OErAG7/2FOyvYjcDSL3aw+3gADAKAoAAIyiAADAKAoAAIyiAADAKAoAAIyiAADA
      KAoAAIyiAADAKP4VBAAYxRUAABhFAQCAURQAABhFAQCAURQAABhFAQCAURQAABhFAQCAURQA
      ABhFAQCAUQkrAJ/Pp9SuXeI+Ny21q5KTk+I+1xpX+aBzI3dbLs/b7/oBZ+ZN0d133q6xo0eo
      S0qKTp76TGUHDmvthkLVfH6uXTP79cnQgh/NVc7YbA0ZNEDnas9r/6Gjem/7X/SnncVxfgbX
      Nhf5NOqR3l3z82dr8sTx+s0Lr+jj/YfjtGt0lIvcR2XdqDu+dYuyR2Rq1Igb1TO9u/79nzM6
      dqJcGzZu1pFPTsT5WcCr1vJ2+s/gFj0yTw/n39fisRPlp7XgyaWqqKy+oplDBg3QuuefVb++
      1zc7Fg6HtfLF9XrrnW3t2q81LvKRIldl8+ZM17z7Zygttask6dU3N2nthsIO7RfxEe/c09JS
      tWh+vubMmNbq1Xg4HNaK1etV9C5/m4kWK29nBTB96ne07KmfSJJ2Fpdq3Rt/0JmKKk3JvU1L
      Fj4kn8+nQ0eOad5jBZ5nJicna+tbL2tg/76qq7uoX616WcW7yzR4YH898eiDyhmbLUl6vGCZ
      ikv3tmvfVrjI57pAQLNnTNX8/PvUs0f6V45RAJ2Di9xf+t0vNXniBEnS4aPH9beSUu09eESh
      UEiTJ07QPXferqGDBygUCmn2Q0/o5KnPnDw3NNdW3s5uAc2dlSdJKt17UAVLn1N9fVCSVPTu
      Np2rrdXyZxZrTHaWRo8crn/887inmd+efLMG9u+rhoYGPfmL3zad5Kuqa7ToqeV6bfWvNSJz
      mObOyqMA2uAin9zbJqpg4cOSpAt1dSrcvFUZvXpqxrTvunkSuGIuck9JSVF9fVCr172pjW9v
      0aWvKfcfOqrCt7fojxtWqX/fPvrmTeMogARqK28nbwKPyc7SyOE3SJJWvfR604M22vr+jqb7
      gXNmTPU8d3Z07Ye7ypqd4Gtrz2vN+o2SpFsn5WhAvz7t3v+1zlU+4bD0ZX29Cjdv1b0P/Fhr
      Xt2oL87Vxm/j6BBXuX+062PlL1ii3296Ty3dUPj8i3P6+579kqSvDxnY3u3jCnnJ20kB3JIz
      TpL0afm/dPTYpy2u2fb+DknSpJwxnudOmjA2+rN/bfF4Sek+VVXXKDk5STdP8D7XGlf5lO49
      qGn3P6KVL65XVXVNxzeKuHKV+2uF7+iTE+Ux1wwdHDnxV1Sd9TwXHeMlbycFkNG7pyTFvA3z
      0e7IsYxevTzNTO/eTYFA5I5V8e6W54ZCIe0uOyBJ6tPb21yLXOQjRV7ptedNYySGq9zbkj/n
      +7pp3GhJ0r6DR+I2F7F5ydtJAVyfEfnliXUyqKyKHAsE/Erv3q3NmX2iM89fqNP5C3WtrquI
      zm188mjORT7o/BKdu9/v008f+6GWPB55X+iDkj3as+9Qh2bCOy95uymA6Mm3srr1y73a8xd0
      8eKX0fVtv9rIiK6JNVOSKqOXmBRA61zkg84vkbkPGTRAb6x9Tg8+8ANJkduDP1u2st3zcOW8
      5O3kU0B+f0CSFAwGY64LBoNKSbmu6dZOLI1r2pwZCkbXB7xs1SQX+aDzS1TuM/OmqGDRfHXt
      EvnG6cZNW/TCK68rGAy1ax7ax0veTv6yq6KNc/lnwS8VCPiVlpYq6f+v2mNpXBNrphT59qnX
      mVa5yAedn+vcAwG/nl68QDPzpkiSqs/WaNmKNdpZXNrOHaMjvOTtpADOVFRJknrFeODGYw0N
      4TZv60jSf6Mz07t9TT6fT6FQy68mevfsEVlfWXVFe7bERT7o/Fzm7vf7tHbFUk3KiXxSb3fZ
      AT2z/Hl+d64iL3k7eQ+gInryzR6Z2eqa7JHDJUnVNTWtnswvVVl9Vg0NYSUlJWlU1g2trhs9
      IvMre0BzLvJB5+cy96cXP9p08t/x4S4t/PmznPyvMi95OymA4ydPSZJunTih6RX55e6dkitJ
      OnHytKeZoVBI5acj3yDMu+uOFtdkDhuqrMxh0T14m2uRi3zQ+bnKfdw3RmrW9+6WJG3/8wda
      snRFsy8dIfG85P0/JYtGlV6N8CIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='108' name='Overview GPI (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABsCAYAAABjNmXyAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAB/ElEQVR4nO3d0WnCYBhA0VrEedzAEVzANTqFaxQcwQ0cqi9/J2iEJiSBe85rEvngf7h8
      EfQwxhgfAOR8bj0AANsQAIAoAQCIEgCAKAEAiBIAgCgBAIg6vrvhfLmuMQcAK7MBAEQJAECU
      AABECQBAlAAARAkAQJQAAETNDsDr+VhiDgBWZgMAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiHr7
      fwAA7NP318/k9dv9NHndBgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAEHXcegAA/ud2P816
      3gYAECUAAFECABAlAABRi3wJ/Ho+lvgYAFZkAwCIOowxxtQN58t1rVkAWNHsDcDrn/14PR/O
      Ywecw744j795BQQQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAEOWnIACibAAAUQIAECUA
      AFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQJQAAUb/JqyY9AsQu5AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Overview Map' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='POP.for.Drill.Down' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter.Dash.Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Time-chart' width='384'>
      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
      gm3lTuvLHOjtHvUPa7zc/gBrf//jtO3bjdPjGdmrt6wch15+gRW3fgjDMHC4XKy6/SNE21vY
      +diDzFi1dlzXLM9YdTEOl5vu44dPq32wr5dEdyeV8xZhmCaXfezPAUj0dLH14Z9z5ac+O+aG
      +k0un491v/9JWvftwuXxvq12i0MbX2DZrXeMzCPW0Xbq/MXsca+b+hVrcPz/7d37U1TnHcfx
      9zl75S53BOS2LMgC4h0Q0AhR0XqbtEkTkyZjmmbaSftLfusv+SfanzpNb2nSJm2SxsTEqlHj
      BRVQ1HhBQECuC6Lcd5ez59IfDq6gUM1MOinhec0ww3DZ+Zxnz+6z53me832s1gfZp8e//SPD
      jA16Kdn9Y2RZZt1zr9B3/TKy1YY9POKRN4q5WJ1OSve9St/1K9icYWiaSsvJo5Tu+ylJucu5
      8M93uNfVTnzmk5XweNjaZ1+hs7GOsYE+JEnGYrPRc+UCW998C13TOP/e22SuKiVrbTnJ7gJu
      njhMZ+NZcjc89djHTitejWSxMNTRhqFpOCOjaDl5lPUvvEqyu4ALH/6Ve10dlL/0OmCO/Ta8
      /ycSXW4k6fFts/bZl83s3j4kScJqt9N9qYGtb76FoWuce/f3ZK4uQ5Ikbp09waq9Lzz2XAll
      L1qJJMsMdbShaxqOiEgz+/P7Sc73cPHDdxn19rL++f30Xm3CYrVhDw9/oufU5nBStu81eq9d
      wh4egc3pJC4jm4Ka7Qx1tKGpKo7I+a9wHye1sARJlhjqaMXQVBwR8eSUVtHVdJ7hni5k2YIt
      LIzI+CTKX3odb8s1rh89SOX+N54o/5ofvkhn41lG+3uRJAlndDRlP3md7suNWGw2bGHhRMQl
      UPOrX2MYBl0Xz9N25gRFtXsen92zAkkys+u6SlhkLK7yjXRdrGe45zaSxRK6/+j+8NOT3uNg
      czgp3fcavVebcEREYnM6iU3LwLNl58JbBWQYBqqioKsquqqiBYOoUwHiM13klFYxcXeIxJw8
      DMOg7cwxcjc8hSSbk35acPr/dA0tqDB9C8QsWjBo/p2howWDYBhY7Q7cVTUoPh/J+YUA3Lvd
      jj0sPFSDpb/5KpoyRXTSUpyR0Si+yW+QPWc6+x2SXPnmJ+gzx8zxT1kmGPDTeeEcit9HYHxs
      3rpCmvpodovNRl5VDYrfR0q+x8ze1YHV6QzdhGMYBq2nvsRduXneF0Io6uqmAgAAB0xJREFU
      u3Y/u2J2GBnZuMo2Mj40SFLu7OzydLvLVivuymoMXZu3fs797IY+I7vVzB70+4hJSUNVptA1
      DV0Nous6WtDMoalBdF1Dnec51TUNVXnw2LqmEvT7yF5fQWK2G4vdjj0iEu3+8U1/jfT3MD7g
      xRkZRUKWi8l7Q/O2i6bOaBdlirj0LFwbNjF+x0uSuwBVmcLQzeyGrqP4JulsPIvi9zE1PjY9
      6T7HZN6s7MqD7GsrSHTlYbHZcERGhX6nqxq6qoJhcOeWeYU6X92qWeejNjN7ppl9sJ/kPI/Z
      7rqGHlQxdB1dDSLJMu7KapAk4qeHL+d8TpVgqN0NXUe2WMirqkENBEjJK8TQdcJj48mtrGZi
      aJCU/CKzHZUghjF9zDOuIuY8HzXz9awpU8SmZZJbsZmxAS8p+YUE/T7SileTVrSSYMBPRFwC
      3uaryFYLCZku1KnArCvPh9tdn3HOKH4fWWvLSXIvR7JYcEbFYOg67orN2MMiiE3LYNRrXu1q
      ikJgfHTOm/RmnTOh7AqxacvM7N7+GdlXkVa8iqDfR3RKKupUgO4rF8haN/eQ3oN2Vx5qd9ls
      d2WK5DwPGAbhS+IW3o1gim+SKwc/Cg2VhC+JI6dsI5cOfICha2SvryTVswJNDdJy8kvyN21B
      tlhQFYWrh/6F4vdhGDqO8EiKavditc9e7dJ8/BDjg150XUeWLRRu203bmWOMDXiJTc+goHp7
      aPIrNj0zNMve1VRPz9UmMCApNx9X2cZH3kwV3yRXPv/IfIECYUticZVvMrNrGtnrK0j1lKCp
      Ki0nj5C/aau5wkNTaT9/ioHWZqwOJ56aHXNORjaf+DfjA/3T2WUKt+15kD1tGQU1O8zsTfXE
      pi4LTSSrikJb3XHyNj6NLM+9IsLM/nFo/D8sJpbciqe49Mn76JpG1roK0gpL0FWVmzOyG4bB
      tcMHGOntJiY1HU/NjjlXGN08cZixgb4Z2XfTVneCMW8/S9KW4anZQWBynOtHPkOZnCQhJ5ec
      0iquHf6UqckJDF3HHh5Bce0erA99MrrT3kJnQx369DBFqmcFstVK+7lT2BxOimr3EBEbz0Dr
      DdrPn0aSJFwbNuGIiOLmV4cJBvw4o2LwbNkZWrERahe/j68//zg0/OWMXoK7sppLn/wdXdXI
      XFtOevEq/KMjXDvyqZk9OxfXhk10NtQx0HIDi91OQfX2OSf277S3hiYCJVlmaUExVpudW+dO
      YrU7KKrdS2RcPANtzbSfOwWShKt8I0mufDoa6kjMzp13Tifo93FlVvYY3JU1XDrwPnowOJ19
      Nf6xEa4d/gxlcoL4LBfuqmqaj33Bva5OolNS8Tz9gzk/lLScOspoX0/oOS3YspPO+jOM9PUQ
      k5KKZ+suMAwa//EXglMBUj0lZK+voKupnsHWG6FjdpVvIj5j9pVpMOA3s0+vtnFGxeCuquHS
      gQ/QggpZa8pIX7GGu7fbaT5+CNliZXl1LdFJS2k+foiR/h4sVhs5ZRvnXBAy1HmLjvOnHrR7
      fhG2sDDa6k5gtdspqt1LRFwCrae/ZLC1mYj4BIq27UFTVW5+dZjxQS/RSSlm2zx0PgYDfr7+
      /OPQSiFnVDTuqqe5/OkHqIpC5uoylpWs4W5XB83HvkC2WFi+uZbY9EzGBr0M99yec87lvtbT
      xxjp7XrQ7jU7uH3xHMM93UQnp1C4bTcSEg0f/HnhdQCCIAjCt2PBDQEJgiAI3w7RAQiCICxS
      ogMQBEFYpEQHIAiCsEiJDkAQBGGREh2AIAjCIiU6AEEQhEVKdACCIAiLlOgABEFYUAZabzB0
      +xZg3sXeUX8mVBlA+GZEByAIwoKiTgWo/9sfCQYCdDacoftyA5Iko6mqWaJ5unaQrusEJsZD
      JRd0XQ/V4bpf02pqYnzOWkCLxfeiGqggCIvHUk8JraeP0XLyCJ2NdWx4+ecovklOvf0bDMPA
      ERlF5f43OP2H3zI1MY4S8FHx8i+YuHuH2xfPMTE0SObacrqa6gGzFk/l/l/+153Bvq/EFYAg
      CAuKLMsU73iG60cPkpiTx5K0DLouN2J1OCh94VVG+3sZ6eumaNtulldvxxkZjbf1OmpQof/G
      1+Rv3kZceib+0REKt+5i5a7nnqgc9PfR4jxqQRAWtLhlWUQnLyVr3QYkSULxTTI+6OX60YPE
      Z2Sh+H2cfed33OvuwOpwYkwP86SvWEPm6jISsnIp3LqL1pNHOf/e26hTge/4iL4bogMQBGHB
      kSQJWbaEhm0Sc9zoum5uWh8Zbe585ZvAGRUzax8H2WpFkiSGe7sY7e8hpaAY//iouQfFIiTm
      AARBWJA8W3YSlWDui5GYk0fZSz9juLuThCwXKQVFrH5mH/7REUp2/YiI2ASsDgcR03t3R6ek
      EpueiW/4HmUvvhbaiW+xER2AIAgLUlrRytD3kiSRnLuc5NzloZ9lrSl/5H/u745mczjJKa36
      34f8PyeGgARBEBYp0QEIgiAsUqIDEARBWKT+AxlHtUI311GCAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
