<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <DashboardGridOverlay />
    <DashboardGridSize />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='W209_WorldEduStats_Overview' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
        <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        <members>
          <member value='&quot;GPI-Composite&quot;' />
          <member value='&quot;GPI-Primary&quot;' />
          <member value='&quot;GPI-Secondary&quot;' />
          <member value='&quot;GPI-Tertiary&quot;' />
        </members>
      </column>
      <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
        <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        <members>
          <member value='&quot;Population Growth&quot;' />
          <member value='&quot;GDP per Capita Growth&quot;' />
        </members>
      </column>
      <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
        <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        <members>
          <member value='&quot;Composite-All&quot;' />
          <member value='&quot;Composite-Female&quot;' />
          <member value='&quot;Primary-All&quot;' />
          <member value='&quot;Primary-Female&quot;' />
          <member value='&quot;Secondary-All&quot;' />
          <member value='&quot;Secondary-Female&quot;' />
          <member value='&quot;Tertiary-All&quot;' />
          <member value='&quot;Tertiary-Female&quot;' />
        </members>
      </column>
      <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
        <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        <members>
          <member value='&quot;Composite Enrollment-All&quot;' />
          <member value='&quot;Composite Enrollment-Female&quot;' />
          <member value='&quot;Composite-GPI&quot;' />
          <member value='&quot;Primary Female Enrollment&quot;' />
        </members>
      </column>
      <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Ratio of Female&quot;'>
        <calculation class='tableau' formula='&quot;Enrollment Ratio of Female&quot;' />
        <members>
          <member value='&quot;Gender Parity Indexï¼ˆGPI)&quot;' />
          <member value='&quot;Enrollment Ratio of Female&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Filter On (copy)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Composite-All&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tertiary-All&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='R_Munged_Final_B_Sunday+' inline='true' name='federated.1y9ncyu0j61v2319xoh3217e9wty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='R_Munged_Final_B_Sunday' name='textscan.1l5u1ps12oi0mw14zwktj1peh4jz'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='R_Munged_Final_B_Sunday.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='EdStatsCountry_Modified_KeyCols' name='textscan.0q4hh8t0rubdn8161ehou1jq97et'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='EdStatsCountry_Modified_KeyCols.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[R_Munged_Final_B_Sunday.csv].[Country.Code]' />
              <expression op='[EdStatsCountry_Modified_KeyCols.csv].[Country Code]' />
            </expression>
          </clause>
          <relation connection='textscan.1l5u1ps12oi0mw14zwktj1peh4jz' name='R_Munged_Final_B_Sunday.csv' table='[R_Munged_Final_B_Sunday#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country.Name' ordinal='0' />
              <column datatype='string' name='Country.Code' ordinal='1' />
              <column datatype='string' name='Indicator.Name' ordinal='2' />
              <column datatype='string' name='Indicator.Code' ordinal='3' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
              <column datatype='real' name='Indicator.Value' ordinal='5' />
              <column datatype='real' name='GDP.Capita.Constant' ordinal='6' />
              <column datatype='real' name='GDP.Capita.PPP' ordinal='7' />
              <column datatype='real' name='GPI.Primary' ordinal='8' />
              <column datatype='real' name='GPI.Secondary' ordinal='9' />
              <column datatype='real' name='GPI.Tertiary' ordinal='10' />
              <column datatype='real' name='Primary.Enrollment.All' ordinal='11' />
              <column datatype='real' name='Primary.Enrollment.Female' ordinal='12' />
              <column datatype='real' name='Primary.Enrollment.Male' ordinal='13' />
              <column datatype='real' name='Secondary.Enrollment.All' ordinal='14' />
              <column datatype='real' name='Secondary.Enrollment.Female' ordinal='15' />
              <column datatype='real' name='Secondary.Enrollment.Male' ordinal='16' />
              <column datatype='real' name='Tertiary.Enrollment.All' ordinal='17' />
              <column datatype='real' name='Tertiary.Enrollment.Female' ordinal='18' />
              <column datatype='real' name='Tertiary.Enrollment.Male' ordinal='19' />
              <column datatype='real' name='Population.Growth' ordinal='20' />
              <column datatype='real' name='Total.Population' ordinal='21' />
              <column datatype='real' name='Pct.Growth' ordinal='22' />
              <column datatype='string' name='Indicator' ordinal='23' />
              <column datatype='string' name='Education.Indicators' ordinal='24' />
              <column datatype='string' name='Macro.Indicators' ordinal='25' />
              <column datatype='date' date-parse-format='yyyy' name='Year.X' ordinal='26' />
              <column datatype='date' date-parse-format='yyyy' name='Year.Y' ordinal='27' />
              <column datatype='real' name='Indicator.Value.X' ordinal='28' />
              <column datatype='real' name='Indicator.Value.Y' ordinal='29' />
              <column datatype='string' name='Indicator.Code.X' ordinal='30' />
              <column datatype='string' name='Indicator.Code.Y' ordinal='31' />
              <column datatype='string' name='Indicator.X' ordinal='32' />
              <column datatype='string' name='Indicator.Y' ordinal='33' />
            </columns>
          </relation>
          <relation connection='textscan.0q4hh8t0rubdn8161ehou1jq97et' name='EdStatsCountry_Modified_KeyCols.csv' table='[EdStatsCountry_Modified_KeyCols#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country Code' ordinal='0' />
              <column datatype='string' name='Short Name' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
              <column datatype='string' name='Income_Group' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.Constant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.Constant]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.Constant</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.PPP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.PPP]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.PPP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Primary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Primary</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Secondary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Secondary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Secondary</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Tertiary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Tertiary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Tertiary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.All</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Female</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Male</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.All</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Female</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Male</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.All</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Female</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Male</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Population.Growth</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Population]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Total.Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pct.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pct.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Pct.Growth</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Education.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Education.Indicators</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Macro.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Macro.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Macro.Indicators</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.X</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.X</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.Y</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.Y</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.X</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.Y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.Y</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.X</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.Y</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.X</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Y</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Short Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Short Name]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Short Name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income_Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income_Group]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Income_Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;' value='Pop. Growth' />
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' value='Enrollment Ratio of Female' />
        </aliases>
      </column>
      <column caption='Filter On' datatype='real' name='[Calculation_145592933528252417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Composite Enrollment-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite Enrollment-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Composite-GPI&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Primary Female Enrollment&quot; THEN [Primary.Enrollment.Female]&#10;END' />
      </column>
      <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
      </column>
      <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Ratio of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
      </column>
      <column caption='GPI.Composite*100' datatype='real' name='[Calculation_4658762711690080257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_146648464326504452]*100' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
      </column>
      <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
      </column>
      <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
      </column>
      <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;High income&quot;' value='High' />
          <alias key='&quot;Low income&quot;' value='Low' />
          <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
          <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year.X]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Sum' name='[sum:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Sum' name='[sum:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country.Code,Income Group)' hidden='true' name='[Action (Country.Code,Income Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Code]' />
          <groupfilter function='level-members' level='[Income_Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Country.Name)' hidden='true' name='[Action (Country.Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group name='[Income ex Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Region ex. Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <aliases>
          <alias key='(&quot;East Asia &amp; Pacific&quot;)' value='East Asia' />
          <alias key='(&quot;Europe &amp; Central Asia&quot;)' value='Europe' />
          <alias key='(&quot;Latin America &amp; Caribbean&quot;)' value='Latin America' />
          <alias key='(&quot;Middle East &amp; North Africa&quot;)' value='MENA' />
        </aliases>
      </group>
      <group caption='Years.Cont.80' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Years80]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ds639c/Desktop/UCB_DataScience/w209 - Data Viz/w209-datavis-project/final_tableau_folder/R_Munged_Final_B_Sunday+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2018 09:36:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='170976' timestamp-start='2018-12-10 21:36:35.683' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Name</remote-alias>
              <ordinal>0</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Code</remote-alias>
              <ordinal>1</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Name</remote-alias>
              <ordinal>2</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code</remote-alias>
              <ordinal>3</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value</remote-alias>
              <ordinal>5</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.Constant</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.Constant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.Constant</remote-alias>
              <ordinal>6</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.PPP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.PPP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.PPP</remote-alias>
              <ordinal>7</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Primary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Primary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Primary</remote-alias>
              <ordinal>8</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Secondary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Secondary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Secondary</remote-alias>
              <ordinal>9</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Tertiary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Tertiary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Tertiary</remote-alias>
              <ordinal>10</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.All</remote-alias>
              <ordinal>11</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Female</remote-alias>
              <ordinal>12</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Male</remote-alias>
              <ordinal>13</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.All</remote-alias>
              <ordinal>14</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Female</remote-alias>
              <ordinal>15</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Male</remote-alias>
              <ordinal>16</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.All</remote-alias>
              <ordinal>17</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Female</remote-alias>
              <ordinal>18</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Male</remote-alias>
              <ordinal>19</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population.Growth</remote-alias>
              <ordinal>20</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total.Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Population</remote-alias>
              <ordinal>21</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pct.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pct.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pct.Growth</remote-alias>
              <ordinal>22</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>530</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator</remote-alias>
              <ordinal>23</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Education.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Education.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Education.Indicators</remote-alias>
              <ordinal>24</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Macro.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Macro.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Macro.Indicators</remote-alias>
              <ordinal>25</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.X</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.X</remote-alias>
              <ordinal>26</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.Y</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.Y</remote-alias>
              <ordinal>27</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.X</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.X</remote-alias>
              <ordinal>28</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.Y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.Y</remote-alias>
              <ordinal>29</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.X</remote-alias>
              <ordinal>30</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.Y</remote-alias>
              <ordinal>31</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.X</remote-alias>
              <ordinal>32</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Y</remote-alias>
              <ordinal>33</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>34</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Short Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Short Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Short Name</remote-alias>
              <ordinal>35</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>36</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Income_Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Income_Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income_Group</remote-alias>
              <ordinal>37</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.417362' group-percentage='0.0701169' measure-ordering='alphabetic' measure-percentage='0.429048' parameter-percentage='0.0834725' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country.Code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EMU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LDC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HPC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UMC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LMY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OED&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, Dem. Peopleâ€™s Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
          <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        </column>
        <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
          <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        </column>
        <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
          <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        </column>
        <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
          <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        </column>
        <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Ratio of Female&quot;'>
          <calculation class='tableau' formula='&quot;Enrollment Ratio of Female&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter5' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter6' name='[Action11]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter2' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter3' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight6' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight7' name='[Action15]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter7' name='[Action16]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter7 1 1 1 1 1' name='[Action17]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter5 1 1 1 1 1' name='[Action18]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight6 1 1 1 1 1' name='[Action19]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (6)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region ex. Null' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Highlight3 1 1 1 1 1' name='[Action20]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight5 1 1 1 1 1' name='[Action21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight7 1 1 1 1 1' name='[Action22]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter3 1 1 1 1 1' name='[Action23]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (6)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight4 1 1 1 1 1' name='[Action24]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter6 1 1 1 1 1' name='[Action25]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter1 1 1 1 1 1' name='[Action26]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter4 1 1 1 1 1' name='[Action27]'>
      <activation type='on-hover' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight2 1 1 1 1 1' name='[Action28]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter2 1 1 1 1 1' name='[Action29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (6)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' worksheet='Enroll.FE.v.POP.Scatter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Highlight1 1 1 1 1 1' name='[Action30]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (6)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (6)' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter1' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight4' name='[Action7]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight5' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter4' name='[Action9]'>
      <activation type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Charlene_generaldistrib'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]'>
            <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' field-type='quantitative' max='18111580.128675207' min='-11778625.686535265' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' field-type='quantitative' max='11995195.326984644' min='-6492450.4920529462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#f5f5f5' />
            <format attr='color' data-class='total' value='#333333' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk] * [federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Composite II PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Composite PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1980' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1981' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1982' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1983' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1984' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1988' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1989' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1991' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1992' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1993' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1994' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1995' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1996' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1997' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1998' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dual.Axis.Test'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' included-values='in-range'>
            <min>#1970-01-01 00:00:00#</min>
            <max>#2015-07-06 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll Female'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Ratio of Female</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='18' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='22' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#57b99d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
            <format attr='color' value='#4ea68d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' value='54' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rates-All:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country.Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country.Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run fontalignment='1'>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' value='Income Group'>
              <formatted-text>
                <run fontalignment='1'>Income Group</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='rows' value='Enrollment Rate (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure'>
              <formatted-text>
                <run>Enrollment Measure</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.GDP.Dual'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Composite Enrollment Rate (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capital Growth (%)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#a0cbe8'>Population Growth</run>
            <run fontalignment='1'> | </run>
            <run fontalignment='1' fontcolor='#f9a655'>Enrollment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='level-members' level='[none:Country.Code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='58' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' value='58' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1994-12-25 12:24:08.520#' major-spacing='2.0' major-units='years' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GDP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>GDP per Capital Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capita Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita YoY Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='line-interpolation' value='step' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GPI&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d3b348' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Enroll.TEST'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1991</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run fontalignment='1'>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs GDP Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs Annual Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
              <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.Values (copy)]' derivation='Avg' name='[avg:Enrollment.Values (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' scope='rows' value='Gender Parity Index' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Enrollment Indicators (copy)]' value='Gender Parity Index'>
              <formatted-text>
                <run fontalignment='1'>Gender Parity Index</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Primary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Primary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' scope='rows' value='Primary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Second.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Secondary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' scope='rows' value='Secondary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Tertiary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Tertiary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' scope='rows' value='Tertiary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Macro.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Main.Scatter'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]' scope='rows' value='Average Annual Growth in Macro Outcome Variable (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='cols' value='Average Enrollment Rate (%)' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' value='53' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy 2)]' value='Macro Outcome (Y-Axis)'>
              <formatted-text>
                <run>Macro Outcome (Y-Axis)</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure (X-Axis)'>
              <formatted-text>
                <run>Enrollment Measure (X-Axis)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' value='Highlight Country'>
              <formatted-text>
                <run>Highlight Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Macro Outcome Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Enrol Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Enrollment Ratio Female (%)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='member' level='[tyr:Year:ok]' member='#2005-01-01 00:00:00#' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Gender Parity Index (GPI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='member' level='[tyr:Year:ok]' member='#2005-01-01 00:00:00#' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Ratio of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Ratio of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Ratio of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#8cd17d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Highlight Country'>
              <formatted-text>
                <run fontcolor='#ffffff' fontsize='11'>Highlight Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;% </run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='POP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Population Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Population Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Primary Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Primary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Time-chart'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Ratio of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Ratio of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Ratio of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Ratio&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash-Scatter.Filter.Problems'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='54625' id='1' name='Enroll.FE.v.POP.Scatter' w='82700' x='600' y='625' />
        <zone h='5500' id='2' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='12800' x='84300' y='875' />
        <zone h='5375' id='3' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='12800' x='84300' y='7125' />
        <zone h='5500' id='4' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='12500' x='84200' y='13375' />
        <zone h='20125' id='5' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14600' x='84300' y='19125' />
        <zone h='12750' id='6' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='84100' y='40000' />
        <zone h='44875' id='7' name='GPI.Dropdown.Indiv' w='47000' x='600' y='56500' />
        <zone h='44750' id='9' name='FE.Comp.POP.Dual.Bar' w='51100' x='48600' y='57000' />
        <zone h='6875' id='10' name='FE.Comp.POP.Dual.Bar' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='13200' x='43800' y='55250' />
      </zones>
    </dashboard>
    <dashboard name='DrillDown.Dash'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Annual Level Details for </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37250' id='1' name='GDP.for.Drill.Down' w='44000' x='44700' y='60000' />
        <zone h='56500' id='4' name='GDP.for.Drill.Down' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' w='11800' x='88100' y='2500' />
        <zone h='37500' id='5' name='POP.for.Drill.Down' w='44200' x='0' y='60125' />
        <zone h='36625' id='8' name='Enrollment.Dropdown.Indiv' w='43800' x='100' y='18500' />
        <zone h='9500' id='9' mode='checkdropdown' name='Enrollment.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='25100' x='100' y='1500' />
        <zone custom-title='true' h='9250' id='11' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='43800' x='0' y='10625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Enrollment Measure</run>
          </formatted-text>
        </zone>
        <zone h='37500' id='12' name='GPI.Dropdown.Indiv' w='43700' x='44700' y='17500' />
        <zone h='5875' id='14' name='GPI.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='27000' x='52000' y='2375' />
        <zone custom-title='true' h='7250' id='15' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='paramctrl' w='44000' x='44200' y='10500'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Gender Parity Index</run>
          </formatted-text>
        </zone>
        <zone h='4250' id='20' type='text' w='27300' x='24500' y='1625'>
          <formatted-text>
            <run fontname='Tableau Light' fontsize='18'>Annual Level Details for</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Maps_basicdistribution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='83000' id='1' name='Charlene_generaldistrib' w='96400' x='600' y='8750' />
        <zone h='9500' id='7' name='Charlene_generaldistrib' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' w='14000' x='85700' y='1125' />
        <zone custom-title='true' fixed-size='44' h='7000' id='8' is-fixed='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='83300' x='600' y='1500'>
          <formatted-text>
            <run fontcolor='#1b1b1b' fontname='Tableau Light' fontsize='15'>Enrollment based on income group</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='21125' id='11' name='Time-chart' show-title='false' w='95667' x='3500' y='62625' />
        <zone h='15625' id='28' type='empty' w='18500' x='78833' y='9500'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#3493af' />
          </zone-style>
        </zone>
        <zone h='15625' id='26' type='empty' w='19167' x='58333' y='9500'>
          <zone-style>
            <format attr='border-color' value='#72c0c7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#72c0c7' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2375'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='13875' id='10' name='Overview Enrol Ratio' w='37167' x='59333' y='36875' />
        <zone h='13000' id='8' name='Overview GPI' w='37000' x='59333' y='52125' />
        <zone h='7500' id='14' name='GPI' show-title='false' w='13083' x='81500' y='28125' />
        <zone h='5000' id='12' name='Enroll Female' show-title='false' w='18100' x='60600' y='28250' />
        <zone forceUpdate='true' h='9125' id='15' type='text' w='17000' x='82750' y='11000'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12125' id='16' type='text' w='16667' x='61167' y='17375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Ratio</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10800' x='70400' y='27750'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13200' x='61300' y='27875'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='125' id='31' type='empty' w='10750' x='82250' y='28125'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='41500' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9625' />
        <zone h='3875' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='14000' x='42167' y='46250' />
        <zone h='5875' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2625' />
        <zone h='13500' id='25' type='empty' w='39000' x='58417' y='51000'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='14000' id='24' type='empty' w='38917' x='58417' y='35750'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview (6)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='15857' id='25' type='empty' w='39000' x='58167' y='44857'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='15000' id='24' type='empty' w='39000' x='58083' y='27286'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29000' id='11' name='Time-chart' show-title='false' w='94500' x='2333' y='64000' />
        <zone h='15750' id='28' type='empty' w='17333' x='80083' y='9375'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#d3b348' />
          </zone-style>
        </zone>
        <zone h='15625' id='26' type='empty' w='19167' x='58333' y='9500'>
          <zone-style>
            <format attr='border-color' value='#72c0c7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#57b99d' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2125'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='14429' id='10' name='Overview Enrol Ratio' w='37167' x='58833' y='27857' />
        <zone h='12857' id='8' name='Overview GPI' w='37000' x='58917' y='46714' />
        <zone h='7429' id='14' name='GPI' show-title='false' w='13083' x='83083' y='19143' />
        <zone h='6143' id='12' name='Enroll Female' show-title='false' w='8750' x='61667' y='19000' />
        <zone forceUpdate='true' h='9125' id='15' type='text' w='17000' x='84417' y='11000'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12125' id='16' type='text' w='16667' x='61250' y='9500'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Ratio</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10750' x='70417' y='18625'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13167' x='60667' y='19000'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='125' id='31' type='empty' w='10750' x='83583' y='19125'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='51286' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9571' />
        <zone h='3429' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='39250' x='58167' y='5286' />
        <zone h='6571' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2143' />
      </zones>
    </dashboard>
    <dashboard name='Scatter.Dash.Final'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      <zones>
        <zone h='86125' id='1' name='Main.Scatter' w='80000' x='1400' y='10125' />
        <zone h='5500' id='2' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='16000' x='82200' y='10125' />
        <zone h='5500' id='3' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='16000' x='82200' y='42250' />
        <zone h='19750' id='4' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14000' x='82300' y='17625' />
        <zone h='12250' id='5' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='82400' y='50000' />
        <zone h='7250' id='6' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' w='16000' x='82000' y='67500' />
        <zone custom-title='true' h='11625' id='7' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='20100' x='22600' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Enrollment Measure </run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(X-Axis)</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='9625' id='8' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='paramctrl' w='15700' x='2100' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Macro Outcome</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(Y-Axis)</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3750' id='9' type='text' w='5000' x='18000' y='625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>vs</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Scatter.Dash.Final'>
      <viewpoints>
        <viewpoint name='Main.Scatter' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0BDD24C1-B8D7-4A47-A174-C4AEE3BCF7B2}' />
    </window>
    <window class='worksheet' name='Main.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='204'>
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{296CFCCD-9164-4F90-9237-D67D8B619929}' />
    </window>
    <window class='dashboard' name='DrillDown.Dash'>
      <viewpoints>
        <viewpoint name='Enrollment.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='POP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <grid grid-size='40' />
      <simple-id uuid='{302A9579-F7EA-4EED-91CC-5BF2B16724B6}' />
    </window>
    <window class='worksheet' name='GPI.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{0D23169D-CD69-4BFD-A534-549301CBBD81}' />
    </window>
    <window class='worksheet' name='Enrollment.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{129B5B23-A83C-4E2D-8458-2B3EEA321788}' />
    </window>
    <window class='worksheet' name='GDP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2AE6E8BA-0D14-4467-92FA-C629576D218B}' />
    </window>
    <window class='worksheet' name='POP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2F5BA0D1-B105-496B-A663-7C2CC7D00080}' />
    </window>
    <window class='dashboard' name='Dash-Scatter.Filter.Problems'>
      <viewpoints>
        <viewpoint name='Enroll.FE.v.POP.Scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='FE.Comp.POP.Dual.Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{0EC8C4E5-A0F5-436D-971C-0A3917F11783}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{FB4B1572-E47D-45EA-8674-F1FFCE043293}' />
    </window>
    <window class='worksheet' name='Composite PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{09A3F3E8-86AF-4EC3-B385-B4811C8D2A22}' />
    </window>
    <window class='worksheet' name='Composite II PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{644B8BDA-C9A4-49DC-A734-8D0D901CAA19}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{AC1A05CD-C4E7-416A-B8DA-06D15318639E}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FD3EE1DC-8704-4E43-BE12-AFF9E1E1B5BA}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0460524A-9A64-44D7-BD18-AD1045F9161E}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D8D8CD46-D217-48C7-82D6-8863DD82D342}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FD743D06-512C-4115-913B-29051A5303CC}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8E3DE13A-8612-428A-AB49-CB55F4BF928E}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{34893CC9-4A53-48E8-AB23-D0A08257A744}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{66A4FEEC-AAC1-4886-9E0E-92089A2B3EC7}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B9E6E088-EDA1-400B-B635-B6DF5F1FD5C8}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{611DB870-AD94-4F30-ABC3-76B6F5F34DE3}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BBF68E32-C8E7-4EC7-AFD0-73A8C495DBE9}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{FF7F4FE9-AEFA-4E20-B963-1102F4ED271D}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Enroll.TEST'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0654C404-1BCA-40D8-B108-013DECE73E9B}' />
    </window>
    <window class='worksheet' name='GPI.Primary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{ABFDC8A0-1426-42BE-B4DD-B002DB1EF7AA}' />
    </window>
    <window class='worksheet' name='GPI.Second.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{EFFBB5D9-F504-49E5-AAB5-3F05CE5BD0F4}' />
    </window>
    <window class='worksheet' name='GPI.Tertiary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{C0F6257D-02A7-4E28-B505-519538D20C19}' />
    </window>
    <window class='worksheet' name='FE.Comp.GDP.Dual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8EBEE47F-DE28-4889-8CF2-95DA0636A369}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08742526-AF49-4C02-93B4-C18536D8211C}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E8E43341-D072-426F-8B53-ED181F1F6089}' />
    </window>
    <window class='worksheet' name='Dual.Axis.Test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2B8ADD16-7FAC-4802-A7FD-77E67D47447B}' />
    </window>
    <window class='worksheet' name='Enrollment.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5DA1288E-00C7-425C-94A9-9DCDC8D2F749}' />
    </window>
    <window class='worksheet' name='Macro.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B309A68F-07F9-4224-9DF3-0CC5EDD4C9B4}' />
    </window>
    <window class='worksheet' name='Charlene_generaldistrib'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{65E8209D-E9A3-49B9-92AD-5B0D2A9AD60E}' />
    </window>
    <window class='dashboard' name='Maps_basicdistribution'>
      <viewpoints>
        <viewpoint name='Charlene_generaldistrib'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B16E866A-8BC4-4A7D-BD5F-282F47A40D37}' />
    </window>
    <window class='worksheet' name='Time-chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{02D34AE9-18CF-44F1-8468-6AC4FD79994C}' />
    </window>
    <window class='worksheet' name='Overview Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{05C56B1A-C023-4908-B8BD-694A6138ACA7}' />
    </window>
    <window class='worksheet' name='Overview GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1CE9A1A9-DB87-4BB0-AF05-B2FA49D5B9AF}' />
    </window>
    <window class='worksheet' name='Overview Enrol Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{353A250B-9B0D-4F80-863B-CE08AF0D60F4}' />
    </window>
    <window class='worksheet' name='Enroll Female'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{202E91B1-B0D3-4EC0-A350-BB6EC453298E}' />
    </window>
    <window class='worksheet' name='GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8298BCA8-288E-451D-AD80-9DDD9B33381E}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI' />
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{82C7240C-3630-4129-95F1-25FCC04AF5D5}' />
    </window>
    <window class='dashboard' maximized='true' name='Overview (6)'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI' />
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='32' />
      <simple-id uuid='{4C1185EA-C1DF-4DFB-9088-F93F97593010}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Composite II PoC' width='119'>
      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
    </thumbnail>
    <thumbnail height='192' name='Composite PoC' width='192'>
      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
      JliWxf8HHxWP0f7DXSwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dash-Scatter.Filter.Problems' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3hU1daH35lkJslk0ntCOoQaSuhNihSBT0Avil4b4L2iV+woXKXEgg3B
      LlxFiigWVJpYkCotdEJLA9J7nWQmyWTK+f6IGROSkEQSEsh+nwcYzpzZ53faXnuvvdbeMkmS
      JAQCgUDQ7pC3tgCBQCAQtA7CAAgEAkE7RRgAgUAgaKcIAyAQCATtFGEABAKBoJ0iDIBAIBC0
      U4QBEAgEgnaKMADNgGQ2odWVtaqGCn05+gpDrc+ClkVbom1tCdcNnbYEs8gauqmwvnJDubaQ
      jz/6kJTsIiSTkXtnPc7g3p1bQ5uFNe+/yYh/PkmIh4q05Ms4ewegtqklvU6++Phtjl5Ipuq5
      /fec+fTu6t+s+nRZCSz9ehcvP/d4g/tG7dzCFz/+hkwmA8DOrQPvvPLfa9ZweMcPaBxCmTxy
      UI3PzY1k1BOfkkXnkMBa333x8dtEnU9GJpPw9gvmgRkzCfJ1r7csTWEupUZrfDxcml1nXZo8
      fYOZMWsmgT71a2oqkS+/yDvvfFDv97XP0cTCBa/x6muLr+m4OWkX+fDjzygzmCjX6xk5/nam
      /d+4ayrzSq581/73zmKmz30LP7WiWY8jaD2uqEUlliz8L/0nz+C5UYOoKNeRllXUOsqqcdes
      /2CjsgVg24/rGTn9Obr6qhv126SLabzxwcc4WLWcPplMzp/1eYMUZKVz94wnGDmga4tpaIqe
      pmLWF7Dyix94N/LZWt8lXUzjrQ8/Ri2XSDh3jIULXmbd6g/r7WbGnT1CvMaB+28f0TJiq2ly
      kEvEnj3Ciy9G8uWaj2iuyyNr4ELXPkcrnpv71DUd06DL59n5i5kX+SbhHf0xVpRx9Pi5ayqz
      Lq5812QyebNdN0HboIYBKEqNpVDpx+RRlS1Hpa09IUH2GMpLeHPJEgq0egxGM48+OZcenfz5
      ds1HXM7UUlhUQKFGy7CBvYm+kICmsJCn5i+m55/7JKQXUVJcjEZbzvMvLSLUz50TB35j1Vdb
      sFHI8evUl+eemIkcibUfvcO5lFzMBgMT77yPMcP78fMP67l1+qOc2LWRXXuPcS5pMU4qJQ/P
      mYfKkMHS9z/FxtYWWwcvXpz/NAp5zcf0yoe2oqyIN19/kzKTnPJyI/MXLMTL1YG3lyxCX25G
      o9MhVznj46QkM7cAjdbA28vfwcnWmrUr3+VcYjYyYwVB4YN4fMbdjSq7BnV0o79d8xF5pRKX
      E1PQFBbwyJPzGdCrE9+u+YghE+7i8/eW4t97GA9OvbXOe1EfjblHR/f+xJebd6GUSfQeNp77
      /zGB0wd/Z8/xC6SnpFCq0zJw9GQeuH0ILy58g5j4FF58MY+gzhE88tC0WtdaJpMRFj4AN9ln
      lJqgMCWG9z78DDuVihJtGU88Px+KUli15jtKjFZcOPwboyZMY0S/kHqvXVlhBp989SvPzZkF
      QNKF40RdLOLO0X15bckbGGXWlJXreeKZ+YT4e9S+/zIZXXoOwtN6DToTxB2u6/mDt19dQJlB
      orhEi7Xak4UL5mFVksE3u04wc/odAKz54D2mP/40qmqNCnNFCQsXv4YkV6ArLub2f84kyNFc
      6xzHDo/g66+/4LHHngQkvln9EftPJoDZwLip9zNl3NA6r/1Dd0+yHGv/jp8ZPeV+wjtW3ndr
      pR1DhvQH4PTB3ylVeROz/zdiC4wsjZxX5zHeffNNZs+dh8paxterPsTs0on7/nEbZQVprNpy
      gM4eVrXeNYANqz4iMzWDoqJCHn16Hv3DO9X77AluAKRqHN//s/Th6k3SlWz49B3p6+37JUmS
      pIKsZGnGv5+UzJIkLY98Tjp87rIkSZL0w+r3pXUbf5UkSZLOHNwhfbxuqyT9uc/x+HRJkiQp
      +fxRac7zi6UKXZ704MzZkra8QpIkSfrfskjpp72nJENxuvSv5xZLkiRJZpNRysrKspSRXlK5
      7yfLI6UL6SUWbXOfmC0lZeVLkiRJX/9vubRp57Ea2l9+eo4Un5IupaenS+npaZLeYJK+XLlU
      2rz7qCRJkhR/fJ+04K2VkiRJ0uOPzJBy8jWSJEnSi4//Szp3uVL3mg/ekKLOVX7OzK7UJJlN
      0n/n/EtKKdJL2ow4afGyjyRJkuotu4rt6z+W5i94TVq5cqW0cuVKaePmXyzn+HvUWUmSJCk7
      4aT08vIVlu2zHnlcOnI65qr3Yt+2DdLWvYcl6YrPDd2jCm2eNOuRx6WyCqMkmY3S3P88IqXk
      6aR92zZIS1eskwxGk2Q26qU5T8yRJEmSjNoM6enFy6S6ePnpJ6SicqNUoS+XDu35RXp4znzJ
      LEmSpjBf0v15rxPPHJQWvP2JJEmSdGTfNmn91r2W31/92pmlZ2b/S8rXGSRJkqSPliyQTsZn
      SFF7tkorNlQ+a/qyEim/UFNLU4mx8nNi7GnpwYfnSPp6nj9JkqTHH50pFZSUSpIkSdvWr5A+
      /Xprjft7ZZlz5z5Zqc5YIWXlVj6Hel2h9PDsOXWeY/XfxJ3YI8195T3JLEmSsaJMevzfM6W0
      /NJ6r30V/3vvVelQdKokSZJ0cM8v0sqVK6Uvv698b/dt2yBNn36vtP77XyST2VzvMdZ9+Ia0
      70SCJJkN0gvPPSs98+w8SZIk6Y9t30hfbtktSVLtd2155HPS70cqn9GMuOPSq+/WfLYFNx41
      egAKuTUmU2ktI3HuTBL/nVXZ5XfxCqCDwozWWPldQGAHAGwV1rj6BwBgY60ASW/5vY9PZYss
      oFt/lHxDRkIsvQaOwN6m0pc44dZxfHvwPBOHdcWlIp2FL7/GgAGDGDdmVAPWq5yczCLOHD3I
      GaDMKJEeHwe39qu2UwU/fv8dNn92A+6d9R8uRMfS26sz27ZtA8lA9qU4AOwcHfFwdaw8B4Ud
      gQG+1c6nsoD0hBg+XbESCRmX07PR6ipwrdbFqK/s6nTv1Ye+3YMry7b7y5XVrXvlWIu9vT1m
      yWTZ/vDjcxnQM6jBe1EfV7tHGQmx2KrU/P7rzwCo7G24dCkFOdC5axjWVnJAia1NY+IF9Ly6
      6EVOHD7ALZP+ydtLFiEDFHIZ61evJC0zD5mhFK2NT52/vvq1kzF+7FB+332Iu27rx5k0HY91
      8qHQvjsrVy+kJCuJocOGM7h/7xplytDx4tznUMglbO2dWfTyQjLref4mjeiNndoBF7UdAGNu
      G8+rn/8ENDwGJpPLidr1CyfOxWOtsCK3qOHB4XOnz/B/EyYgA6wUtowZFEF8QjJWXP3aK+RW
      mE2VNz00rAeuXn68tfRd7vvHVACGjv8H9//jtqseY+iwoXx34BCdnbR4dxmIKS2ajGI9B6OO
      ce+zr9SruVu3ymvh6OCA0dzAgydo89QwAJ26dGHpmmWY//WPGn5bW6WErsyI+s/Bn3KTCau/
      ET9kNpahLzNia2uDVvfXC1Ju0GNtpUBmZcPbH3xGdkYK+/fsZMGry1n6yvNXlW+ttMLXt7Ki
      9vX1xdO7wxX72PD4k0+jrtZdVyqtcHb3wtWucuPTz/ZqlH5dbiKffrOFd956EweVDSvefbnW
      Po0pu4N/MF27Nn4MICjEz/K5ue7FX3oVWCltLddw8vSHCO0UwJmcU3+jNBsWv/4WaeeOsOTd
      VRiMBsCO1Z8spdOIu/n3Y70x6zKZu/TrerRc/dqNHDeB5yI/pLNjCX2Hj0IOuPmG8PnaL0hM
      iGPzN+u5mF7Ag1NHW34jYc/r7yyrcf+ztSl1Pn9Xkp+Xi8pW1agzP7JzE3H5FSx+eTFWcjlP
      PX+157aSut4DNytFXR7CGnTv1pU9hw8wtE8QXr4d8PL1wbba+dV4Xuo5Rkh4fy6v/IHDzjqG
      DP0/zCnWHDp4mPQSGYGujTtnwY1PjarDztWf4WFOvL58JWkZWZw5eZRDx85zy5jhfPDBSnRl
      5RzevY0KZz9UTah0Ll+8TEFeDh8vXUKfWybi2TGc1HMHOHXhMsWFuaxYs4GRo4dQlH6Z77b+
      hsrJg74RfTAUF9cqy0ntyJHDhynIy6a0AjoHexOTkkdYWBhUlJCQmN6gnmEjhrFn70GCQjri
      4mDLuXOxjToPs8mIJNkgw8zpo3/wx4ETf6vspMvxREdHEx0dzdnztXsIV+Na78WVeIWFU5px
      CYPMlo6hweSkJpBTWF7v/jKFPbmXY8nMzSc7J6f290DXXgN58ZmHefbpp8jM12DQm1Fa26DJ
      z2bt6vWWfZ3Ujpw+fgxNsYb8gqIGr52NgxdeNuWs2vgLk24bA0B01B8cPH4Wv6BQuod1orS4
      pMFzru/5A9DrtKSkZZKWfJm33v2EiRPGI7dWkHYphRKtjiP7dxEdn1qrzAq9EYWVLRX6Mn7b
      8i2XkvPqPMfq9B8+iu++WkNWbhGpFy/w88EL9Pmzp3c1+o24jeSjv7L+u21kZedwLvok2oq6
      963vGDIrW0LcrPglKoGIzv70HTKUX7/6hODufS2/rfGu6UVr/2bEKjIyMrL6hr5DbqGiKJ3f
      d+0hK09DRL++9I7oj6RJZ8M331JcoeTppx7FVlHZefAPCsXGSg4yGW5efjg7qpDJZdg5OOPn
      7UbUvh2k5RVx4tgxwiKGM/32Mcjk1gwd2J8t33/NngNHmTjtAQb2DEOhUpEcG82WLVtJSMll
      9uOzcbS3q3GcsM5dOXloN4ePnaJTt96MGTOa2NNR7Ny9l1KTNSNuGYKdjfKvE5LJCArtiFU1
      N01I157IS3PZ/utvJKfncsvIkbg6VQ42hob+OaglkxMY2hFrGcit5Hj4dMDDywd7qYRvvv+R
      CpkdY8aOIjg4BDulFVY2dgT5+1217CouXb5Ieno66enpZBdq6RPe7YprCdZKe4L8fWtuB4I6
      da/3Xji5eeHu7Fjr89XuUQdfb4YO6c/u33/hUNRxnL2DGBDRDSu5rEYZcrkVISGhyKxsCPJ2
      4Mcft6AzKekWFlzntfbw7kD3jgHEJCRz++SJ/Pzjdxw5dY5ht47Fz8eb0CB/3L39KctN5Ocd
      e3D2DGD4yFENXjs/b1eMChduGdATAJW9iiP7d/HT9l+R1B48eO8/UFTvEtVx/+t7/gC2bd5I
      YUEh0edjueO+h4noGozC3gWr8hx+2LIdmZ0zQwb0p1PnMEuZoaGd8A/uSMLpw/y8cy8+oT0Y
      ENGVTqGhtc7Rz9vN8ht7Jze6+Lvz1YYvORuXzH+eeRZvF4da96/q2lfXP2bcGC7GRLNv334y
      czU8OGMWHm7OtX57tWN4e3rg6hNE105BWNmokcwV3DJyDK5O9gC13jUHlbLGM2qlVBHk/1dv
      Q3DjIZOkll0Q5t2X5zL9uTfwFbHDghuA559/iqVL329tGQLBdaHFM4EHjRiHg1IkHAtuDMaO
      va21JQgE140W7wEIBAKBoG0imuYCgUDQTqllAPTaAn7c9GtraGkymzf9gK7C1PCOAoFAIKhF
      LRfQJ8tfZ8z0RwjzdeXA3t9Z89Wv/G/Vu1gDp4/s5rute8FYxqgp/2TskD7s//VHfjl4Bhsr
      M2G9h3Pv1LHs3vwNO47HYtSXMfe/C/CuNhXCmWN/8O3mHdjZ2WKt9uCFp2dzJmo3X/34O5LB
      wL+efp4ugV5kpyby6cpPGDz5PsYM7A1IvPXKAqztXQGYPO2f2JZl8MOeWJ5+7L7reMkEAoHg
      5qBGIphBm0OWzoYwP3cyLl4gpdBI5xA/y1w6mzbv5pUlr2GFgeee+y+jBvfh10OneO3VV5ED
      L760gOkTB/HT4Qsse+sVci5Hs3bDj8yb85DlGHI7F15+9VWs5TI+fHMheaUGvv72J5a8swxj
      cTavf7CO1xa/wO87dzJ8yBBKyitj0iVDCUYbL+Y992Q1xT4Uf/U9pUYzKmvhzRIIBIKmUKPW
      PHfqBBFDhgHg27Eb/7xzEgr5X7uYzHpMZhMyuYIQH0cKy0307RLMR/9bwxer/4d3px4UZyYT
      0iUCGeAVEo6pMLPGAXv0CMdaLuPCqcNcLrDGzVqLo28ISisZKhdvVMrKjJb7Z/4b32rTBBel
      J5GalsZXG77mZLUEoYG9wjh9LqXZL4xAIBDc7NToAZQUF+LmHVbvzvdMn8prr7yM2t6eC9EX
      uEuSyMzIpmOvwThYV7D38FlM5q7Irary0mUgg0P7fiPqxHmGjbudAT1CWb/yXdK0trz+2gJk
      kgZZtdk7JanulryTf1cW/fcZDPpSNn31OTmae7ltaDjO7m7kFecCQdd6LQQCgaBdUXMyOFs7
      isvrT6XvETGUHhFDQTLx0guLcLczkZZXweNjRwJwZO9+rNz9SE/8FbidktxkjDaODBkxniEj
      xgOw44d1mN168d9HK1P5kRwozMlAAsz6EnRldQ/q6iuM+PpWTiJ2x+SJ/HouDYaGo9fpcPBy
      vrarIBAIBO2QGgYgPLwX763fzfihvYk9GcUv+w5z/PQx3n/3XQYOG0dZThzxablkJ15k8O3T
      sZLZ0CVAzWtvvI2d3IjesQPODu509bLm9XfeJzf5IrPnLqhxwP179mPr34m33joBEsx+ei5j
      BnZh0ctvUFGSw5T7H8VcUcIHH68iLysVjVFBdmoyt/TowOcbfyXIz5tzsfHMWxAJwJGTMcx8
      tuac9AKBQCBomFpRQK9H/pdHnovE3cGm9t6SRHGxBmulHSq7v74vK9VhQoZa9dcsgkWF+Shs
      1djb1VFOHRQXFyGTK3FQ1z8TodlkokSrw8HBAblcRnFuKss//5HI+de2wpJAIBC0R2oZgLz0
      BH7ac5YZ99/ZWpoazdrPPmL8nQ/h4+bQ8M4CgUAgqIGYCkIgEAjaKSJ4XiAQCNopwgAIBAJB
      O0UYAIFAIGinCAMgEAgE7ZTrYgDMZvP1OEyTMJvNbVKX0dj21l4VmhpPW9QlNDWO9lgnXBcD
      0BYDjdrqzTaZ2t701kJT42mLuoSmxtEe6wThAhIIBIJ2ijAAAoFA0E4RBkAgEAjaKcIACAQC
      QTtFGACBQHBDYzSbKTVUtMlgk7aOdcO7CAQCQdujwmTip9jznM5MRy6T4aC0YUq3cDq6ube2
      tBsGYQAEAsENybdnTuJoY8tLI8eitLYmpaiAr6NPcn/vfnRwqlwkavfu3ezfv58pU6bQu3dv
      AFatWsV9991HTk4OP/30EwAdOnRg0qRJrXYurYVwAQkEghuOzJJisrUlTO7aAxtra2RAoLMr
      4zt1Yc/lBADi4+P5+eefeeGFF3j33XcpKSkhKyuLTZs28euvv+Lr68u0adPQ6XTccsstrXtC
      rYQwAAKB4IYjT6fFW+2ITCarsd3HwZFcnQ6AEydO8MADD2BnZ8ftt99ObGwsmzZtYunSpezf
      vx+FQoGXlxdOTk64uLi0xmm0OsIFJBAIbjjc7dVkaYuRJKmGEcgsKcbD3h4AlUpFQUEBAHl5
      eXTt2pV9+/aRk5PD6dOnKS0tRaWqfwXC9oDoAQgEghsObwdHvNQObI05h95oRAKSiwr5LSGW
      USGdABgzZgyffvopS5cuZefOnbi5udGzZ08WL17MSy+9xI4dOwBq9SLaE9dlRTCTyYSVlVVL
      H6ZJVE2wZG3dtjpBer0eG5vGraN8vRCaGk9b1HWzaqqKAorOTEdWTxSQyWQiLy+Pzz//nFmz
      ZuHt7V1vee2xThAGoB3d7L+L0NR42qKum12T0WymwmTEzlpxTa359lgntK0zFQgEgiZiLZdj
      LVe2towbEjEGIBAIBO0UYQAEAoGgnSIMgEAgELRTxBiAQCBocxSUlnIyI41SQwVBzq708PZB
      3o7DNVsK0QMQCARtitjcbFYePYjRbMLVTsWx9BTWHD+CsQ0u13ijI3oAAoGgzaA3Gvnh3Bn+
      3X8wnmo1AEMDg9l47jT7Ey8xKrRTKyu8uRA9AIFA0GZILMjHx8HRUvlDZabuIP8gzuVktaKy
      m5NmNwBiUQaBQCC4MWhGA2Bm88Zv2bptG+fjEpuvWIFA0G4IdnUjs6SYHK3Wsk2SJKJSk+nu
      Wf80DoK/R7ONAeSmxKPyDCYsyBt/f3+gcgoIALPZ3OZ6BuY/B5Sq0r/bCmazWWhqBG1RE7RN
      XTeSJitgapfufHbsMH39/FHbKInLzcFkMjOlc7cWPY/2WCc0Ww9ApysjNyebwrxMNm39pbmK
      FQgE7YzOHp7M7j8Ya7mc/NJS+vn5M7PvAKzkYsiyuWm2HoC7hwcqew29ekdwKeVXgBoTwInJ
      4BqHyWQSmhpBW9QEbVPXjajJXa1mTMew66iofdYJzWZS1e4dCPWy5aftvzBo6NDmKlYgEAgE
      LUSjzMrp06c5cOAABoMBDw8PJkyYgJubW639evYdRM++za5RIBC0AyZOnMgzzzzD2LFjmT17
      Np6enhQWFvLee+8xZ84cvL29UalUvPDCC60t9aahQQOwYcMGvL29eeSRR1AqleTk5LB9+3b6
      9OlDeHj49dAoEAhucpKSkhg9ejS///47Y8eOxdfXl8WLF7N06VJyc3Px8fFh8eLFrS3zpqNB
      A3DPPfcgl8spLCxkw4YNuLu788ADD7S5qB6BQHDj8v333+Pr60tUVBQVFRVcunSJ+++/n8DA
      QLy9vbl48SKvvPIKnp6ePProo60t96ahQQOQnZ1NXl4e586dY8KECfz2229oNBqcnZ2vhz6B
      QNAOuHjxIhEREQwePJg9e/YQGhrKtGnTWLZsGXq9ntDQUBYtWtTaMm86GrUkZHR0NJcvX0ar
      1dKxY0cGDx7cpIOIJSEbz82+fF9z0RY1QdvU1dY1GQwG9u/fz+jRoykvLycqKgqZTMaIESM4
      f/48hYWFxMXFkZqaiqOjI88++2yLaGqPdUKDBkCn0/Htt98C4OXlhbW1NWPHjkXehJhcYQAa
      T1t/WdsKbVETtE1dQlPjaI91QoNnevHiRby8vADw8/PD29sbk8nUJAMgEAgEgrZHgwbA398f
      mUyGJEn06tULqJybo6CgAFdX1xYXKBAIBIKWoUEDEBUVRUpKCv369SM+Pp7Lly8TFxfHHXfc
      IQyAQCAQ3MA0aAAmTpxIWVkZx48fJycnh+DgYMaPH49MLM8mEAgENzSNGu2ws7Nj+PDhLa1F
      IBAIBNeRRhmAsrIyPvjgA0ur/5lnnkGhULSoMIFAIBC0LI0yAAUFBZbEDIFAIBDcHDRoAI4d
      O8bevXtJSUkhMbFypa+nn35a9AAEAoHgBqdBA9C/f3/Cw8PJy8ujQ4cOJCcnXw9dAoFAIGhh
      GszmkiSJw4cP8+OPP3L69GnWr19PaWnp9dAmEAgEghakUem8RUVFmEwmcnNzmTp1Kk5OTi2t
      SyAQCAQtTIMGQCaTMWbMGGQyGTKZjICAgOuhSyAQCAQtTKN6AA4ODjz22GPk5uYya9YsKioq
      WlqXQCAQCFqYRruAHnroIaytrdmwYQNKpbKldQkEAoGghWmUAXB2dmbt2rUYjUbuu+8+9Hp9
      S+sSCAQCQQvTKANQUlLCe++9h0ql4sMPP2xz83gLBAKBoOk0egygc+fOxMTEcPLkyZbWJBAI
      BILrQKMMQGJiInq9nvnz55OZmUlubm5L6xIIBAJBC9OouYDc3d2JiYlh8+bNpKSk4Ojo2NK6
      BAJBK1BeUkrc7jMUpOSgVNkS1L8Tfj2DW1uWoIVolAGQy+XceeedKJVKJkyYIMYABIKbkPKS
      UvZ/+iuB/ToRMXA4em0ZsTtPo80vofOonq0tT9ACNMoFpFQq2b17NwEBAaLyFwhuUuJ2nyGw
      XyfCRoTj5O2CZ0dfBs8YQ9KROMo0YvqXm5FG9QDKy8sxGo18/PHHyGQyMRuoQHATUpCcQ8TA
      mgs/KWyVuPi7U5iWh51T254FoFhfzq6L8SQVFWCvUDLQP5BePn6tLatN06ABMBqNZGZmcu+9
      9xIdHY1KpRKVv0BwE6K0t0WvLQNcamzXa8tRqtp2z79YX86KqIMM8A/gHv8ISir0/J4QR36p
      jtGhYa0tr83SoAvo7NmzpKSkEB0djVwuJyoqCp1Odz20CQSC60hg/07E7ozGUG6wbEs/m4RB
      b8A10KMVlTXMrovxDPAPYFRIJ3wcHQlz9+Dh/gM5nJKEprysteW1WRrsAahUKmJiYrjzzjux
      trbm9OnT10OXQCC4znToGYwuv4Td723Gxd8DvbYMg97AwPtGIZc3ariw1UgqLOCegIga22yt
      Ffg7uZCqKcLJ1q6VlLVtGjQAnTt35tChQ7z99tsYjUYGDhyIvb19PXtLbP3+GwaOvRMvp7bd
      ZRQIBLXpPKonAREdKUzLRamyxTXQo81X/gD2SiVavR4cam7XVuixV4i5y+qjUYPAM2fOtHzO
      ysrCbDbX+VCcPbqfMklOqd4ICAMgENyI2DmpsHMKbG0ZTWKgfyA7Lsbh7+yMrXXlGOWZrAz0
      RiOBLi4N/Prq6I1GEgvzAQh2ccPGulHV5g2BTJIkqSk/2LJlCxMnTqw1EFxWUsD23UfoHuiI
      nW8fgjxVGAyVvkSz2dx8ipuJKk1trXVjMpmwsrJqbRk1EJoaT3Pp0pSXk6opxF6pJNDZFblM
      1mKaEhISKC4upk+fPmRkZODl5YVCoSAnJwdPT0/y8vI4f/48ffv2Ra1W/20dTdFUHQlozNnv
      T0nicGoSfmpHdIYKjJLEveG9cWmk+6euOiEuL4etcTH4OlYugpVRrGFy5650dvdsVJnNQUs+
      640yZSaTia1bt1qWgpTV8TBmpKSgUso4fTYWu1wZQWOHWIxEW3xZjUYjANZtzJrr9fo2l2sh
      NDWe5tC161I8h1OSCHByQVuhR2+M58GI/rip6nO9/n1NK1asoKSkBH9/f8rLy9mwYQPh4eE8
      9dRTrFq1iieeeILnn3+eBx54gDlz5rB+/fpremc2btzI1KlTWbx4MSaTiVtuuYWIiAiWLl2K
      jY0Nd911F/369QOg1FDBj+fOEJObjVppw6Qu3ejp7Vtv2WM6daa/fwCpmiJUCiVBLi7IZY1v
      4F1ZJxSUlvJTQiyPDBiC55+GL0erZdWxw3RwccNVpfq7l6FJtOSz3qg7mZqaSmFHn2kAACAA
      SURBVF5eHhMmTADqbjWHdu9NaHdIvngWpVunGt/l5eVx6tQpXFxccHZ2xsXFBUdHR2xtbZvh
      FASCm4fozHRic3OYO3zUX66MzAy+OHmMp4be0qQKrTEkJCSwZMkSTp48SUhICP7+/iQlJVFU
      VIRMJmPv3r08+eSTDBo0iOzsbM6ePUufPn3+9vHOnz9PRUUFw4cPZ9KkScyePZvg4GAGDRrE
      XXfdxdy5cy0G4MdzZ/BSO3BvrwgKykpZffwI7ip7S2u8Lpxs7ZptwPdkRhoRvh0slT+Ap1pN
      hF8HTmakMabjjR9e2igD4OHhQUxMDKo/Ld706dPrdZ0Edgyvtc3GxgYHBwdyc3NJSEiwhJHa
      2tri6uqKi4sLTk5OODs74+zsjIODQ60yBIL2wJHUZMZ17Gyp/AF6+vhyIPkyyYWFBLu6Nevx
      ZDIZkiSRkZHBmTNnkCSJp59+mvfeew+o7L1XtYiVSmWzuHNTU1OZOHEiAJ06dSIvL4+ff/6Z
      8+fPExxcOe+QWZKIyc3m3l4RWMnleNir6e3rR0xOtsUA5Ofn4+bmhkajobCwkICAAAwGA/n5
      +fj6+pKbm0t5eTkajQYAV1dXfH3r70Fcia6iAnf72q18tdKGgrKbIzO6UQbA1taW5557jpKS
      EhwdHZvsznFwcGDo0KGW/1dUVFBUVIRGo6GoqIjCwkLS09PRaDRIkoRCoahhEKobiLbmShK0
      HvPmzePBBx+ke/funDlzhnXr1gHwn//8h/Lycj777DMkSeLFF1/Ey8urldU2Dp2hAnUd3X21
      0gadofmXYnVycuL777/HycmJquHAwMBAzGYzOp2O4cOHs2DBAh577DG2b9/OtGnT/vaxjEYj
      er2egIAAoqOjGTlyJCkpKYwbN44RI0YQFRVlKV8mk2GvVFJQVoqHfWULvKC0lI5u7pbyPvjg
      AxYtWsRTTz1Fp06duPPOO7l48SJr167lhx9+4PXXX+fuu+9m27ZtqFQqxo8f3yQDEOTiyvH0
      FIYEBFvc3pIkEZeXQz+/tp0V3VgaZQAMBgOfffYZnp6eFBQUMH/+/GvyAyqVSjw9PfH0rDmQ
      YjabKSkpobCw0GIYUlJSOHv2rGUVMkdHR4srqcoouLi4CHdSO0Oj0WA0Gtm4cSPdunVj+fLl
      fPbZZ1hZWaHT6Xj++ed57733KC4uZvny5bz55putLblRBDm7EpubjY/DXzPulhsNpGgKmdKt
      R7Mfb+HChezfvx+9Xs/MmTMtU73PnTuXrKwsfH19eemllzh+/DhWVlYUFBTg7e3d5ON8//33
      7N69m5kzZ9KjRw+ef/55tm7dSt++fXFxcSE4OJgHHniARYsWERwcjKOjI//XpTurjx+ht68f
      BaWl5JfqmNajl6XMsrIyFixYwCOPPIKLiwt//PEHmZmZdO3aFY1Gg0qlYvDgwZSUlODg4ED/
      /v2bpDnc24djaSlsPBfNIP/KqKio1CQkqfK7m4FG1eIpKSlEREQwefJkNmzYQF5e3t96CBpC
      Lpfj5OSEk1NtH19ZWRmFhYUUFhai0WgoKCjg0qVLaLVaoLKXUtVTqD7WINxJNyc///wz999/
      v2Wp0sDAQFJSUlixYgXTp0/H09MTW1tbbG1tLYN7NwK3dgxjRdRBALp4eFGir5zSYHBAUIsk
      M8lkMm655RbL/wMCKlu2jo6OlmnfQ0NDCQ0NZfr06X/7ONOmTavRe1i2bFmNgU1/f3+AGoa6
      p7cv7ip7YnKy6ejmzrQevVBU8wBIkoRWq8XGxobOnTvz+eefY2Njw9ChQ1mxYgUDBgz423oB
      5DIZM/oO4I/ES2yJOQdAd09v7uze65qistoSjTIAnTp1Yt++fbz55pv4+fm1SOXfEHZ2dtjZ
      2dXqwhkMBoqKiix/CgsLiYuLQ6PRWPyXjo6OODs74+rqauk5qNXqNhcBJGg8hw4dIjk5mZyc
      HM6cOUNKSgohISFMmzaN/Px8cnJyMJlM6HS6OqPW6sMsmUkqLKTUUIG/k/N1zyB1tLHlsUFD
      2XUxnm/OnMJeoWBYUHC7ndTM19Gp3kFfe3t7Xn/9dWbNmsX7779PeXk5AQEBDBs2jMcee4xT
      p04B0MRI9xpYy+WMDu3E6NBODe98A9JgHkBWVhZGo5FLly5Ztg0bNqxJvvjWCAOtah3k5+dT
      VFREcXGxxbVUXl6O2WxGrVbj5uZm6S20BXdSWwxvbGuaDAYDK1eu5IknniAvL48dO3bg7e3N
      li1bkMvlzJ49G41Gw9q1azGbzcybN4+QkJAGy80v1bHu5DFsra1R29iQWlTIoIAgbm3CZGJt
      7VrBzaspOTmZwMBA8vPzqaiooKKiAgcHB1xdXTl16pQlWqmwsNDiXbga7TE0vEEDkJubi8lk
      Ijk52bKtX79+bd4AXI2ysjLy8/PRaDSWgWiNRkNxcTFQGbVU1VOoMhBVXeLGJo4Z9QZMBiM2
      6qa1IG/Wl7UKk9nMnssJ5Oi0DA8Kxd/JudU1QWXL/72DfzCmY5gl1rzcaODzY0ea1AK/2e9f
      c9EWNbVHA9DgmXp4eFha0ePHj2fr1q0UFxfjco3p1a2JnZ0d3t7eeHt717jZRqOxRmRSUVER
      CQkJFBUVYTQaLa2Iqt5C9T/VM6PNJjOH1+5EV1DCLY9OROXSPNmTNwN7LieQWVJCN08vvjh5
      jGeHjcSuDUwvnlRYiK21dY1EIwVyhnl04Ehqcou6YHJzc7lw4YIl0/by5cv4+/ujUCgoKCjA
      bDZja2tLaWkpnp6e5Obm4u7u3iTXlkBQFw0aAEmS+Pjjj8nMzOTMmTOYzWYmTZp0PbRdd6yt
      rXFzc8PNrWasdZU7qWoAuqioiIyMDC5cuEB5eTkAarXaYgycHJ0o0BVhLZMht25bU020Njla
      Ld08vYjw7cDOi/GU6PUtagBMBhNpZxIpLy7Fu0sHnHxc69yvtKIy/NJsNmM2mrFWWnN221Hi
      LqagG9JyY155eXk89dRTPPDAA/z73/9m/fr1PPHEEzzyyCNMmTKFt956yzKw+cYbb7Br1y5W
      rFjBSy+91KRedWxsLEajEYVCgZ+fH8XFxZbxtISEBDp27EhiYiJlZWX4+/uLdb/bCQ0aAJlM
      xgsvvEBWVhbu7pUxuG1t/pyWRiaT4eDgUGdEUVWiSVFREfn5+RQXF5OamkqxfTEmWzNff/9t
      nfkMTk5OzXodq15wqIyosLW15eTJk4SFhSGTycjIyKBDhw44O/89l0tzMTw4lC9OHmPnxXgC
      nV3wqHdm2WvHZDBxcNVvqFwdsHdTc3TDXrqNi8AvPKjWvv7OzmyJOcvBr/ZQmlHI8Eduw9bB
      jkIXa4Kca/d2JUmioKAAGxsbkpKScHJyskSypKWlkZiYyMCBA1Eqrz4TZV2Ztv379+fgwYOW
      ZCmFQoFMJmPs2LF8/fXXyGSyJrf+4+Pj0el0fPrpp8ybN4+3336bXbt2kZ6ezsiRI0lISGDp
      0qWMHDmSV155hY8++ggPj7a9BoDg2ml0HsDKlSstg6fLli0Tq4L9SVWo4ZWJRiaTyTLGUOVO
      unTpUi13krOzM2VlZbi6utKlSxfs7OywsbEhLy8Pd3d3y791YawwYqWwQiaTER8fz5dffsmd
      d96JSqVi4cKFTJs2jczMTHJycgCIiYnh/vvvb3I89JXk5eXx5ptvYjabmTVrFn/88YflGDNm
      zGD16tW88sor7Nixg/79+9dwF/o7OfPssJGU6PV42Nu3qBsjLfoyKlcH+k2vXObQv3coh1b/
      XqcBcLK1Y1BAEPvyzhNsK5Gh0ZAZbI9G4cw/60j5LysrY9WqVfTu3Zvjx49jbW2NWq1m+PDh
      fPDBB0yePJn//Oc/rFq16qoa68q0lclk2Nvbs3XrVsaMGUNUVBQAo0ePZt26dfU+D1dj8uTJ
      vP766yxfvpzc3FxCQ0OJjY1l586d3HHHHUDl2JeXlxeOjo6t6gdP1RSxP/ESnmoHRoV0xKqd
      NTivJ426ssXFxQwbNoz+/fszePBgS2q1oJLLly8DlYM1RUVFZGdnExMTQ0ZGBr6+vqhUKnx8
      fJg8eTKzZs3ivvvuY8KECXTr1g07Ozs+/PBDvvrqKyZNmsTnn3/O+vXrmTNnDgcOHGDRokWk
      paVZ8h2qyL2Uyc5lP5LwR2V88uTJkwkPD+fuu++moKCAiRMncscdd3DnnXcik8mYMmUK77//
      PklJSdd8vtu3b2fKlCksW7aM4OBgcnNziYyMJDIyEr1ez4EDB4iKiiIxMdHiIquOnUKBp1rd
      4j7s8pIy7N3+6rWpXNTotWX1hgWODg3j9mED0A32Y1t6AkXlZTw2aCiONrWjwqpa4TKZjNGj
      RzNjxgwyMzPZtm0br732GpMnTyYgIICCgoKrahw+fDiffPIJx44dY9u2bfToUZnsNWXKFN5+
      +21GjBgB/BXK+Nhjj7Fhw4YmhzZWhURWRcbccccdbNq0ibS0NEvsv9lspqysDKVSSUlJSZPK
      by7KDAa+OHmMzh6eZJYUs+fyxVbR0V5olJn39fWlrKyMgoICLly4gKtr3X7U9sqkSZP48ssv
      sbe359SpU8TFxdGtWzdkMhn+/v4sWbKEcePGsWTJEtavX49arUatVtOhQwegMqw2MjKSrVu3
      otFoGDBgAPv27aO0tNQyT0rVFBlV7iR9tpaM7EwcMt3oeMX6DAaDod4eWnO4naZMmcKiRYv4
      7rvvWLhwIbm5ubzyyisolUqmTp3KzJkzWb16NREREQ0X1oJ4d+nAsQ378O8dgspFTfzeM3h3
      6VCv4ZEBvXz8mjzg+9FHH3HhwgV27tzJJ598Ymk9KxSKBivq6pm27777LjY2NsycORN/f3/W
      rl2LQqHgwQcfxMHBAYVCgYODAxs3bmzSfawKhX3hhRfYv38/kiTh4uJCWloavXv3pqioqPL8
      ZTLs7OyQJKlOw91U9Ho9BoMBtVpNZmamJchCJpMREhJCYmIiQUFBFneau7s7JXo91nI5Eb6V
      70Zcbs4160hNTcXNzQ2VSoVWq6WkpAQfHx8KCwspLi4mMLAyyzcpKQmNRkNERES7GWBv0ACc
      OnWKgwcP1thmMpna3TjA1fjHP/7Bp59+yjPPPANUvki+vr7I5XLUajUdO3bkvvvu4+DBg0iS
      VO/DZWdXGTLauXNn/Pz8GDduHIcPH+Zf//qXZZyh6k+ZjRFDRyVnC+M5v+oSjo6OxMfHExUV
      hVqtZv369fj4+FjWZDh06BDx8fE15mT6u9jY2PDBBx+QmJjI6tWrcXd3Z9GiRQDExcVhbW3N
      bbfdxtq1a5kyZco1H686TWn5Ovm40nVcHw6t3oFeW453lw70umNwg+U35eWXJIk5c+aQkpLC
      //73P4uhv/vuu4mPj29UY6kq07aKqhZ5165dASwVVBV9+/ZttL4qXnrpJSRJQpIk+vfvj0Kh
      YP78+bi6ulrGMmbMmIFGo2Hu3LmNypu4EpPRRGFqHq4BHsit5CQmJnLq1Cnc3NyIjY0lOTmZ
      wYMHI0kSQUFBPPbYY8yePZvx48fz+eefM2/ePDzs7QlwduHtP3ZjNJt5MOLa3JUAr732GuHh
      4cyZM4eVK1dy6dIlVqxYwcqVK7l8+TKfffYZmzdvJioqiq5du+Lj49OkOYNuZBo0AD169CAs
      rKYPtK3FybY21tbWjB49mt9++w1PT08kSaK0tBSZTIbRaOTEiRP07duXV199tU7DmZGRwc8/
      /8z69etZuHAhR48eJTMz0/K9XC7HxcWlztBbnU5nCVu1t7enoKCAxMRERo0axbfffou/vz8u
      Li5cuHCBHj160LFjR8rLy68p2e3EiRNs2rQJo9HI7Nmz+eWXX4iMjEQul/PAAw/g7e3NyJEj
      2bJlS7PGLxv1Bo59vQ87Z3u63ta4KYn9woPw7RGINleDraMKhW3tQVlJkjCU6slLzCZu7xl6
      TRmEq//VB0CVSiX33HOPJaN88ODBnD17lpCQEGbNmsWFCxcwGAyUlpZeZQnV64NcLre4kqpT
      FdRQtcjLtUzzDBC/9wyXDsYQNrInYSN6IJPJOHv2LDk5OXz22WfMnz8fX19fFAqF5Zr98ssv
      3HrrrRajK5PJuKdnH3J1OhxsbJolQszX15ekpCQkSSI7Oxtvb28kSSInJ4fAwEBycnL4448/
      ePvtt4H2Vb81eKYKhYLy8nJWrlwJQGZmJm+99ZYYBL6Cu+66i8mTJ3PfffcBlQ+RXC7HaDQS
      ERHBypUrmTt3LkOHDq1Vkc+cOROTycSaNWvIzs7m3LlzvPHGGwA89NBDVz2uvb099vb2+Pn5
      WfzHUDnjam5WDqX6MouBKCws5KeffkKSJGxsbGpkP1dFJjk6OjbYAh42bBjDhg2z/L9bt241
      vq+a0rdqds7GkHLiIsknLhIxbSj2rnXP36TXlVOYmoc2v5jOpl517nMlkiRxcuMBClJzMRtM
      DLh/FC4dag6ixu2K5uKBC9g62qHXVh6jIQNgZWVlaalXER4ejl6vJzw8nPDw8GuaO6c1MZRX
      UF5Shtq94WehOs5+7tg5qnD2/avXo9PpLOGq1RtGVT25KnchVLpqvL29K+uW0lLs1Ooabhqt
      Vltn+GpDGiVJIjQ0lF9//ZWuXbuSkpJCTEwM586do0OHDmzdurVJ1+dmoslLQn7xxRdMmTKl
      wbTq6rS1TGBo3qy/lJQUAgICSElJwdbWFq1WS0pKCoAlvC8wMNAyP3lVuGBdNFfWX8b5ZE5u
      PEinET3oPKqnZfuVyW5VuQ1Vs2vK5fJaYav29vZ4eHjUa/QL0/K4dPACag8nwkaEI7dqunsw
      6otd5Cfl0HvqYPx6BtW7X1FGPgobJdZqZaOuU0muhqgvdjHm2TtIPXWZnIR0+k2/pcY+cXvO
      cHH/eXpNGYRSZYN7iHeD51Cfq6gtZLhqsgqJ/f0UYSPDcfH3aJKmwrQ8jn61B7m1Fa4BHkRM
      G2Y5z8YYhurrhcfFxXHy5EmcnJyIj48nIyPDEto6YMAAli5dyuLFi3n00UcJDg4mISHBshrZ
      4sWLefnll3njjTcsbprffvuNt956yxK+OnDgQBISEizrlNRHZGQkjz/+OCNGjODgwYO8//77
      KBQKHn74YTw8PCwNlaKiIrp06UL//v3bVAhsq68IVlJSwieffAJU3uAqX7WgkqqWYNW/np6e
      NXyoVT7cv/NQmcxmcnVaPOzVTQuHk/786wr73phkt6pxhvT0dM6fP49Wq7WEOVbPZXB1dcXe
      VsXRL/fQdVwEWbGpxO87S5fRla3z6oYBQJurIXRot1otcIA+dw6hMC0Pr7CrD8A6+1bqrpoe
      vCFsHewwG0yknrpMVmwqjt613WhhI8MJGdwVhW3dBs5YYeTCrydw7uBOkY8d2+POo62ooKuH
      F//o0Qs7hcJSOSodW39a8oxzyeQlZqNyVePSQE/mSi4duEDXsRH49wlh57JNaPOKcfBwuqph
      qE51F2eV+9HT05PAwEDkcjnZ2dnIZDLkcjkzZ84E4NVXX6WsrIw1a9bUWI3sSjeNTCarM3y1
      oWS/WbNm4eHhwQ8//ICLiwszZszAZDJZJrWcMmUKbm5uHD58mOLi4lbPlbmeNLoHcOjQIWJi
      Yhg6dChdunRp0kFu9h5Ac2CsMFBaoMXGWYWNbaW1LzMYWHnkIGZJQi6T8ejAodgpFJgMRuTW
      Vlfv+kqVLTZrW8U1RzQUFxdTWlqKRqOpMblecXExZcWlpJ24xJC7R2PIK8VYoGfI9NGo7ew5
      vmYP3cb1JflYPACB/cOI+f0ko5+aUqcvvik0tVV76cAF1J5/r4eSn5xD1NqdlDoouNzXlVn9
      BuJip2L3pQRytCVM8giyVI4u/h70vavuyvF6UVFWQXp0Ir7hgdjY2zbpWsXujqY4qxDvLv7E
      7DjJ6Kcr79Xxb/7AM8zPYhgGPXQrDh6N9wJcSV2aIiMjmTlzJmvWrAHg7rvv5qmnnqJDhw4M
      HjyYoKAgjEYjp0+fRqPR4ObmxmOPPsapr/Zbkv3SohPrTfZriJaoE8wVBejz9wJg4zYSubLp
      EZSt3gNIS0vj2LFj3HvvvXz66afMnTtXLMDSzERvjiIrNo2edwzEP7yy9xCdmY6fkzN3h/fm
      u7Onic5Mp6PJlpMbDxAypBsdh3Wrv0AZKOyurZKtwsbGBkdHx1rTgFclux1y2EPS7nhKK8rw
      6NWB7Zu2YTSZSD4ZT3EIZCel4Kh2wFMVglZfirawBBef2ksb6vV6EhISUCqVhIaGUlZWZslb
      8PX1RafTWXzEOTk5V3WlVcelgzv97rml4R3r+72/O90n9uNEWT59fFwsK1SNDu3E4p2/0DlO
      Z2k173jnB0uruTmIiYlBkiS6devWqDmD3N3dUdopCR7U+W8dL2xEOHu+P0jZmSQG3D/KYqjV
      nk5kxaYCYDaasHVoGS9A9dXINm3axPr16/Hw8ODJJ58kMDCwVvhqenRivcl++ZpS4tPycVTZ
      0CXQvVkTynQ6HXK5HGtra06cOIG/vz9+fn7ExsYiSRIdO3ZEbsymJO4lFC5DACi+8AwOXZZg
      Zduh2XRcK1aRkZGRjdnxwIEDKJVKkpOTMRgMuLu7N9oVJElSmwsbrVrbtK3o0uYWo8svpkPv
      EOydKyuYCpOJo2nJqBQ2RGem0dcvAPJKST+bhMpV3aC7pLmonq1aHblcjp2dHZ36dqVb/3DC
      +/ZCeyoHd5kTfm4+BIUEkXkiCb2unNycXI7uOkiWvoD0kixiYmJISUkhNzeXkpISDAYDiYmJ
      rF27Fr1ez7p167C1tWXv3r2YzWacnZ1ZsmQJKSkpDBo0iLfeeotbb731upy/TCbD2c8NnZVE
      erHGshpUfqmOc9lZ9FK5kZ+UjdloJvdipiUCJm7vGZKOxGPnbI+d49X91HXx8ccfExsbS1ZW
      Fj4+Pjz77LN069aN1157jalTp/Lggw/i6OhIly5diIyM5MSJE4waNQqojJiSWcmRyWT13r8r
      kSSJ974/wh+pBZwo1tO3ZyBuf+p2DfBEm19MYUou4f83oN6B+sZSl6aQkBCcnJzo27cvXbp0
      oWfPngQEBCCXy+nSpQuhoaH4+PjQr18/BgwYQGhoKBU5OpQqGzxCKhsn1jYKYn4/xWlJzieb
      j1FSauBITDo/HYqndycfHFR/NYqkP7Ouq2hKnbBnzx4KCwv54IMPcHFxYffu3QwdOpRnn30W
      Ozs7li1bxvh+udi4j0bldw9K534gt6Eibw9K1yHXfK2ai0avCTxhwgQAbr/9dgARBdTMdBrR
      g47DumEw/bV6VYirG6NCwjiTlcGokDBCXN2QXFxx9HH52zOMLliwgHvvvZfu3bvzxhtvoNfr
      6datG9OmTWPp0qVoNBp8fHx44okn6i3DqDdgpbSuEbrn4OFE3K5ouo7703+8fBNDHryVIVNG
      WlqL5SVl2DjZ1VjyU6PRWNaDzszMJDk5GbVaTUFBAQkJCTg4OODj44Obmxv+/v41fMTXm94+
      fhxJTebr6JO4qlREZ6YzqUs3wjy8id93lpz4dPreMxyFrbKGK+Xol3sI6NsRXX4JocPqHgOp
      i0uXLrF8+XKgcknFxswZBJAdl8aJjQfoOLw7YSPCG31+6XklxKXkseK5/2PvqSS2HIhj7j2V
      lZXcSm4Z22kp6lqNrIrqeRLVw1c1CjVHr0j2S5JbkxqXycfPTEL157jOgbMpvPHlft59Yjz6
      I0cp/PIrTBoNdn0jcHvk38j/DNWdP38+KpUKDw8PZs+ezc8//8zUqVNJTExk3bp1VFRU0KlT
      J/z8KhtfMpkMrVbLk08+iVwur5HzY9bnYeX+19KRVja+VBTsb7kL+DdolAGQy+Xs3LnTMi1t
      1ckKmg+ZTIbM2gpMNZcv7OPrRx9fPyRJIismFQcv52tyLwQGBrJx40a6d+9ORUUFVR3AjRs3
      0rlzZ6ZOnWpZF0GSJMrS12M2lqMM/BcymZzCtHyi1u3Et0cgvaYMQpKMlGd8i6ksFTv7jmTF
      VraizIZKN0F1X3/VZy8vrzrnTjp58iRarZaAgADi4+PJzc0lPj6eS5cuERUVxdmzZ5kwYQIL
      FizAZDKRk5ODk5PTdYu6UVhZMXvAEE5nplNcXs79vftZVquqqhyrBqe1ORq8u/jj3yeEuN3R
      lORqLMagyq/eFJoyZ5CxwojZaMaob9pSmC4OtlQYzew9lcTRmHSCvFtvMFQyGinevAVDRgYO
      kyZiU80AwJ8Dv9GXKS8po0PPoGrJfv6kuTvzzzHhlsofYFh4ANsOxnPmjxN4bfoWzwUvYu3h
      gWbTZop/2o7z9LuByrDql19+maeeeorS0lLi4yvHr4KDgy3TnQwaNIjU1Ep32NKlS9m9ezcP
      PfQQ69atq5HzY+NmpjzrR6zsOwJQnvUjSpemtf5bmkbV4pcuXaJ79+7Mnz8fHx8fsrOzW1rX
      Tc2OHTtYsGAB8+bNIz4+nq+//prIyEhLIkp2djYPP/xwjazXvMtZnNh4gOPf/oEkSZjNZk6c
      OGF5QPPy8oDa8xJVJykpiZCQEAoLC5EkiYsXLxIZGclPP/1EQkICY8eOZfXq1SxbtqzyB+Yy
      9Nlbqcj7BclYOTeMZDZhNpkxGSorl/KMbzGWJqJw7oeP7484eCjJiU+v4T+uIiEtn3e+OcQ3
      u85hNJlrfGdlZYWjoyN2dnYEBASgVqsZMmQIw4YNY+zYsYwYMQIvLy+6dOlCSUkJCQkJbNq0
      ibVr17Ju3Tq2bdvGgQMHOHv2LKmpqS02l43Cyor+HQK4tWMYXio12lxNndnJocO6EbPjJDuX
      b0KvK7cYA7m1FeUlZY06louLC1999RWbN29m0KBBjZozCMC3RyBjnp1KlzFNa7Hb2yp58f5h
      nIzPJMjbmWkjrzLG1MIUb95CRUoqtr16kffOcsylpZbvTAYTB1b9Ru6lLMwmE2lnkug+oR//
      9/J99P/nCMrMEs7q2mOUzmobcvZHoRo6BIWPDzJra5zumErFxb9WOzxx77dWwQAAIABJREFU
      4gRPP/00aWlptRoWhw8fxtHR0ZKhDZW5LiqVCmdnZwwGAxEREWzfvp0NGzZQphiGlX0omugZ
      aKJnYGUfio3n/7XA1fr7NGoMwMXFhe3bt7N3716MRiOjR49ucrp8W+sxtOYYwM6dO3nggQcY
      PHgwq1evpqioiIULFzJs2DBMJhNff/01Wq2W4OBgy8yP1jYKitLz8ekeiIu/O3PmzMHe3p7o
      6Gj8/f1ZuXIlI0eOZMiQIQwePBidTsf+/fsJD//LBfD5559z4cIF0tLSCAkJIS8vj8jISMLC
      wrh8+fL/s3fmAVGV+/9/ndmHAQYY9h0UFBdcEAX3XbPFNlMzW8xs0zS7bVampllXW25my7XN
      0rqlZnYr9yXBDUHBHRARkH1fhtnn/P5ARhFUNCvv78v7H52ZszzncM7zeT7b+01tbS133303
      u3fvZvDgwQgSOTJNO6SuvVE4twdBQOXqREhsBAFdQxEkAqaS31C490ahG4q59Ff8e9xJYI9o
      R8zbXG/i1I40rBIJ87/bx+je7Tl+tpSCslq6hHs3uS9OTk4oFApHjbaPjw+iKDqSwvHx8XTt
      2pVhw4YRHx/P8OHDCQsLw9vbG6lUSm1tLXl5eRw7doyjR49y5MgRzpw5Q2FhIZWVlRiNRsdk
      rdfrHYUM9fX1nDlzxnGvz507R1paGn5+flesXju+MYW0DfvReLjg6tNQXtq4Ule7OhHSKwLf
      qCACo8NIW7+P7KR0PIK9CImNaNX7M3DgQCorK1Gr1URHR9O1a1eOHz/O448/jpubG+Hh4URG
      RtK/f398fHwIDQ3Fzc0NQRCQKS9Uf11LDFnn6kTfLkF0CfdGIrlxYTaTycSpU6eora3Fw8MD
      m81GVlYWGo0GuVxOXl4eTk5OSKVSSkpKEPfuRx3TA82A/tRt3Ya6VwzS86GfvMNZWIwWeo0f
      gFe4Hz6RARxak+goisgpqqZKb6RT6IUS2HqjhW82H+HeLp7ICs7h1KdBMN5aXIw5Oxun3rHY
      7XYyMzN5++23SU9Pp3379hw/fpx+/fpRX1/PG2+8wZtvvunozPfx8SEgIIDs7Gzuuusu/P39
      CQsLIygoiIEDB1JvMOAZNBCV3zhUfveh0Ha/6t/9hRdeYM+ePWRmZtK5c2fmzp3Lli1bCA4O
      JiEhgaioKPbu3YsgCDdEs6FVT8W2bdtwd3dn/PjxV226aEPr8M4777Bv3z7eeecdfvvtN+bP
      n4+XlxePPfYY6enpPP/886xcuZKXX34ZAKVGRfzDw4EGBanAwECGDBnCmTNncHd3dzxYl/IS
      XQyVSsWiRYscOrqhoaGO3yZOnMgrr7zCrl27HNQAAHJtDHaTCS6K9ys1F1ZXKt+7qc1cgCH/
      W2TOUUjVTSsczqVlc/ZABhmnClDIJAzu0XDOQxmFXAonJycGDx7s+KzRaJp8boSrqysREREo
      FAq8vb3x9m5qSOx2OzU1NY5+hsrKSnJycjh69Cgmk4mioiIqKiq45ZZbcHNzY/fu3WzatInf
      fvuNnJwclixZ0io6Zyc3DXKV4rKyn3KVwuEFDZ019pq7awVBaLKyv1bOoMvhWvmObgSys7P5
      7LPPiIyMpKioiDlz5vDss88yadIkJk2axPz58x1NYMuXL2fOgw9StvRdatb+iCIyArnfhVj6
      lVheBUHgvqGdefnT7SBCTAd/quuMfLvtKLfEtSe4XwTF89+gbNmHyHx8qN2zl40BPbH+dJD7
      BkdRXl7OvHnzsNls+Pj4kJGRwbx58wgODkalUrFw4UJiYmK47baGlfzFOhDQcs/PtdxrjUbD
      66+/DjTMEePGjXN02q9du5a7776bvLy8G9arcFUDkJ+fT3Z2NoMGDWL9+vUOqoP/H1BwPIeC
      tByi7+iNk9tfK9v43HPP4ebmxmuvvYZWq2XOnDlIpVJycnLIzs5mxYoVnDhxosWX1WazIZfL
      sdvtbNy4sQm1xKW8RBfj6aefBsDT05P777+/yW8KhYIlS5Zc83XInCPRdv0U0VJxvryt6VgD
      u4VhqNYTEB1KdmIGT77zC2arnTkP9G/5gDcAF3czXwqDwUBycrLDna+oqGDXrl0EBQWxcOFC
      MjMzHYZBKpVy7NgxQkJCcHFxwWaxcnJbKroQH/w6BRHeN4rQ3pFI5VdfR11sDP4umA0m0tbv
      oyj9HEqNms63xFxXvXx2QSVJpwrQuaoZ2C0EhfzqPT6CIBAXF8c999zDiy++SGpqKvfffz8H
      Dx5k0qRJzRL8ynbt8HtnCbbKKuT+fo4FCFyd5dXDRc3ix4fxw47jvL9mPwbRTGCIhrAIF6xS
      KT6vv4Z+z15slZXs6jGSemd3fJxVvPP9ft5///0m3tLFC4ApU6a0+h4V1tZQpq/DU+OMn0vr
      V+rJycksWLCAiIgIKioq6NGjByaT6U8rurnqk1teXo4gCNTU1HD06FEOHDhwzaLwNyvyDp+h
      KreM8uwSnHr8dQbA39+fDz/8EIPBwH333UdmZqbj4T127Bj//Oc/iYyM5Ntvv6W8vLyZAIiP
      jw9paWn06NGjxdXFpbxEfzYkMg3IWiY8Uzgp6Ty6gb3y2XFx5JfV4u6iQvM3TYZqtRpvb2+C
      goLo27cvlZWVLFq0iIiICCorKwkLC8PPzw+j0UhdXR1bt27FyckJmUyGWG+jKPksXt5eDH/i
      DrRaLVqtlovfBLPZTFlZGQEBAVRUVDjEVY4ePQo0kCsKgkB6ejrBwcF/Sle9xWimrqwGtwBd
      k+cjbf0+XHzciBk/kPzcUg59vxtnT9fLymSKokhdWU2TZH7ikRy+WpNIb2kt6ZX1bD7YhUVT
      h7XKCKxZs4YjR47wyCOP8M033yCKIgcOHKC6uiGPMmvWLN5//33H9hInJyQtRBxaYnkNHt6D
      TzYkczKnFBcnJaN6t+eJsb04UljAxoyTdPcP4HR5KQfycni8d1+chwwGoPg/e4lp50PnUG82
      Hri89oCtNAN71VkkbqFIvZoLBDXCbLPx/ZFDFNXW4ufiSmFtDb4uroyP7oGiFXNmTEyMg1l3
      4cKFnD592uFhNGpLlJeXX1VprrW4aidwVVUVBw8ebPLd0KFDr8kA3KydwIZqPVV55QR0CUEi
      uznG19quv/r6ehISEnBxcSE+Pp6cnBxCQ0Ob8RJd6gVcCtFupzijAPdAT5QtJM6uZUx/Jf7I
      mNLT01m1ahXDhg3j9OnTdO/enZ49e/LMM88wZcoUvvnmG+677z4+/vhjvvrqK/R6PeXl5VRW
      VHL60CksEhsWqa2JHnQjoV5xcTHPP/88SUlJ/PDDD4wdO5ZPPvmEgIAAZDIZMTExREdHc+ut
      tzrCH5dDXl6egz8/KioKo9FIamoq7dq1w8XFBZPJhLu7OxUVFQ69AIDk/+ymOCOfnvf2w69T
      MCaTCYVCwS+vr+bW1++nvNbAPz7aiqLeyOxhnYi6iCuqEU1I9Kw2et8Xh1P+Op7aHcSrg0MJ
      jetB4azZfB0+kF79uzO815Xpoxt5gSZOnIjdbmfGjBksW7aM/fv3k5WVRVZWFvPmzWPu3Lno
      9foLhQhXgggiIpV1Rl7+dDsjeoXTq4M/lXVGPv05maE9wzgtFPJYbJyjee+7tBTa67yIDWwI
      n2WeK+ed7/dhNFsZNyiKUb3bNfEARIsB46aXsZWfRuoZga0sE6muParRbyHIm78vPx4/glQQ
      uCOqi4PO4ueTx7CLInd1bn6fL8WMGTPQ6XQEBwdz991389prr6FWq5k8eTK7du0iLy8Pu93O
      kiVLbkgY75rJ4K4HN6sBgJuHCqIRf/Vkey4tm7QN+/EM86HP5KE3bEyNXb1qtZp27do1YXos
      KSnB29ub+vp6x4R2aVloa47fmjFV5Jair6glMDoM4XxSs76+nqSkJAB8fX3p0KEDgiBw9uxZ
      goKCOHHiBKdOnWLkyJFXJD00GAxN8gxVVVUcO3aMhIQE5HI5zs7ODBkyhI0bNzJ79mwMBgOR
      kZEUFBSQnp5OcnJykxXvpXjuuecc/PnDhg3j6aefZuLEiZw8eZKnnnqK2bNns2LFCqZNm8a/
      /vUv1Go1edVVbNi9H0lxHRNvHYq7n0fDvVIo2bJkLX2njMSqUvDKih1Iyqt57s5YQnu1b3bu
      S0n0SretJEKzhUfyp7Pcqxznnj2o/s/37Bj9IAoXZ8YP7XzFv0N9fT11dXV4e3tjtVo5c+YM
      kZGR2O12cnJyHOyqNTU1FBUVNaGgv1rO4uMNyXi5OXHvoE6Iosh7a/aTnltGZa0Rvy4K3r3n
      dkcX8ObMU8gECcMukvmsqjNitdlx0zSsqi+eE4zbF4BEhnLwSwiCBFG0Y9r5Fog2VMNeazIO
      q93Ogh2beWXwCJQXHcNktbJo11bmDh2F7DqKTv5WKoiysrJmZZ9RUVE3XVXPlSCKIikpKXh4
      eBAeHo7JZGLfvn2Eh4cTHBxMcXExSqWyQWnrfJKwtQm1/3W4Bepw9XXDr1Pw1Te+Blya9Cso
      KGiS5Js9ezZPPPEEEydOJCEhgRdffPGGnh/AbrNzeN0ejDX1OHu6OhqwLk02N6IxKd5I53w1
      qNVq1Go1fhclKAMDA/H39yc5ORloIAa02Wykp6ezZcsWdDod6enpaLVa0tPTSUhIwNfX15Gz
      uDjWK5PJHPz5O3bsYPr06Xh6euLr64uLiwu9e/fm1VdfZciQIajVaoec4uienTlRUkyKvpTh
      nA/vCND5ll7sX7mdgG5hTPbRYFRBULewFq+tGYletzEoNR70Ujjzc2YJdxw6jPnhx0hMOMdL
      ky4fEmmEk5OTo4BEJpM53i+JROKgD4emTWBHCgscxHsDBBm9TmYgDwjAdewdCDKZ4/fDxyoZ
      OiAYg8VCeZXB0cz29upETpwrZkdWJkPbRVBhqCe1IJ/JPXo1GVtjyWjjorARos2M5dRvOE/b
      gSA0zHeCIEHZfxZ1K4aiHPQiguxCKMZstSIRBBSXLCoVUikSBMw2KzLJ5UM3ot2OIJFgqNYD
      Amrtn19wc1UDUF1dTXZ2dpPvrpUM7u/GokWLCA8PJz8/n2nTpjFr1izuvPNOXnvtNebOncvX
      X3+NzWZj4cKF/Pjjj3z33Xf/ZzjCnXWuDJjW0OVtt9puWCjs0qTfpUm+rVu3NpnQ/gwIEoHw
      vlFUF1bg4n3tVROiKF5XzkIqlfLiiy/Sv39/XnzxRTZv3oy7uzt9+/bFx8eHuro6Zs6cycGD
      B/n++++JjY1tEk5qNAZFRUWcPn0ad3d3h8ynxWLh3//+N71792bKlCncc889LFiwAIBakwkR
      kfTSEqx2GyWX6EgHdA3F2dOVolPn8Iv0J7BbONLLxO7lKgW9HxhCVuIJXH3dz5PoxTEjxszy
      9UlMP1mAdlcuU8Z0J8yvOcPq9UI0m9Hv2Ut9aSlJcoGpI0fjJsLZWbNJ6h9PbE4ONRt+Rj9i
      GBszTjI1Np5/nU7CYLSy7lgad0VFO5rZCsvrGNqpHcV1tczdthFnhZJbO3ZyNO9dFRYDCBIE
      +YU8jSiKbN98iP1lY+jy3AIG941Ge9+4BjlNuRwXhZLcqkpC3NyxVVWhT9yD3mLGR6NCLWs5
      kWvOyaXi3//GfDYHiX8Ap50jMCpd6Ti0G6G9r25c/wiuagDatWtHeHg4q1evpqioCIBRo0Y1
      C+lYjHq2bN2G2WyhQ7dYOrW/eVbQCoWC8vJyHn30UcxmMx07duTWW2+lS5cu/Pzzz8hkMgwG
      g6Mb9e/Wsv07UHQyj6O/HqTLmF43zBu4OOm3bt26Jkk+q9XabEK70RAEgbA+10eKdnEoobFq
      KSKwOYHdpQgODsbPzw8vLy/Wr1+PTqfj3XffZdeuXXTq1Im+ffsSGxtLSEgIXbt2JScnh7Cw
      MIxGo0Onoby8nOrqaiorK0lLSwMgICCAL774gokTJ1JdXc3Zs2fRarV0797d4Y27KJXUmy2k
      FRUAMCisXbPxaf08Lpv0vRQtkeg5qxW8eH9/7HYRQSJwI4tJRbOZ4vlvIPP1oUAuI/7QYTR+
      QRAUhEqtZo+fFwPCwjGlHeFkSTE9/APw0jgzqnc7fkpMp9haxaTuMcx5oD/vfL8PuVTCpGHR
      KGRS7OfDSNcyXkHpikTjia3wCFK/hqa61N9T+DH5CPf41bBeOxS3PYnEuLnhMmokgiAwtlMX
      vktL4Q4PbzQff0p2SBD1Fgt3FJVi7dq9STlr4zWXLn0HjykPo+rWjb2vfURE2RHcXptHwudb
      /34DAA2NMWq1mrCwMOx2u+PlvRhWs4V+g0eidZKy5qdfbyoD8MILL5CUlMT06dOZNWtWE9Hu
      xoawgQMH8t///tex2vq/ApvFSmlWEVWFFZj0RmpLqm6YAbj33nuZOHEiAOvWrWvC9Dh06FBm
      zpzJM8884/gbXApRFEG0IFzBbf6zcCVenCtBrVY7yk+joy8k/YYPH+74f0vhD5VKhUqlapIL
      CQ0NdfDnBwYG0qNHD44cOcLgwYPZvn07VqsVpVLJDz/8gJubG1a5DGtZOQ/3G4C1Jhv98W+x
      WHpC+HDgxsaQb2STWCP0e/Yi8/XBc8Z0ss/lcjQ0CLdvVuH/wbtoAoqYmvoh+lI/3J98FVel
      nNPlZdRbzOTYSqmR1VGRZGFxRSLVdSYUMikvPzAAxXmPVnI9CVNBQDlkDobfXkDZbwYSzw6c
      PbKPdvISBo0Zx7EkqHLpQ/3Bg7iMGglAe50XD3TvReEHH3K6ezTVsT0ZEh6B9mAKNT/+hO7p
      J5ucwpR1BpnOA3WjHGdYBLX7M6j5bfcNY5S9ElplADw8PFAqlRQWFnL69GlGjx7dbBu1qxvm
      ihJWrdrI4NENhHGNE2mj0fi78MMPPxAQEICPjw8qlYqUlBQSExP5/vvvmTZtGhs2bGDgwIEM
      GjSIlStXsmbNmlYLjtxo2Gy2v/Tcp7amcu7QGUJ6R9DnwaG4+Gqbnf96xuTj48PAgQMd+02e
      PBmTycQzzzzj4PB5++23SU1N5dlnn23x+Ma8j7HVpaEOn4dE2ZyKuqV9vv32W06cOIFWq2XS
      pElkZ2fTr18/CgoKePfdd9FqtY4u4itBo5RistjYvD+DlIxCwv09WnUPLnuvRBvGwu+xm86h
      8L4TmebqK7vw8PAmwkKBgYH07dtghBrlFRu9hqqqKuoqKzHk5LJszwu0qzmGe0h3Cg4dxkXx
      Oboxr+Pu4Ymbm1uLGsUX37fw8HBGjhxJcXExGzduZMaMGaxevZqAgAASEhKorKxk4sSJxMZe
      v2B7S/fJXFqKoNM1EBTqvDjo4oy5spKsTW9R5SXBv+tkNKmfIXq50UnuxIG8HN5P/B27aCc0
      wpkJA8LYcSKLYV3CGdAhGIlEuKbntnEhYrPZLnzp0wP56H9iPfQlpt0fEV0hsFl/JzPWlCKX
      Sbk3RIqkvuk746VSIxOhY2xvFOebuMweHljKy5uNx+6swVJahrG+HkEqpesdsZQlrsXo5Ez0
      8FhMJtMfnhNs58tHpR7NPb9Ws4H27NkTURSx2WxNOkUbYTXWsv7XLdw34X6clA3eQaOX8HdX
      AY0ePZqDBw8yZcoUunbtyvLly9myZQtPPvkk0dHR6HQ6XFxcWL16NZ06dcLV1fVvK3v8q6uA
      /DoEUXm2FL+OQehCW67EuZ4xNSbVG9HYwapUKh19DcHBwc10dRshiiImaymCrRa51IzskvNf
      bkx79+5lxYoV1NXVkZ+f70jwm81m+vXrx4QJE1o9/lcmD2BDYjrtAz25d3AnZBIBm/Ecgtyj
      ofehBVxuXIb81Uis+ag846nPeRt1108vewwAu7UOa90J5NqeCELLr6lKpcLjkpf6LvEuyj8Z
      hmXYampEDZWVlZTtXEb6zu+o00YhiiJyudyRZ2iU/ty1axdffvkl9fX17N69m+TkZE6fPs3x
      48dRKBQcP36cKVOmMHz4cKZNm0ZMTMy1PROiiKWwEKmbGxInpxbvk9C7N2XvvY/rkME4eXkx
      Mb+EquiuyPVnaR9zN9pu96A/9g0Kaw0SVx3Tevdl7raNjGgXSZS3D/6uWqwyG1IB1Opr1yu5
      bGVgQDfqlAtI+nIrod08eHHjGrLrc+kS0w7LtkO4vfIy8kuuRdOnN4bNW9Gcr2aq3rIVTZ/e
      ze9ZUBDG2F5UvfVP1NFdMRw5itvg/njcNwyrzU5+aQ2ersrrnhNqN22m8utvQBBwf+RhXIY3
      pVBvlQEwmUzs3LkTaOhUW7JkSbObVFFagkwmZ/uWTfgGhRPb/cplYX8lvLy8HJS50MBtdM89
      9zg+N05CjS3XF1Mk/P8O7wh/vNr7/a0KVi1BEARcIl7BbqlCqvK7+g7nMWbMGB566CFGjx7d
      LJezbt06MjIyGDFiBPHx8Vc9VkSg7kLYRxSpO7MEa91JRLsFl4i5yJxbH5+1GXJRuMeh0A3F
      kL8a0VJx2eY5gPqcj7FU7Ucd9Cgq7zGX3a45RJSWKnTtuuInbViAmewHQSJHFvuoQ/+50Ws4
      e/YsqampODk5MWDAAOLi4oiPj2fbtm0N9yAigt27dzvCVv/617+YOnXqVRvYzDk5GFIOIXFx
      QRUVRfVPP2HOyES0WPD8x3MQ2FzLQhEagtuE8ZQsfBNbTTXqnj0JmTEdsTYbw8/PoD/0OVK/
      7kjcQ4EGYj5XpZJoP39HnX9FvZ4QjZba0uprFrW/EjJ2HiFycFdCYyOxDe6B6ueNlOaV0XHh
      AqQtdJw7jxyBraqK/BkzAXAZNRLnkSNaPLb7Qw9iOHQYS3Y22jvHourRnTqDmTkrtmOziUgk
      sHjacJyvQeDJbjJRvvwjDEkHUfeKwZJfQPV/vkczoD+Si4xJq/oArFYrhYUN3C1r165l8uTJ
      zbpTr4S/2wNoCW19AK3H/9KYDAYDarWap556iunTp5OWlsbEiRObNCJdD2yGPGoz5qKN/hxz
      2Q4s1ck4t3+p1eOy1mVQm7mggWDPOQrnds9zKW1Gk+OU/46xaD2asJnInFou1bwcDL88i0TX
      HkXvaYg1+dSvfxL17e81jCNrFxJnb2Qdb0WQXRhneXk5RqORl19+mccee4ylS5cikUjo1q0b
      69atY8KECXh5eZGQkMALL7zg8B4aufkvRv3+/VR99x9UPXpQt3kLglyO1N0Nv/feRZ+QiDEt
      DZfHp13xmWosiXR8NtUi6ssaJv+LJvUjRQVsTG/o9K2or+dsdj7RJw0oFDI8grzoeQ3ynFea
      E/Z8voXIwV3xatewGCnNKiTj96P0mzLyisdsnF4vNwZzbi4Vn/wb89mzyP39sZ4P1yRF9SU/
      rDPP3NuH93/YR8cQL0b3ad6vcTlUfPY5SKVY8vJQRkWBKFL720Y0/fvjMfUCpUWrZj+z2UxC
      QoOQQURERDNB8Tb87+Ds2bN88MEHSCQSFi9ezMmTJ/nuu+9YvHgx+fn5LF261BE/j4iI+MvG
      lZeXR01NDb6+vo7n62L6hHPnzlFbW0u7du2uOHEsWLAAqVRKUFAQzs7OJCQkkJ6ezoQJExz/
      HzhwIEOHttz0djkIcg9EuwVz+Q7MVfuveVK+GmfSpVDqBqHUDbriNpeDavh8jNtep255HwQn
      DyRxs7BX5lC09U2OuXbDzZxA9NE1OI37ymEEli5dilQqJSoqigEDBnD06FE6duxIv379OHny
      JPfeey9ffPEFcrmcJUuWEB4ejp+fHzKZrFk4yfD5F7R/fS4KX19s5eWY0jOwVVahT0jEkJKC
      ohU9NsIlfUaC0gXkmiaTP0C0rz+eThpOlhTTXudJ2PEa/Ed1aiZq/0fh1ymYrMQTaP0bQm5H
      Ek/gHnr18uUrGR/RbKZ0SUMFkLW4BP3efUhMJnwXzMfv63XsPFdO4pFcTudXMrxX84quRq3w
      Zse1WNDv2UvAx8sRjUaq16wDAXzfXkzRS3Nwf2gywvnwfKs8AKPRyEcffeSwkM8+++w1kRO1
      eQCtx5+92p41axZvvPEGarUaqVTK/Pnzqamp4fXXX6eoqIjDhw83i5P/FR7Ac889R1xcHJs3
      b2bmzJmsXbu2CX3CypUriYmJ4ddff2X+/PkEBwf/4TEZLBZqTSa8NJpWrRKtdRkNAh/qIFT+
      41uMzd9M3pIo2hEECSaTCfPXt5LRdz7do+KpMNRTvmEW4dFjUHS5+7qObbfbqa2t5eCxLH7Y
      moKzzE7fjp7U1dZQ+MmneDz8EK5ubri7uSFLTsGpugYXuQzvLp3xHj8es83W6vtkr9NTvmIF
      hpRDSLVa3Cc/gFNcnxa3vZyo/dVgzs3FlJ+P3NcPVVhos99FUeTUtlTO7D/FMaONE04aBInA
      hKFdmqzMbTYbKSkpBAQEoFarKSgocPS6NOoIN4bPjKdOUf2f7/GZ9zrFbyxCe9dYqtesQztx
      PFitbP7qZ072GEhspC/DYi+c42xRFcvWJZFdWEmYnzsz7undRLzHVldHwcxnKX5+Ppn5FUQE
      eBDTwQ8BODd1Gn7/eg/p+Txuq2a/srIygoKCGDduXGs2b8NNjIiICIfb3vgSjx8/nv/+97/E
      xsaydu1aTp06xaOPPtpq0fUbAZlMhq+vL87Ozsjlcurq6hg3bhwnT54kODgYV1dXJk2axJgx
      Y/jggw946aXm4ZdrQV51FV8fOohMIiHEzZ3x0S0T6zUZo3Nki2GfFo9/kUejVCod4vYSiYSg
      oCAMBgPe3t6Ulpbi6en5p+RgGrtXRdGOVV9Gtw6xSCUSvDTOOAV3xVJbxPUW2BrMVkprbaxO
      yGPyHcNJOpmPyVLIfS4J1NxhQy8/iKHdQ5TnlZOblIQ4cgQGhQLq6lCtXo2Liws6nc7BoeTu
      7t5iOAmgfMUK5IGBeM6YjrW0lNK33kbm59uiJxE5qKtDnrMlUaKWULHya4ypaciCAqnJzUMR
      HITu6aeaxsoFgagRPeg4vDs/LN7Akicb4vkvfLy1iQGYPn06gwYNIjMzk9raWqRSKVlZWcTH
      x6NSqXB1dXXkn6Tu7ljLyxGtVqQe7ljyC7BWlCN1d8d07Bh95HpXAUI2AAAgAElEQVT6HN+E
      +dezFIWF4vH4NPALYNE3CTx+RwwxkX6kZBSy6JsEls8a4yDkk2o0/BjQi/ytqfTsFMyaXSc4
      nFnEgx1ckLi5Ib2oCqxVBkCr1bJjxw7HQzxr1qw2TeD/UWRmZmI2m1EoFKSkpFBSUsKmTZso
      LCwkNjaWe+6557rj5H8EoihiMBhQKpVUVVUhkUgQRZHk5GSHRCU0NPU1KdO7TiRkZzE6siM9
      /QP55+4dlOr1eLdQ3Xa9eP/994mLi+O9995jwoQJVFRU8MMPPzB+/Hhyc3N566232L59Ox9/
      /DGvvPLKDfGQLUZzi5oDgiChxLMHTgdXID2fF7Clb6Ry0Hwun4a+PDLPlfPmqkTkUgkyicDg
      HqHYK86Qcqoexe1T8RrgjmbnN9h3PoeusBexr7yCU1wfLBYLVVVV1NTUUFxcTF1dHenp6dTU
      1GC1WpFKpWi1WodBcHNzw02rpS45hdAZ0xFkMuR+fjj17Ysh5VCLBuBatYv1e/dhr6lpoJ62
      20EUqVm1mqpvVuEx9dFm2wuCQJC3K9tTGpT3Ar0vUD03LpQbPehPP/2U2267jYqKCrZt29ZE
      SQxA7uODOiaG4gULkfl4U/nlV0g9PKjbtIX6ffuw19fj+exMJFFR2E+epHTJO1TOeAFPrRO9
      OvgD0KuDP+u0JzidX+EQwCmsqOOI3IPXM7ei63EvY0dHMH3lAXpvT6HD1IebhNFaZQBcXFxY
      unQpZrO5YaebLGzShtbjkUceYfbs2cjlcqKjo1m2bBlubm589NFHKJXKayZlu5FQKhvK3err
      6zGZTCQmJjomxvr6erZv387333/v0DX4I/B2duZESQPHldVux6WFcITZbGbjxo2EhISQmJjI
      9OnTHaIcixcvpq6ujqioKB588MFm+17s0QQHBzN8+HBOnDjBuHHj2LJlCyNGjOC7775r6E69
      Aav/ynNlJK3aiUQubTH5KQx5laObXqX9gRXUSTWkR05iYFivKxzx8vgpMZ3JI6MZ3COUaUv+
      yxNLf8FsqOWVKbchO98t7TLhTUxJYShri1CdD9fI5XK8vLzw8vIiMDDQEQISRZG6ujrKy8sd
      BiI/P5/jx49jNBioyj+H/4oV6EJCGkqLjx3Du1s0SqPRoep2vajbvh3XsWMRDRVY9n4IgHbs
      YxQ8Nxf3hx50xMovxnPj4/lu+zHH/xthtVqbzY1z5swhJyeHX375hcTExGbHcn/oQYypqZiz
      zuA5aybW89Ku7g89SO3mzajP6wGoe/RA5vEzzqWFlFXVY7XZkUklWG12yqoMuLtcqMqqqDXi
      7eOBz/0zqNmwAeuGDbhJI5A8PBVVl6Z5vVbN5IWFhSxZssRhwR555JE2I/A/im7duvHhhx82
      +/6pp54C/r4S2EceeYTi4mImTJhAp06dGDhwoIM+YcCAAYSEhFBcXMyiRYvw8vL6w81yQ8Ij
      2Hkmk/TSEh7sGYu6hRe9kcRNrVbzyy+/cPvtt3Py5EnHb4sXL2bZsmXs2LGjWVL5Yo/mYg+m
      EUOHDmXlypXXVE13JWQlniBqZM/LJj8jA9pRMO4TDpUU4aJSM9AvAPl1eh1BXq4kncwHwGYX
      +ccgGV4laegCm4oMycIGYtz08lWPJwgCLi4uLYaADAYDReHtyP3ySwyB2eSUl1NdVYGoNiEu
      SUTtHY67TzBarRadToebm5uDUK41hJX22lpEowHDT7Owq0KR+fhg2v4agkSK3WRC2sJz4e6i
      5qk7mzfB+fj4cPToUXbs2OFYLL/55pt89913rFmzpglp4MXXru7R40In8HlYioqxllcgns9V
      ilYr1opyAtoH0btC4NXPdtC9vS+pmUX0jgrAT3fBe40I8KCsup6jVhUxz84iJaOQ2p9T6NC5
      OWV3q2ZxZ2dnunTpwp133glw0yV02/C/j6ioqCYuskwma9Kte+nvfxRSiYTh7VvPEzRz5kze
      f/99R+NVY+3EuHHjWLNmTYtVRY0ezaUGoHHfJ598krvuuov58+df72U44OytpehUHgB2mw2V
      S/M6fX9XbeuJ0K6Aewd3Yu2uE6RkFDLngf6EkY05t6DZdvbKsw0r62M/Nis7bS3UajVhI0cQ
      EBmJISUFQapHUv49olM+NYIbFWf+Qy0x1DuPJTMzk6qqKqxWKxKJBK1Wi7u7u+PflhhXJa6u
      VH69CpfI09RlKlGEKpGThsRtaJNYeWsgCAKffPIJu3fvJjAwkG7duqHT6Zg9ezaHDh0iNDS0
      1XOn3NcHdUxPypa+iqpnODWHzqCOiUHu48PU27xJSS8k81wF9w7pRExkU8OikEt5ZfIAlq1L
      4s1vEgj3d2fO5AEtiva0ygA0xmPXr18PwEMPPdTmAbTh/xTc3NwICQlhz549Tb7fuXNnE53e
      Rlzq0TR+BxAbG4tcLsfFxYU1a9bcEGr1JsnPSS0nP0VRpLhCj4erulUKXpeDTCphwrAuF45r
      1yKaarFkbEYeOQoAS8ZmjL+9gLzrvVhz92O+pOz0WqEIDUEeHED9qnEoBsxAHjkKF8DfVEf9
      +sdRBFmRD7/HEU6qrKx0NLwVFhZy8uRJB+OqRqPB3d0ddWERkjNncNdoUMj74NLpMPa6wxgL
      fPF49OFmJaetgUaj4ZZbbmn2/bUSTIoWA2rdYWxiJpa0NOT2EpQ6I6LlPgS5ml4d/enV0f+y
      +4f6urH06ZEOLYXLXUmrZnGNRsO4cePYs2cPqamp/AUaMm1oww1Dfn4+7733HkuXLgUaVvMv
      vfQSvr6+TJkyhX/+8594eXnx5ptvYjAY8PX15emnn0YikRAcHIy7uzsajYYnnnjCYQCsViuv
      vvoq7u7uLdJLtOSxNHbTXkzfEBMTc0OusTXJz9TTRbz97R7iOwcy8964G3JeAEEiQ33HBxh+
      fgbL4W8Q1DqsuftQxD+Fss/jABh+ewHrqV+Rt1B2emnT1+VgK0hFUGocRgZAUDqjjH8a88HP
      kHcYfcVw0sWMqxUVFeR8/wPmLp05KYrodySjNKrw8A5EXVRLhM2K23nx9ctVJ/1ZsFVWYdz5
      Bpa8YmyqsZhrzuHUrRuWko2IW97A6dY3W3UcgasL0l/VAOTl5bH6fNlWTk4OixcvbgsBteF/
      CnV1dezfv5/c3FxMJhPHjh1zKHi5ubmxfv16pk2bhtVq5Y033mDhwoUO1bJLJ/c1a9YA8MYb
      b/wdl/KH4KxWolHJ0bk6UV5dT8a5clydlHQM8XQoZl0vJG7BOD2wDlvBYURDJdazCSh6Tbno
      9yDs+pIm+zjq+w8dQup65fp+ANFQheDUvAlVcNIhGqoatrHbzo+hCqlfVyTOF4oaLmVcDV2/
      Ad34CQj+flRWVlJRUUFlZSVn5i/geFoaNUZjE+6kiyuU3N3dcXV1ve65UDTrseWnACANiEFQ
      NISbLIWFlCxaiEu7fdhUU9Dv3IXHojeosyqpzPLF/8TTWGNnIPNuPT3KlXBVAyCVSh2ld1ar
      9aZs6mpDG66Gu+66i3Xr1mGxWLjrrrsAWL9+PS+//DILFy4EGrqklyxZwunTp5sQ2d2MyM/P
      Jzs7m/79+1NWVsZbb72F3W5nypQpCILAihUrEEWROXPmOK4lItCDj2bfyk8J6fzjo61EBumo
      qjNSb7Iw54H++On+2EpXkEiRBTZUFlnTf8Oc9G8HHYXl1G+ob28qf9mkvr+klNK3L1/fDyD1
      7Ypp5yJM+moSTpZTXmOgd5Q//nkJSP17YK/KxfDzMwhKZwQnHaadi5B3m+DwQi6FskMkhsOH
      0YYE4+3tjYeHB+bMTEI6d8F/8mTsokhNTU0T2c+cnByOHj3qKEJwdXV15BcuzjVcqTrJmr0b
      49Z5SM6Ly9u3zkM1Yj6ysAHU/Lge11uGI+QcRjN4OPrf95Lzr8+p6DwArwh/6iUakral4B7T
      k86hXqiVf6wc/6oGwN/fn9mzZ2MymUhKSmLZsmU888wzbX0Abfifgr+/P6mpqUilUkcoJi0t
      jY8//pizZ89SUlJCYGAgAQEB2O12FIq/XoPgWlBXV0deXkPS99dff2Xs2LH079+f+vp6nnvu
      Od5//31qamp49913mySZk07mk5JRwPJnx+CkaniHE4/msnhVIu/NGPWHPYFGXEpHoRz4PFKv
      i5Luoogh5RCejfX9/leu7weQuPhA14m8/M4qfLVyvLw8eX7nMborirhv3D0E/DwTRdyTjhCR
      eD4/IHELRtpu4AUajvNhEe3dd1E8bz4SpRJll86Yss9S/cMaPJ94HAQBiSA4EseXwmAwODyG
      mpoaKioqyMrKou68CptKpWqSeG70HDT2aozb5uN07+dIPBroRKzlZzD++BhO963EWlGJZtBA
      bGWeyJxqkXp4oMZMv0dHkpKWwVvV09DW1ONcdYzl1Qam3x1LTIcLuQCLzcKvJzaQnLsfgNjg
      OMZ0Gotc2vJ8LZ03b9681vxBG3U8+/bte80egCiKN52GcCP39802LpvNdtMl2P/Xx2QwGDCb
      zeh0OkJDQ3F3d0cQBPz9/Xnqqafo1q0bp0+fRiaTMXnyZAeN9MVc/H/GuP4IysvLKSwspGvX
      roSGhrJ8+XI2btxIfHw8x48fZ8SIEWg0GjZt2sSwYcMcY1rx30OMH9KFIJ8L1UDBPlp2peYQ
      4OmCt/v1tIY1hyBTIo8cjaL3Y0i7TyalVI2LWoFK0TCOqvp6qnbt5pBbCClnytCo5MgP7kcR
      EoIiLPSyx/292B19bQ3TfXZxKqccuV9nUiucOJhezBCvIlwGz75oDAokLn6Y9r9HvbgVc8Vu
      rPpMFO59GyZ4tRqnuDj0iYnUbdqMrboG94cfRNUKyVu5XI6rqyve3t4EBQURERFBZx8JHSt+
      I6B8Jx6msyg9QtCLakdPw5EjR0j59QvOmj0olgRwOqeAd75N4NPNmaSZ2xHhXI27dxj6hEQ0
      Q+/G9PsbSFy8sJ07R962n/kgR8mCh+IJKDNwx+juDIiL4J/f7SGuUyDOagV20c6S7Qux2a3c
      3W083QNiOFJwmB0ZW+gXPrDFfMA1P6m5ubkEBgbedBNnG9pwOQQFBbVIa9EoaNKpUydHpQ7A
      +PHj/7Kx3QgolUo++OADsrOz+eKLLygpKcFms6HX65u99DX1JocI+sVwc1ZSU2++thNfwvHf
      EgRBwu+p2az4JYUeEb68eH9/tmdlsDsri6zA/kT+uA0Pi56FzgHc42Tlln5XVl2rqDHgH9YR
      pxHjKP7PXvq28+FYTgpylRPVqhAu7aoQnHTY687hFDQThW4o1UcexWY8h1Td8DxI3d3QPfkE
      0FwU/lIYTBaOZ5eCQLPwizV3P8atr6Pq9wyBA2ZiL03HtHcZqhELkAU3VOPU1tZStDGbaruG
      KomUd1Zupn8nb7p46jmbcYwnP/Jh5v3DkFVWoHh5GR7uKoIGVaLqVsX+6u4Mje2G0qrBWFOP
      W4AnOrmUIT3C2JV6lvFDu3AgZy+CIPB43xmOv3s7zwje3r6ApJx9xIX2a3ZN12wAjh07hp+f
      X5sBaEMb/kao1WoHu2l8fDxbtmzBarXy+OOPU1tby/Tp07Hb7bz44otN9usU4kVyRgGhfhfC
      GvVGCxl5FUy7/RoqkkSRsuUfNeH4V7Zr2WPqGKwjzM+d+M5BpBXmc6q0hF4uYbhGapkxuR9V
      SUkIJeWs04cz5iqht95R/ry1eg+De4RyW3wkr32+A4vNTgc/NT6lOxBNzyIoLzRFWbMTwMML
      c2VDSES0WxDk53s5Wll9BJCcXsDyHw867tvyHw9eCL+IIqadb6Ie80+HdrDUMwKJNgjj1teQ
      PbgBQRBwdXVF3X0wluPryW7XhZ69jDxpSac2vxiTbxbv6oM499tOgkb2p7BrVzJqazlgEjCZ
      DOzPKsEl40eMfp7E3zuYuvo6XFxccHNWUlSuByCj5CTdA2IuoQER6B7Qk/SSk9dvAEwmE2vX
      rnWUfyYlJdGvX/ODtaENbfhrEBwczEcffeT4PGrUqCa/9+lzoZrm4q7p+4Z25uVPt4MIMR38
      qa4z8u22o9wS1x6dtuVVfEswFxRgzsjE7/0Gjv/aX39F+cyMFrcN8HJl8bQGJap/J+1lZPsO
      HDpSjK+HM4rQELxDQ2BfIlW/FTSjOLbrSzHv/wRbwWEEtRuBXccxeVQ0cz/fSbXeSGzHACYM
      7UywjxZzUhb16x9HGf80gpMOa3YClmPrcL7va0zV27FUJeMSMRfjwaNUrlqNraYGdc+e6KZN
      RXKFpq/iijo++ukgb0wdQqBXA/fPudIa5n6xk8WPDcPbyYaoL0PqF91kP6lfNHZ9GaKpBkHV
      EHKTRYzEcvxHnA68TXFuZ0S/cvzGOGGp7Qpn4hmsKcG7rByPqY9itVqprq5ukFANzWbT3uO4
      9w7gwNFk9hzej0QiYevhfOK6RZCcbKe6sAZ7vYilvaVJjrbaWI2LsuUEf6sMQFVVFTabzcFf
      IpPJyMrKarEBpg1taMPNCw8XNW8/MZzU00VsSz6Dq0bBlDE96BhydUoKURQ5sfkQFbmlSLHj
      bbRR8e8VWHJycb6lqQESLZYGKgVNUw5/k9WGUiajf5dA3ly9F0+tE746Z7KP6bmtb0STyd9W
      fAzj1nko459GHn0fWAxYTv1KL+te+r/4RjNjoezzOLKgPlhz9zWUgfp2xWnCKiROOtTOkwAw
      Hj1G7eYt+Lz+GlIPD/SJe6heuw73h5rzOTViS/IZRsW2d0z+AIFeroyKbc/W5DNMGt4JZArs
      tcVIXC5oBNjrihsa3xQXjIsgkaAe+yEBGTsZk7SVxXXhqPbXYvboy7ihUXToFkT+U9Nxe2AS
      MpUKnU6Hs7MzHTp0RFTrSMmvpae/G3qrlISjBQwbMpih3QOpqqokVN6elZs/5+S+DKKDu+Pi
      4sLp0gwOFuxj2pCnycrKQqvVotVqHQaiVQZAp9ORnZ3NqlWrUCqV6HQ6nC4T82tDG9pwc8PN
      WcXg7qEM7h56TfuVZORTkVNCv6mjkEgllPWPIuvLtUQ/8gCqTg1Nb3aTiapvVqHfsxdBIkHi
      5obHIw+h6tLQOdzZx5f9eTmMjYxizuQB/LDzOL8ezEDiamfi8C5NzmdO+gxFr0eQtRvi+E7i
      F41+5R3YSjOQejWX5JT6d0fq3/2y12A6dQpVl87IvL0B0AwcQMmbzUnaLobNZkeualpFY0rP
      wJZ+Cn29GXOICkXsYxg3vojqlreRuPhiry3CuPFFFLFTESRNp1lBqkAWOpC4ih8YOe8Rcktr
      CfHR4qpRItrtDv6fJqgt4N7S+ZwJuotD9MJec5bpuk10G/kWEu0Fec24gXF8tu8jNuWux1hm
      Ity5PZPjplBbXkdiVqKjG9rZ2Rl3d/fWh4CGDh1Kr169rqoF2oY2tOH/T1SeK8crwh+JtCFu
      rosKZa/Kl9ioC1Uz5cs/QuruTsDHy5EolZgyT1O27EM8n52JMjycgWHt+ColiZWpyXT29SOq
      mxZDQS13d45GdUlpub3yLBLPpnxNgiBB6hmBvepsiwbgalC0a0f1TxtwvXMsgkyGMS0NeUBz
      feKL0adTAMvXH2RMXAQqhYyqNWupTNjL76rOPN7bn4p/r0Ad1weniJHUf3sfiHYQpCh6T0PR
      /f4WjylRq1G2b4/00EG6Dhro+F6fkIAyMgLJJX0Exm3zUPaeRpfAWNpvm4et6khDKe2G6ajH
      fugwAt7OPswZMR+jxQCASt50vjYYDE36GlpVBiqVSjl37hy//vorBw4cIDo6+pr6ANrKQFuP
      //WSy78KN+OY4OYcV2ZmJgkJCURFRfHOO+/Qp08fh17BjBkziImJ4dlnn2X//v0cOHCAAQMG
      tHgcm8VK3qEsgnq0Q5AIlGTkU1daQ2jvhonYnJtL3eateL3wPBK5HAQBmU6H1NWVuu070MTH
      IxEEuvsHIAGK9HWoZHJu79iFIDf35ufL3Y+g1iL1vDDRi6Id877lyKPHI9E07Qq2i3YO5Oxh
      e8YWzpRlotN4oVE21XiQ+fpiyc2l8suvMCQlod+7D/cHJiHVai87J3i5aaiqM/L5r4fRl1WS
      tnUP64L6MHBANCNv64dm8CCqVn6DOu521COeRdHlHhS9pyHz79Yin5DNbufjn5L5LB/yDp+g
      w7mTUJ+N5ej31O9chfbu+5D5tkM012E5sgbryZ+xn9mB4OqPaddiEKRoHliHos/jmPa8h/X0
      NuSd70SQXkigy6RyZC3U/jdyUHl5eREUFNQ6D8But1NTU4PZbMbJyelPUS9qQxva8OfAZrM5
      6IkNBgOCIFBbW8uyZcsYO3Ys69evZ/r06XTrdmUuIe/IAEoyC9j27nrU2oZyxD4PXAjPWAsL
      kQcHNauskYcEY93ws+OzRBDo7OVDz8DgK55P0Xsqhl+eQ6INROoXjWgxYEp8H4mufbPVv8Vm
      YemOReerXmKoNlaxYPMcpsY/RfeAC9VNgiDg8fBDWG4Zja2yEmV4OEIrmv7uH96VHhG+/L52
      G5JuMUwfHU/U+byJRKlEM2gA9cnJKDtEgrq5MbsYe47mUVqlZ/nzY3lvzX6Szn7HQHkB8shb
      0d49EUvqh4gVB7GeTUQWGIugDQGbBcvhb5C1H4HENQDDz9NR3/sFCBKkvl2xHN+ArOPd6H/f
      jaWwELmfX0OOY9fvADiPHok6OrrZWFplAKxWK/7+/owePZqampqbvkuyDW1oQ1M0Sn3u3buX
      OXPmkJmZSVlZGVOnTiUpKYmwsDC++OILfv/9d1auXNniMQRBoOttvQmPj8JY21CLLr2IVVTm
      54clN69ZeaUlJxeZ39UF1C+F1KcLqhHzMW55DVFfhijakXccg2r04mbb/npiA+5OHk1q4AeE
      D2bRlrksvXM5avn1ha5tBYexnN4BQGT7Yfj62pG6gGsrkuathSLAA82k9xHOj1He/X70n49C
      0esRFL0eoT7vMACCWodorkM5cDb6VeMw/b4EqV83pP7dMWccpOyrZJSRociDQ6g/mIzp+HHc
      HpyMzMuLyq9WwsMPNTEC9ur81hmA8vJyjh8/zpdffkn79u158sknb7rQSRva0IbLo1Hqs5HE
      LiIigldffZWXXnqJW2+9la+++opnnnmGM2fOXPVYGp0LmhZ4gxTBwciDAqlc+TVuEyc4cgBV
      3/+A17Mzr2vcsuA4ZA9uQDTVgFzdJMxxMZJz9/Nw72lNohP+2kCC3UNJLz5B98AGL0AURSpX
      fo0hJQWZToe1vAKv559DEXyJNyKKmBLfxZz8FYJai2ioxpLyJVKPEeh3y3AeNdKhGWw3mdD/
      noDHtMdadU39ugZx9EwJ09//jVhVJv0HRTom/4Zz2xENldj15Y6vBCcdyBTYcvZhPrQK0VSL
      9cxOnO79EnPSvzEkp6L2Axl7IReUCidk8SMwpqbiPadBlKdu85YmBsC4bd7VDUBKSgqfffYZ
      //jHPygvL2fGjJZrfdvQhjbcnNDpdHTt2hWAQYMGOf7t2LEjd955J506daK8vJy5c+f+YXpq
      3dNPUfXNKvKffNpRBaR7fBqK66DVcEAQHHX0V97u6psYD6diPpON/3vvIshkGA4fpm77Djwe
      ebjJdubU1VizdqCZuuV8VU8xxo0vYMvfitItkKoPnkAWNRbsEvS/J6CO69MQ/mkFpBIJT98V
      y9N3xWLc/Q4S7I7frCWlVHz+CSqlSO3GjdTsseD84GQkbiFI3EOwHF+P6fe3kfp1R33nR1iz
      dmDJ2IrCS4/UwwdFj+nIO42leuUbKIVdVB72wX6+8udiiGY91rMHEcSrkPtbrVaSk5NJSkoi
      NTWVO++8k9tuu+2aPICbkUG0se37ZkvYmUwmh1bqzYK2MbUeN+O4/o4xXa4PoDVjMhqNfPnl
      l0CD4lpFRQWRkZEcPHiQmJgYfvzxR4qLi1GpVDz6aINw+09H11JUU9AkBFRQfa5ZCKh6zVoQ
      BLT33gOAveoclR89i6Z/HELYIMweXfg9LZecxO/w1zkzpL0Cl4gBCBov6n98DLEqD2lgDBK3
      EEyHfsPmNhHN4NtaPflfClvBYYxb5+F0/38QrVD00hxcbx+NmLkQRa9HsOjbUbP+J3zmz8G0
      9QXs1ecQnL2xl50GASQaL+w1BVirlWhufRp7eSbWcweRtJ9B/ca3sOmVOI+bS/WP63G/KAQk
      mvXULut7dQ9AJpMRFxdHXFxcQyPIiRNtgjBtaMP/Udgrz2I68CliXQmy9sORdxuPIDRfDApy
      eTM9XVG0Y0n7D9bT27Grdcj7PoXEPbTZvnPnzmX8+PE4OztTXFzMkSNHiIyMZNOmTcTExJCa
      msrMmTObLEJv7TSWpTsW8fb2BY4kcELWTh6Lfxq1XI29+hyWk/9FUn8ES5US0XoHtrx91P/0
      PPLAeCRqNwq2/os3C0cTZUsjRFbC2XwfXsgO4eUjL+GlNKHsNxPT7qVIfLuiGvAcUv8eWNJ/
      Q9lhdrNruBpEuw1MNUh8o5FFjqT+2wnYFZ1R+Zci5H+ErOMtWI6tRdB2ROaUjX7t80ikJTiN
      +wqJNgDR3ED/YPjvLOzFhZjLXJBX+OI84gEsx3/Ckr4edb/bMR1NpH7v/iaTP4Cg0CAL7X1t
      XECCINC5c+drvtg2tKEN//uw60upX/cYit7TkLgFYU5ZiagvRdnvmVbtb977IbaSkyh6P4al
      /Cz166bhNHE1Eo1Xk+1EUXSEotLT09mwYQPZ2dns3bsXaCCkXLFiBd7e3kydOhUAuVTOi8Pn
      kpSzl/SSk7goXZk76k28XXywZidg3DYPeac7UEb3Q5q1i5qP70QQK9Gfi0Z3z2xkWimf75Yw
      VrWLgZJ9IFWCmMZe36f4snAyz+sXg1SOaKxG3q6B1kIWdTvGXYsRzfUIilY2xooi5tRvMSd9
      er5fQIKi9+OoRsyj7r/LkQfqUA35BxK//8femwdGVZ2N/597Z5/JvpOwJoR933dkE60oLmhF
      u2hf21et2re12mrVYu3bRdtvV/3VWlvrW6tWEAVElEVkUbn0fNYAACAASURBVAEBQbaQsIRA
      9n0y+11+f0wySUggCSSZCTmfP+DMnXvPeeZO5jz3POdZxlL7zE9xJNiwZNfhP+dE0yfjiGlM
      /Vy77l3ks/uQ+12DxZpLzdur8R49hn1MCuqZz1DcB3HMvg3L7NYVlHH8gx1PBicQCHonyrH1
      GAcvxDzmVgAMKcOpe/kazE3MLhdCr5/4ov7rQyRrDGrqeKSafJRj6zFP/Gazc73n2ayvu+46
      vvrVrxIIBADIzMzkkUceaTGmLMlMGziLaQNnBcdU/WjOIrwbf4p92d+QE4L7EOZxd+LZ8Bha
      VSFp9z6PZDZTufIBcmvn8OjsgcjFVZhG3oRv6y+ZXreKv5fdgTfRBBsewzzp7otGGreF/4t/
      o+R+iP2O/zSLGAaQByzDf6aA6PRx+E+eRHUFcCz9GWV/eRHr5IHUfbQV34GdaCf+iXJmL5Kq
      gMWEfdE38Kz7Pkl3LaXuw7fRcl2g65hSolFOfgxGC5bp320hizlzDMKVRyAQtJPzTb9dEw80
      e/ZsHnjgAR599FECgWBiM7PZjMFgQNd1Tpw4wf/+7//yxz/+sXUpAx68m39G3fPTcf1tEbrq
      Q6srayK2FCwao3uRzOZgecaiL6CJKcs87g4sVz2G7iwm+LkljJlXYZn1/dA5ytG1GPqMbffT
      v66p+He/GEoXASBHp2G99tf4d7+IY85sfIePUPfxx+ha8F7Xbf2YwNFjOObOQTKo+LY8gmnY
      dahJ34fsn2HoMxbPmgexLfk9yon3MDty0GoLkZMGY7/1Fex3vIFy/EPUwi9alUmsAAQCQbsw
      DrsO9+t34E/MRI4NmoDM45a3KzBUkiTM4+7A8/6PME/8JlrFadS8zdiXv9bi3Ntuu40bb7wR
      ALPZzKj6PEJPPPEEAP/3f/93kZF0vBseQzm9A/PkbyEnZOJd/wiedd/HfstLGFKDJmzJGotW
      fhyt8hRSVApWOcDQfvFsP3CG2fIxfDv+H4ZBc9mpTGRoqgVbTDpq6RG8m1YgJw9FK8tBObsH
      +80vtf8G+mpB15sljIOgEkDTkCQ/KT95jMq/vYzveC6610vVP14h+htfp+bt1UieA1hGL8Y0
      8kb44jWQDFgXPYN75d34P/kTkiUaTbNhiE3AdkNjegjjiBsI5G1udeXSqSuAowf28sHGLfgC
      amd2KxAIIgDZkYz9lpdQz+3Dv/sljIPmYJ7xQLuvN894AOOg2fh3v4RauA/7LX9tYf8PnWs2
      X1LAqVqWi1aRh2nYkqDMiYMBMA1ZjH93/WSt6/gPrcIwcDbuVffg//wfSCY7d/n/xDu+q3jZ
      u4x127/kT3//D+9UT+Ru6RVMQ7+C4xvvICcNQas6hZw0BMedbzVLxNYmlhiQJDRncbPDmrMY
      ZBkssRhTUkh5/DEy/vIC6S88T9SihXi3bwcdohdORq4vq2mfNBnXtm1gTcI88S40Vym6twYJ
      L2AmcOANdF8duq6ju1xoTmerzjttuoG2F2d5ARs/O85Vk7LYeeA01y++KvSecANtP8KNsH1E
      okwQmXK1Vya1upryP/6ZQOE5YpctI3rhgrDL1FECuR+i5GzAMu9xvOsfQas8hTF7IYFj65GM
      ZsyT7wkWiUHHtvTP6HWlBA6/g654UfI2408ez9azVgrLa0mPMzF/TDrR2bMvy+7fFP/+11By
      P2yRNdSYfTXm8Xe2ek3DvfLvfw2tPBfrohUAVL+1Es+uXUSNrkb12jFIpyBQgu0rv0Et2I1S
      dIC6nEFYjOsIKDPQtKRgnqYmmZw7TQHkfrmbgGMgIzJTWPf+BpZce01o08bn86HreqgwhcVi
      CXvbZDLh8/mQZTki5Gloq6qK3W7v8rEAnE4n0dHRbbbNZjMWi6Xd53dH2+fz4ff7I0aeK+Fe
      1fz9FYiJxjF3Ds5fPUv0Tx7DmJDQJbJVVVURHx/f6Z83Vi2HzY9TvegvxMQE8/fXHf+Y6C/+
      jO6uAE3Fb0vFdMs/qfOpofsDoPnqsORvhNqzBGxpmEfdhF83gq5iKtiOoqroA6/CYr2M36fZ
      jHf/a9iOvQ6aBrKMZ9hyrOPvxFefr+n8a91uNwaDAbOkwDt34R12O9ZRN+L3+9G2/BVr1Ue4
      1RlYbQcwZM5Dzt+Kt/98DEfeRHJ6UCbejnnqfVT9+3VkSSL2juWh/jtNAeQf+4JKEhk/NJ13
      177P0huWhN4TK4D205OfILuTSJQJIlOu9spU+dLLyHGxRF11FSVPPkXqL36OMSHhssf/z3/+
      w5w5c0hLS2P37t1MmTIFn8/H2rVrKSkpYfjw4cyfP/+yxwmi41n7faSoFCyz/get8iTuN78B
      SNi/+ipy/CB8O36P7irFdv3vm115oTnBu+lptNpzAMgxGVgX/vTypdQ08NWAJbbNspRNvz+t
      5hzeTStQiw8CYOgzFuuCn6J7q/Fu/CmOr60M5S8KHHgDy9wnMY+5Ifg5jhylZuVKUp96MtR3
      p+0B9MvKZv+nm1n99kr6Z49q+wKBQBBRxN56C76jxyh+4klilt3cKZO/3+9n9erVvPnmmwC8
      //77ofe++OILli1bxtq1a8nPz7/ssYJIwWRxmkLdX+fj/s9doPoxZi9CThmOZLZjmfdj1Io8
      1PLj7ehPR8ndiPWaX2K95pcouRtbnqFrqCVHUEvaHyQryTKSLb7dNYkbkGMzsEy/H9OwJZiG
      LcEy7T7k2IzgZzPZ8W37LbqmIgGqy4rry7rQtZ79+zGfV8Wx0x5/ZZODb379TvyKhs0aWU9A
      AoGgbQxxcaQ+9cQlXasrPtSSQ8iOZOS4xsRqmzdv5u6772bdunUtrjlz5gx/+ctfKCgooE+f
      Ppcs9/lIJhvmafehnNoBARfmqx5DyduE/5M/Y5n5UGNRmar8ZrUGLtAbxuxFeDcEE6oZsxc1
      e1f31eF59350vzt4ttmBbenzzQrTdya+T59HOf4hphH1T/UbV2AccjWW6d/FduML+He9iP/T
      55FThmObdw9V/36Doi8Pgi4h26wkP/pIs/461f5hMJqwRZZFRSAQdDFqWQ6eNQ8hR6Wi1RVj
      zJyH9aofgyTx3nvvER8fz7Fjxzhz5kyz6zIzM3n00Uf5zW9+w/Hjx0Punp2Bcuw9jIMXoDuL
      kExWbNf+mrqXr8Y840FARyvPRZ42oF19WeY/gZL7AQDG7Oa1j/27XsSQNhbLnGC0rW/b/8O/
      60Uscx7utM/SgFq4H+X4h9jveKNZ6mj3v2/HOGAGhvTxoXG9m55GrdhJzNw0VGcVltk/xjRo
      YAuXXTFdCwS9FJ/Px6uvvkptbS3Lly+nsLCQSZMm4fF4yMvLo6SkhPnz56PrOjt37mTOnDmt
      9KLj3fhTrPN/gnHQHHQ1gGflt1BOb0fvOx2bzcYzzzxDXl4e77zzDnl5eaxYsYI5c+Zw8uRJ
      fv3rX5Obm0tSUufl129KQ1EZyRoXPBBw49v5h2BRmTaf/oNIsgHT0K+0+p5acgjz9O/SEBRn
      yJyD/9MXWp7XpK6AafCCS/IqCuRtwTTihmapoyWTDdOIGwjkbcGQPr7+aNBsZf/muwC4/7kU
      c+agVvsUCkAg6KU8+eSTLFu2jL59+1JTU8N7773HpEmTqK2tZceOHfTp04e33noLv99PWlrr
      BV10XUcrO4qhPv2CZDBh6D8DtfgQlkFzeO655wAYPHgwDz3UmDOooc54VxEMWrsTOSET07Dr
      8Ky+F2QDdS8tuGBRmUvBkDoK9eTHGPtOAkA9uQ1DavOVTEuzzU8xDlmMZfr9nSJDSy5utmqK
      UAACQS9F13WysrL4y1/+wjXXXNPi/aVLl3LPPfdgsVh44YWWT7UQjPCVk4ejnt4RWgGoZz7B
      PKV9xVFaQ1EUfvCDH+BwOPD7/dx7772sWLGC7OxsZs6cyYQJE3jooYdIT08nPj6exx9/PPh5
      vLUEjm9AThiEse9k7Lf8NZS51DLvseBTvNl+waIyl4J56n/jeed+XP9aBoBktmNb2niv2jbb
      tH8lYBo8H+/GFZjG3RHqSw94CBxZg3XR083OvZjZqilCAQgEvRSfz0diYiJ33XUXa9asCSVh
      C/mISxI33HADUVEX29CUsC76GZ41DyJH/S20B2Ac2Hph+fawadMmFixYwNKlS4FgRtAlS5aw
      fPlyAF544QWeeOIJhg8fzqOPPorL5cJuNeN+65vIKSMJ7H8Nfep3MA27DlsbT/q64kMrPRJM
      S21qWeWsLSRLFLbbXkErPQaAnDKsWXrsi5ptTrSenuFCGNLHh1JHN6wmAkfWYBxydYt+Lma2
      aopQAAJBL2XWrFncf//9xMTEMG5ccAJ56qmnOH36ND/+8Y8BsNls2O0XT3ZmSB6C45tr6r2A
      UpDj+l2WXBUVFYwZM4ZVq1bx6quv8uyzz/L222+Tm5vLokWLqK2tpW/fvgCkpKRQV1eH1VMD
      moZt8c8J5GxAOf4BpmHXXXSchs1rKSoFvaYA48wfYGzHpHk+kiRjSB2B7q8j8MXraFWnkeMH
      Yhq59ILXXGrwlWX6dzEOmBHaT7AuevqyopSFAhAIeikNSdd0XQ8FGlVUVDSb9K+++up29SUZ
      LRgzLq+cZAPjx4/nlVde4de//jX79wcLot98882hFUB5eTmrV69m+fLlHDx4kKSkJGQSglG1
      HzyBVvwl5qnfaWOU5pvXWl0prtduwzhgJkQldlhmreYc7re/jbHvFOTkIWhlObheuw3L9O/i
      3/XXFmYbpRWzTXsxpI9vsuF7eXRaJPDFEJHA7acnR5J2J5EoE0SmXD1Rpvfff59PP/2UgQMH
      snTpUv70pz8BMGfOHObNm8eLL77IyZMnWb58OePHByfD8/cALoaua9T9cTxRD+0PmWzcb92N
      edr9GPtd/NrWcK/6NqZh1wUzddYTrMy1HkOfsaFNYB1Qjqzp0CZwV35/QgEIBdAmQqb2E4ly
      CZlaQ8f17+VYpt/fbAVgu3MVxg6uAHS/i7qX5hN13ydIcuM8p2sqdS/MIOo7H6GV51yyG2hX
      3qvImv0EAoGgW2jcvJaiXkKvOYtp1g/AGtvZwwCda7bpTIQCEAgEvZKGzesGLyD1EryAIJj+
      wZA2BuXo2mYmoI5WDAsHQgEIBIJei2S0ND6Z15uFLwXrwhW43/42auH+S68YFgZETWCBQCC4
      TOTYDBx3/ufyKoaFAbECEAgEgk5AMkddsKpXpCJWAAKBQNBLEQpAIBAIeilCAQgEAkEvRSgA
      gUAg6KV0yyawruuoqtodQ7WbhgDoSJRLyNQ2kSgTRKZcQqb20RvnhG5RAOeXIYsEIlEmIOJS
      ZoCQqSNEolxCpvbRG+eEbnMDjbQvvEGjRppcmqYJmdpBJMoEkSmXkKl99MY5QewBCAQCQS+l
      W7KBCgQCgSDyECsAgUAg6KV0qwLQdZ1IW3AEZQq3FC3RtMgSKhK/O4i8+wSRda+ayhGJ9yoS
      ZepNc0K3bQJXlRTw7vtbkVBZeusdxDnM3TV0CF31s2H9eiq9MnfeegMFuYfZuucQakDhjq/d
      gdkQHi+Az7Zuoqi6jtqaapYt/zobVr2ObjCSkT2W6eOHh0EijfXvrCYgGVEkM0vmTeP1VWsw
      SDD/K0vJSI4Lg0xBqkryef7V93jikfv55KMPKKqsQ7LEcPOSRWGTacOaVUiWKKITkpk4bFBE
      3Cuvs4q33n2P2Jhops5cwImDO8N+r/KOHeJE/jmqKkoYOGIaWtWpsMsEOutXv4VXlUgdMIz+
      cXJEzAkfb1xLlUvFo0osv+V6Vr3+7y6ZE7ptBbB/7wFuXn4HN1w9i/2Hj3fXsOehM3XOAhzG
      oCY9cDSPO5Z/lVnjszh+qihMMsGEGXO56cYbSYq2UFmcT1TfYSy77XZKTh8Lk0QyX7nxFhZc
      NQfF6yLn8H7mXnszy2+7gf17vwiTTICusvGjTxkzOhuAslovt9xyCza1Dp8WPrFcPo2p06Yz
      ffKEiLlXe3d9xuQZc5k4ZTqpiVERca8GDxvF4sWLsZosjBmZFREyoSsYDTZmz5xKdWVJxMwJ
      lXUqN954I/1jZM4UnOmyOaHbVgDugITDYkCPicHvc3bXsM2QDBYSYhtLq+kSGCSIiYrG6fOF
      RSYAWQ+w8vU3yRwzlShZxR4VLCBhM3f/KqmBMyeOsfOz3dhTBuBxO0mLsmG0gkkN333a/fGH
      ZI+dSn7uYXw+L7IcfH6JNptRdAhXgcHhQ7M4dGA/pwsryE4xR8S9crm9KMXnKKkr4/S5rIi5
      VzWlZzDGpmM3SREhk66DTw+we89eYtIGU11yMiLmhOR4B2vXraco/wQxqQO7bE7othVAWryJ
      3IIyco4eIyWlYzU3O5sGS5oFjdIaFzm5eSQmJYVNng82rGfW4huYMDKb6MRkCk+eIuB1UuMJ
      T0SirvpxJKSz/M6v4y4rJDk1lbzjJyg+nYMhLiUsMgEkpPbHX1tKaWkJZ4rKcDudBFSNgooa
      rOFyZ9AVohPSmTl7FrLuJyVC7lVqUizxKf2ZMHE8tTV1kXGvgI+3f8rcOdMBOSJk0v11SOYE
      Fl97LWfzcyNmTpg8fQ7XX3cN8fEpZGb27bI5odvcQDXFz6ZNm5Gs0Sy8ahbhsKx5asr5aOce
      dF0jNiGNKeOGsHnLVqIT05k1bWIYJAqye+fHlFTWAjBnwTUU5n7B8fxiZs2dR2JsVLfLo6t+
      tny0FX9AIX3gEMYOz2T7lk24AhILFi7EFCa7aAO5J06QnZVFWWE+n+zez7AxExia2T88wuga
      u3Zso6ymjqGjxpE9MD0i7pWuKWzdshmXX2feggW4Kwoj4F6pHDqUw6jRIwAi4/sD9n3+GUXF
      lUycNpMEhxwRc8LRA59zoqCYISPHMWRQX44e2NMlc4KIAxAIBIJeiogDEAgEgl6KUAACgUDQ
      SxEKQCAQCHopQgEIBAJBL0UoAIFAIOilCAUgEIQZp7PzAiMDPi9enx93nRM1zHl2qkoL+HTf
      oVbe0dmw5j1U4X8YdoQCEHQLr734O77z/Se6rP8zxw5w73fu4XsPPsDpCk8n9vsF/1m7hcOf
      b2ff0ZOtnlOa+wV33/PfPPnkkxw5cbaDI6g89/PftvrO/730e370+E948oknOVflbVdv+z/b
      yIef7uOff/0txS6lg7LA9g/WcPJcTej175/+EY/95Cd87wePUuFsHhl7LvcQG7fvu2Bf/9+f
      /kTf5BgefeQRnv7V71F9Tn77uxcACbvRycoN2zosn6Bz6bZUEILejMa+I+fIjjNwpsLN5jdf
      5Pq7HuCTNf8ic9xc/v3PlwhoGg89/CNWvvQ8FZWlLLn9btatXYPP4+KRnzzDe6/+gZMVHhzR
      aXz7zkX85vd/RZeM/PipFcTZTfz95b/zo5/9hkFpcfjrKnnsh0/hU1Tuuv/77H3/X5yu8lBb
      W0e0w0ZM2jBmZDlYu20fblcdDz++gs/ef43Pj+WTOXIyV08cxN9eewdzTCoP3b4Ak9HEv//2
      MuWmeO665172friSwopaFt50J/OnjkFXfIyaOJuH7/samurlFysep9atsPzbD7Jvfcuxr5vW
      nzff20ZdncLPf/kkkiThqy3n6V/+tv4+PEa/lDjq6mq474c/oY/DgMls5KcPPwC2GKL7DGdG
      loN9R/PRYtIwlJ8gv6yayfOuZ0C0FAyylCQkSePJ79+HbnHgk63ofjcLrruDVEsFb63dRkxy
      X5bOH8Pf/v0e+Jzc/s27efn/XiM+bTf3PXA/QwamU1vt4Se/+SPr//47vjxyitNfbCL/XBED
      R8+gJm8nu49VgH435Xl7OHKikNHTr+a2JfPwVOTjsfTF5Cpi2NSrKTz4GatXrWTWgnn4Agqz
      Fy/l0cd/wVevnRPuP85ejVgBCLqc8vwjOCUDsYnxbN32CQMyktm+83O2fnKQyvx9SFEpDM5I
      5P0tn/H57l1843+eYNTg/gwekIHirODA5zs5UKryzNNPUnkmh4/eW0fygCEk2FQ+2/dlcAwn
      9E0NZt7cs3ML4+Zdx08fvZe33l1DwelCfvjEz1BkmZ898zNKj+2juryYxUvv5Bs3LWTjjp1s
      +zyfZ3/1LHmf7eTcuQJcfp0Fc2cScDspKq1h8ZLFLFl2O+P7mvk0p4RZMyexauW60Gf85OMN
      rFixgo1r1lLskpk4Kot16ze0OnZy+iAyUpOpLM7hdIkLgM8/29rkPuwK9fv3F/7I73/3e2p8
      Km6fgad//gylOUH5K4nmnhumke+z8eyzv2LH5jXn3Xkdr2Lh6ScfJmCK54ff+ipHjh7jrdfe
      YsqsWZw5uINTJeWMm7WI229ZzPFzThbPmsryu7/LkIHp9X14efT7D7Dh83zGjspixIjhJKel
      smPjZq5ZuJiZC65n0ayxbPjwM2bOns2m91YBUFVcRJ/+maQMHktl3i4c8XZOni5izcq3+MVv
      /ohksGE0RmYN3t6EUACCLmfb1q2MGTmGvlnD2LPjY2ZetYBNK18iPnMM0XYbik9l2ux5TB07
      mIwB2Qzpl8q29SuJ7TeaYZn9MFqiqDxzii2bN1EbAFu0AwUD8xZfz+B+fQCYMCyZf63cQO6x
      QyiymYIzZzlz5gwORzQgIUlNin7X/1dbW8Xhozkkxieg+JyUlpVQF1AZOGQcD/73Xfzrj89S
      5Q8aqg1GA6Ulpfg1Gd3rIWPAMG67aWHoM86cey0rVqxg7OjBuLwBho2bxsKZU1od+603XmHU
      jEX0S0sM5aWy25rfhwauuf5mbr31VqJMMpLc/Oc6Z8ZMTDYHtWVFlJYWo0gtF/QN40pSUA4A
      m92OyR7DLV/9GnaTjCw19muUZUqKC/H6A/VHrPzg+9/FoNTi87l49dWV3HjD9ViMOkZZpry8
      DJcngGyAxNQMbrv1tuBVDhtudy2y0coPf/w4mjfAzOnjmDRzAZrXCeioavvMWoKuw7BixYoV
      4RZCcGVTWlLOkptvYsSw4eiKj2Gjx+P31DJv4dWMGjWGutLTHM47w8gx40mMjyUzK5P45CS2
      b91Ecr9MRo2dxMTRmThdTo6fKOaBh77LmeMHyS8sY/yECThsFsZMmEzul3s4lHuaRdfdTOXJ
      A3x5qpy7v34HdruNAVlZmGSZwZmZSJIB1V3Jjr2HSemfzS1LFpHVP5nV765j6W13EGtSWbt+
      AyOmz2PyyCGYHTGMHT2Kg3t2YEnJZsqIdD7ZvZf0gdn0T08BCcxRcfRLTyEqIY0ovY7PDx5m
      yPBRpKYktxh76qSJbN74IYOGjGTM6FHYLAamz5nf5D6MIz7GAUgc3LeXk6dOMnDoaKLtVjKz
      MkEyMHhINgmpfUlMSiLZrrPuw4+582t3k5wQQ3RsIolxMWT0G4jNbGZQVhYGo4XBg/pjskdz
      7bUL2bVtK17dxMRxY4iPTyQlMZ64+ETGjhvJzm2b6dMvMyiDLDNq4jQmDs3kcF4hmf1i2X/0
      NOMnTGDy9Gmczj2AT7Oy6KrJbN/+CQlpGWQN7I8tJpFVr/2LBYuvxlleiCNtEFMmjGPXto3M
      XHAtBuc5csp0Zk8ZF+4/z16NyAUk6AFo/PV3z3K2xscNN3+VSWOGXXaP+3ZsxJQynNFD+naC
      fILW+Hzre5RKKXxl7uTz3tF54XfPsuyuh0iJt4VFNkEQoQAEAoGglyL2AAQCgaCXIhSAQCAQ
      9FKEAhAIBIJeilAAAoFA0EsRCkAgEAh6KUIBCARXGLlHDnKmqByAnTt2oIVZHkHkIhSAQHCF
      EWs38tz/+zNnc/by/vb9oPrZunkTB4/mARoH9u5h68fb8PhVThw7StG5fM6VVIZbbEEYEHEA
      AsEVyPO//imfHi3k17/9HTvX/B1vzGAO7Xifh576X3Zv3oyn/DS19kzK9m+gXI7iv+99kJHZ
      /cMttqCbEdlABYIrkDu+eisFr20iIzGKcwVncNlkktPSKT99iq3bdzIoLQpNcwIyTz7zC5Lt
      pnCLLAgDwgQkEFyBmK0WrDYzADNnz6PkXD4+vx+jUcLtcVNT40SSZWTZgs0iJv/eijABCQS9
      AEUJIEkyBoMBr9eDyWzBIIvnv96OUAACgUDQSxGPAAKBQNBLEQpAIIhgdF3nchbpl3u94MpG
      eAEJBN2KzurXX2V/Xik/e/IRNq1fzdH8Yqpqffz4+9/m7ZVr0CXYd+QkP3v4O/zmTy9ikOCr
      d99LVkYSzpJ8Ct1mhg7q06JnzV/H7//0V+x2G8boPiydM4IXX3kbJD/3/s+POLhjPe9s3c8f
      f/0zTh37ks/2H8JbU4wxeQRfv2VxGO6FINxETEUwTdMay+YJBFcw8Ul9KDp1kolTJrFl0xbu
      u+9+HP5SivwJLJ4/g7Q4IzVeC97y40y6ejnXLxjPu+u2M2HccDasfI0Pdn6OIyqew3u28dH2
      TzldWMHwIVkgyUyaMo1xo7LZsX0nVcVF3P7f9zMhM5GPD5xh4vjRVJYWM2niROKTUhk9ejQ5
      Bw8wd/ESYuzmcN8WQRiIGBOQWKYKegcSaX1SQ69GZA3gry//nc3bP8Pn8QCw6p0N3HTjNbhq
      ncTGR2GyxWFT3QBMmzqJ+YuuZ8qEoZwtruSee/6LiuKzaIAkGyk4fpDnfv8yX7vrm9T4ZWKs
      BuISE/H6/KSlpjWTxO8qp9hnpm9SVLd9+o6iqBrFTj/FTj8ldX7UTp4nKpw+il1Kh65x+RSc
      fvWyx1ZVjbPVXk5VeqnydkyGSyHgVzhe0bwOc8QoAIGgNzJ+9kK+81/fIi0tjcGZfakqOokh
      vj8xVgP9Bgxg394vKTi6DzkpGKUryTIenxd0CbfHg46Op84FBE1Ab7z9EY89/kNS4qMZlGzi
      i9xC9u3eQ7+MoMmo6fT57urV3HDTzd39kTuE2xNg7zkXJU4/Z6u8rDtSSY2/87Ib1XkVanwX
      n8x3naltcU219/JkqPMEWH+sigqPSkDROFjgpMAZuKw+z0dTVPacczW+1nSK6pqPETEmIF3X
      kYVfsuAKR/PX8c9X/41ukMg5VYBZ87B+w4cMGj2Vc9m8aAAAIABJREFUUYP7cebkSSbOnI3d
      bCC570CO7fmInLNV3HrzVzDIEvb4JPbs3IpLMTA8M411729k0sy5ZKQmEXDXkpefx769+zhd
      WMm1113L1g/WUqXZuW7+NN5+7VUCqsYXB48zcuwoXB4/Y4Zlh/uWXBSfX8WtSUzMiCI91oLD
      AAVOhfRoEzXuACcrvLgCOrE2IxLg8at4AxoFVV4qPAqxViOyJFHjDmA0ysiShKJo1Po1rEaZ
      GncARZZJshlRVI1zNT5K6wJIsoTNJFNe5yenzEOMxYDTpxFlMWCsf89kkACdohof+dU+kCQc
      ZgMAle4AqqpzqtKLK6ARZ22+3frJqRrGDYglK8FKosPEwEQbsZb6a10BbGaZklo/miRhMUgt
      xvD6VTyKjsUoo2s6xc4AURYDEuCsX02UOv3kVfqINsv4FB2LDGddClEGyK/2Icly5MQBqKqK
      wWAItxgCgSCCqK3zcbRaYWpfBwDnKt0UeWFQlMyuQg9j+tgprfHilQzM6BdFfpmLA2U+RqfZ
      cXsDFLg0rsmOZffJKob2iyPWJDXrM7/MhddgZGiChbwyFz5NIsYsc6jIxYSBsXg9AfYWuhie
      YkeSJIam2DjT5JpjhU5K/TpZ8RZyil0MTI0iM87M2oOlxEVbGRBv4WSpi6w+0fSLDkZc65rG
      ezk1LBkeH3zdZAqWJImNOZXEmmR8sszIVAelVe4WY6SYYU+Jj3mDoqmo9fJBXi2LhieSbDPw
      UU4lkzNjOVPu5nhlgKFJVuwWA2lWmbePVZOdZCPVYWTfuTrhBSQQCCKbSpefI8XgVzXOVPuZ
      mx3PkYIapg2KJcEi0zfWzIYjlQT04F7G0DQHgxIsgJWK45U4lfY94w5OduDxqzj9Kv1jzZS6
      FEYn2zhW7mV4qr2VK3ROVvu5ZngisgQpdgNbTtWRGWfGajEye1BM8KyAgjvQaDLSNQ3ZELR2
      BPwKW087cfsUhmXEMDTBgscbICMxlilJVkDns1OtjJEdi9vjRNPhXI2PcekOztX6STSb8SIT
      ZTIwLNnGObcekt3nDZAeb2VS3+B9KqryCAUgEAgiG7NRJtYWNOWM7BOFSZbwKjpR5gaTsYTd
      KNHaPG8zyQS09imAA2dqqFIg2W7E6VdxmNrIkaTrGAwycr3zoslkQGrHWLJBRg2o6IDJbGTR
      kHiOF9WF9mdsVhMjkqwXH0OSSLUbKPWoVHg15mbY2HKiljILpMa236NLKIAuQtd1Ckpr8QUa
      d/djHVZS4h1hlEog6HlEWYxkxFqaHYuxyBTXBegfbULTNGoCOpbzvMhVVaPErTLe1PwNtdVJ
      WqfQpXLt8AQATpe5cNafpus6mk5oEg4hSeiqhkfRsRklal1+DKZ2mLElmWSbRE6Fj2GJwc8V
      3E1o7dwLj9E31sLpMhcmswlZlrFIOqeqfWSmRocu19qw8AsF0EV8evgsz73+SbMvwGYx8tx9
      i+iXEhtGyQSCns+IPlFsOVFDcbSZyjo/w/pEhSboY0V1VNb6qHQHGJEehVGSSHCY+PRkNVEm
      iTqfSny09bweJeLNEttO1YKm4Q6oZCQEH9b6RRvZmFeN3Sgzs96s03DN+HQHm49XkRZtoqjW
      z4ysuFblPT/EaWL/GLadqOFMhRurQaLWpzJxwPkyXXyMlBgzW0/WMnVwcC8hI8bEnhIfUwcG
      FYRsMGBSFbafqiHKYmREQsuVgdgE7iJWfXyE1zcf4sGbp2C3mjhX5uQf73/B09+6inGD09q8
      XiAQXBxd16nxKthMBizGoDmoYVO3f5QRs1HG0OSx3e1TkGQZm+lC3oY6Tq+K2SiH+mvA61eR
      DRJmQ8trFVXD6VOJsRqbjdce/IqGqoPVKLdQEp0xhq7ruP0aVpPc6nViBdCFGGSZ8dl9iHFY
      iLGXh1scgeCKQpIk4myt2+lt5pYPk3ZLW9OdRLS19XOsrfTXgNEgE2+/NBd2s7F9113qGJIk
      4bBcRPYO9ygQCAQRyoBkscfWEUTklUAgEPRShAIQCASCXopQAAKBQNBLEXsAAsEloKgaqtYY
      3SkhYTLKIqW5oEchFIBA0EGcbh9PvfwRhRV1oWMGWeJ7y6YydUTfsMlVWFgYtrEFPROhAASC
      DlJW7eZkUTWzRvejT2Iw6vLdHTl8kVcSUgC6rhNQ1GbRnUaDjKELM946nc4u67stDAYDqqo2
      a+u6jtFobNE2ekqR3aWha1VzLGp0vwuef6G2pmmYTMFIYFVVO7etKpiqckBrjORXozLQrAmh
      c3RdJxAIYDabm7c1DUN1HpLi6ZJ7LcX2xUUUFkswitjn811yWygAoKjCyea9p5odG52ZwlgR
      sNUr8foVjhdUNIviTk+MbpHG46rxA5k8LAOADbvz8AdUalzBghufHDrLqxsONOtj+IAkfvL1
      2ZiMXRPwGI6YTk99EZvWFEBDOxAINDONmWtLm0+OXj8+OeGyxu/stqR4MNc1V6iqWoaimFuc
      7/V6m7UlLYDZWQVd9H1ogSIC0f3x+XyhY5faFgoAeH71Hg6fKsNUH5ShqBof7D7B3350PRaT
      uEW9jX+s38+G3SeaHUuOs7N8wSgMskx5jbvFNXariU17T7Jp78nQsYykaGaM6gfAicIq9h0v
      wu0LENtFCqCurq7tk7qIhgn/Qu2myskbNaBlB1rnFXnpFGQLnrhhLY+3S04DntihnS5Sx+Vo
      GzG7Ab6AyrjsNB7/2iwAXt98iPc/y+sqBd7jCCgq//rwILVuf+hYlM3EnYvGYDX37D8hXdfZ
      n1vMlycbTRJ7c4ronxrLfUsnAVBQWsPL7+3nz6v3hM6JcVhIS2gspfjkN+Zw6FRZs74nDEkj
      NT54zvu78th3vKgrP0pYsNls4RZBcBn07F9vJyJLUmhpLgtPjmbsPFTAOztySIyxYZAlVE2n
      otbDgLQ4Fk7MDLd4l4UvoPKHlbuo8/hDK0AJiaunZDFiYDIAIwYmM3FoOgGl8cnWZjERF9WY
      vKtfSmy7kvzV1PnQ6rNRmowGomydV4y9T58+ndZXe6moqADAbDbj9/tbbXu9XiRJanNvoK22
      pmlomtYp7Y7sB+i6jqIondJudc/gAm0AxV1F7NmNoHfNCkkoAEGbqGpwwvrVfy8kJd5BldPD
      Xb98NzSRRRIeX4AT56rQm2y/pidFkxgTLIrhD6i8tukg5TVBG66qatR5/CydOZTlC0eFrjGe
      l/QrKba1giDtx2EN5qx58A/vh47ZrSZ+8e35DOoTf1l9N1BUFL4VRsOEf7F2INBYj1ZRlLC3
      2zJbdVX7/D2Di7ZlGxX9b6CruOIUgK7rKKrWzHwjy1KLH7Sge9F1nfziGpyexo0oq8nI4L4J
      neo7/9e1e9my73SzY32TY/jdA4sxmwwcP1vBO9tzSI6zY65f8fVPjWXOuAFdtjkLMGt0/2Bm
      Rl9wAqp2enhzy2Hyi2s6TQEIBB3lilMAX54s5Q8rd6GojUumlDg7T901l2i75SJXCrqS3LOV
      PPbXzc2+Fwl4ZPkMZo7u32njlFa5yEqP5+6vjANg0+en2HYwn6f+/hEGWcLlCT6F/s+yaYzK
      TOm0cdtCliXmjhsYen22rJb/fHSkU8eIiYlp+6RORqvfjDQajaGn6/NNN+cfN7qLm7mBCi4P
      b3QmJnvQ/Hi+u6fDew7dW3PBa684BbD76Dlq3T6+MnUwAMWVdXx25BwllS6hAMJIZa0HRdX4
      3rKppCVE4QsorPjHx5RWt/SouVwcNjOjM1MBSI2Pwu3z4/UHl+DRDgsLJg4iK+PKe+puambo
      LhpMFReLA2jmBqrrmOoqkZXAhboUdJCAXI1HaVxFh9w9dQ29phLpIvsHnawAdPwBBXOTWpq6
      puF0OrFHRWM0yPh9PvyKgsNu77KweYvJwN1fGQ/AnmPn+OzIuS4ZR9AxJCAzPZ6BaXF4fN0z
      AaTEO/jJ1+d0y1jhxuVyhW3sC9m7G/YAmrqB+hz9uk+w3sIF3EK9MYMvelmnKQBd8bJmzTpq
      Awa+/tWbQsc/+vA9/JKZGpfCdVdNZPX7W0iJj8Eck8a8WZM6a3hBJxJQVI7ml4eCmApKL7yE
      FPRuhBtoz6bzVgCSgfmLr2PTBx80Oajj9GnccMNiPlz7DnU+L1ExSWRlpXPiXCXQuCvf4KZ1
      uWiaBnqjx4Fa77qnqEozL4Sm6LqOrmuh94Ny6CiBAAHp0jxdVDXYR0AJEAjIKPVPRaqiXlCO
      SOH1zYdZte1Ys2NRNhNGOeii1vCdqWr7P4uqBtMiKIrSrA+tA320xtEzFZworA69Lqt2kxLv
      iPh7rCoKOnqH7mEDkiRhNLb86fYUN9Coom3IrpJul1XQkk5TAJLBRLTj/PJsOpIsIUlgMxpR
      MODzuCgqKsZgikUH5Ca5UTrDJCRJEkiN/Ur1/8uS3GysZtfU/xu6pl4OWb7wNW3KITfvQw71
      KV1yn91FWY2bpFgbP7hteuhexEdbiY0KPu01yH+x+6PrwQ3ZhlVEjcvX7JrG7+fS74fbG+BX
      r+3E61cwGBp8+GHBxEERf4+ly/j8F/qd9BQ30Kqk6ZDUfbIJLkynKQBNVahzufH5fdS53Kg+
      FwZrLL46J1U1NRRU1JJeWUJq/8GMGdKH9Vt2AJNDf/y6rndKUfiGH0dDX3KTifiC/UtS6Aml
      sQ8J2WC4ZJnk+j4McrCPpgqpMz5nVyJJEmajgeEDk1sNimuqKBs+i8+vcK68MXfK7qPneH3z
      oWbXWcwGHFZz/f0IrvY+2H2CvTlFof5uvWpE+3MwSQoBVeOWucO5fkZj6H2UzRz63iMVWZaR
      kJClyP97uBjCBNSz6TQF4HfXcfDgITIy0sk9kU+/lGg0o8rVVy9kz+7dzFqwgP5pSdTu3cP+
      A0e45upFRPZPVNBedF3nDyt3sfNQQbPj6UnRLF/QGFyVGu8gtT59gtVs5M5FozmQVxx6P/ds
      Je99mtvhJHwWk5EYR8/08Np7vJBad31iLoPMVeMGYre2Xui8LXqECUgJEFW4FdlT0e2ydimS
      TG36PAxRyZ0aCez3+y+5bT2xBoPiBpONqr7XNjvHrlRiKdjaeQrAGh3HrFmzWnnHxsJFi0Kv
      Jkye1llDCiKIs2W1DO2fyM2zh4eOZWXEkxzXepFuSZK4bd5Ibps3MnTsf/60ocvljBTioqz0
      S4nhs8Pn+Oxw0EvNr6iUVbv45jXjLqnPHmMCSpndfYJ1M4Em0bydEgl8GW1vxtWNgmlas3Pq
      5DjqBtx45cUBCMJHQrSNaSPDVxClJxFlM/PsvYtwN3GH/d4f38fljezNa8GVhVAAAkGYsFqM
      WC2NP8GsjAT6tyOh3IWIi4vrDLE6RMOT7fkRv4qioOs6JpMJpaYQq/N0t8smaBuhAASXzM4v
      CzhbVgtAVZ2X9KToMEvUs3nsa7NC+YkuhaYFP7qLhjFlWQ65cZ/f1j1e/HrrpkBBeBEKQNBh
      HDYzowelcLKwipOFVcGDEkwdnnFZ/UpIHDpVyg/+3BhLMntMf26cPaxXFFu/3OJDTatUdTdN
      Y3hatC3xqJYrL/XGlYBQAIIOYzYaePq/rmqW2A0ufwK7Y+EoNuzOC70+W+Zk5cdHuX7mUIyG
      K18B9ESEG2jPRigAAZqm429S7ERtR55/g9z5Bc4nD89gcpNVxD83HODDPScucoWgKZHmBqrr
      OhaL5bIKwlB9Gnvp7m7/XL0FoQAE/HPDF3y0/3TotdsXID0xWsRp9DAi0Q20aZqLSyoIY03D
      24UFUXo7QgEI2HmogPhoGxOGND5BTh/Zt1fY3QWC3oxQAFc4ZdUunnv9E+o8TQu6m/nRHTNJ
      bFLmMLtvAt+8Zmw4RLwgkhQs8fjUyx+FlFFagoPv3DDxsvcbrkTi47t/o7Xhid1kMoWe8E0m
      U8gNtKl7aIMJyOw8jcFVfME+L4aOhJI2CVUydmpNYFvVYeSAC81gRUmb2GZNYIe3EGrPds5N
      7GQCaZPQDZZ2RQuLX9EVzv7cYnIKKpg8LB2LyYjHF2Dv8SKOnC5j9tgB4RbvoswfP4gT56pC
      m811Hj+b9paycGImw+sLtgsaCYcXUIO552JuoIqiNFtNGr0qEpce76DUVKEbrJchdUv8igUJ
      I2gGAjXV0IYB1O/xX9Zn6ErU6io0Y3BzvunfRGttoQB6CfcunURSrJ0zJTXsyw2frbgj9E2J
      4elvXRV6fSCvmKf+vpXn39mDzWJC1TQCioqwVAVpGurf3VzUDZTmBWEC1k4oxalfWpr2CxGw
      N9lA10P/XPh8a4Q/gLTz/ggFIOgxDO2fxKJJmVTUNj7JzBjVjzkRvpLpLhISErp9zKZmn9ZM
      QE2Pt1Y2sqF9KWaczm5fLIlbV7bh8pK+XU5bKABBj8FqNvLAzVPCLUbEEo6SkA2Te2smoIYU
      7+ebgASt05a5pivaQgH0UmpcPkqrghNGe/z+BZFPOFJBNHAhE1DDBrDeySYbQecgFEAvw2Yx
      YjYa+Nt7+3j5vf0AaLpOlM0cZskEPRERCdyzEQqgl5Ec52DF3VeFkrgBGGSJmaP7h1EqQWcQ
      aZHADW1REziCsCdRlTpH7AH0ZkYMTGaEcKO84ojESGBREzgCaVIcpl3JXNxud+iPKycnp1lI
      t0AgEAh6Ju1aAZhMJt59911qampIS0sjOzu7q+USCAQdJDExsdvHbHgYvFhBGK38OBZXZEbN
      9nbapQACgQCVlZWMHDmS/Px8saMvEEQgTqez28e8mBtoQxvFTJ1JlAqNRNq9Arjrrrtwu90M
      Hz687QsEAkG309Te3t1cqAC6qqpgjgmHSIJ20C4FUFtby+uvv47NZiM6OpqMjAwcDlHiTSDo
      7Qg30J5NuxSAz+cjNjYWVVUpKCjoapkEAsElEE43UIvFEgpEa9puzQ20IwVhmrY7M/3D+dlA
      zQYd68n1yGr48imFg3YpgPT0dKZOncqXX37JzJkzsdvtrZylk5+Xw+nSOubOmBQ6WnDyGHv2
      H2FA9kgmjBnKgc8/Jb+wjKEjxjFssPA9Fwg6i57iBgodKAjThe2mpiqPCp6+17T8YFc4bSqA
      zz//nI8++oiamhri4uI4evQoTz75ZCiQoAHN76KgzElZ0VmgUQF8uvsAt9y6jFVvvcXgjCjy
      y3zccP31KE1uvkAgEAi6nzYVwKRJk0hPT2fXrl3cdNNNvP7667jd7hYKQDZHMWv6ZFa/fa7J
      UQ2r3YbBYCAjLpqzxaWUlRTyzturSOqbyaypEwjUPyE0ZMe7XFRVBb0xL0ogEOzTH/BfMFeK
      rmlomhp6X1VVdHR8Ph+SfmmKSlGCS1ef34fPCP76p59AINCtOVsa7qnf78fnM3TbuIKuQ5Kk
      Fr8/gKSk7o+uanjCPz8baNN2wzmXYva5WFvTNEwm0wXbrZl6OrutKApms7lZW9d1AoFAu9oN
      2UA7etzv92OxWNB1PdSG4Lx3obbZbEaSpGbtdpmAUlJSyMnJ4Xe/+x1Op5Nly5a1889DCvkD
      V7p8DLBZyR4xhrlTRvL26nXAhNAfsqqqGAyXP0EZDAaQCH1wU33lKLPJHDrWQkpZRpYNofcN
      BgMSEhaLBYv50oKljUYDkiRhMVuwWCyY6784k8l0QTm6AqOx/vObL/z5BVcGNTU13T5mwwOG
      JEkh9/Dz202Tw12JNM3C2tH2hfppz3G3233Z7XbNbgaDgZtuuomamhosFkvQt/c8PDXlfLRz
      D+WV5Wz/dC8ZcQZMCYPITE/knXffxR6XSMagIezbv4o1RbmkDRDBZAJBZxLOCP2msUEXagsi
      j3YpgLNnz/LGG28wZUowF/vIkSNbnGOLTeIrX7m2xfF+qXMZrarIsowkSVx/861omhZ8fZnC
      CwSCRpKTuz+/U1Nvn6YJ4AKBQCgS+HwTkLXySwx1PaMqXbsxmHGmTMNkdbQw9aieWhylnyHp
      3b8S0gxW/P3m4vMHWjUNtUsBxMfHY7fbQ25mHS3u0NS00+AOJhAIOpeqqqpuH7PBk6YjJiCX
      ngj2uO4VtBvQ3F50T6PXU4PpRtIV3Lah4RILtTpY4/iSTUBGo5GxY8dSWloKiGWdQBCJdIYT
      xaXSEROQaorqFpkiBV0yopojs4B8mwqgpKSEtWvXNjsmFIBAIAARCdzTaVMBxMfHc9111zU7
      Jkw4AkHkEWkFYXRdx2KxhHLPB/cAFBxFO5Ddpd0uq6AlbSoAs9kclj8sgUDQMSIxEri16N/q
      pGndJ5jgorSrIIzT6eT555/n8OHDwvwjEAgEVwjt2gSOioriG9/4BuvWrePZZ59lyZIl3HLL
      La3GAwgEgvCQkpLS7WM2mHcu5AZqNptRiw9hdZ7sdtkEbdMuBeDxePjzn/9MdHQ0K1as4OzZ
      s+Tk5IjaAAJBBNFgj+9OGlw8W3MD1XUdWZbRiUWOGt3tsgnapl0KQFVVli5dyvDhwzlx4gRT
      pkxpNReJQCAIH2oYEyxeyPVT0zQw2hCpHyOTNhWAruts3bqVo0ePUlFRwaZNm3j44YdFXhmB
      QCDcQHs47VoB2Gw2EhISQqUho6Oju1quVtF1nV+9toNjZxqXupIE371pCpOHpXfpuLuOnKO0
      ujEpk9loYMHEQZiMkeUSq6gaJwurQk9hxZV1YZZI0F30lIIwUUXbkF0l3S6roCVtKoBTp07R
      t2/fkN0/JyeHfv36hbJMdjcTh6YTG2UNvtBhx5dn2Lr/dJcqgKP55fzq3zs43wEqoKhcPzN8
      Id6t8e+NX7Jq29Fmx2IcFqzmyFJUgs4nEt1AW3MJrUqaDt2fuVrQCm3O4qmpqfj9fqZNm0Zc
      XDB/R7i8fyRJ4urJWVw9OQsATdM5crqsy8f1+hV0HZ751jyy+yXg9gZ44Pfr8fjCF3p/IUqq
      XaTGO7jvxsk0pGzqkxhFlE2Y7ASdjzAB9WzaVAAOhwNJknjnnXd49NFHe7Xrp8VswGYxoek6
      RHAuU6vZyNjBqcgdTNon6NlEWiRwQ/t8E5C9dBfG2jPdIp8nbhha6rg2awKf38ZbjaNgI2hX
      9vZ1u72A3G43zzzzDHa7ne9973sR5QV0uriKf314EICcgu53hRMIIoGeYgKqiZ8A8RO6Tzhv
      Y6H3C9UEbtm24u13fbeIF07aHQh29913h7KBRkouIEmCScPSWffJcd7Zfix0fOqIjDBKJRAI
      BD2DdimAiooK3njjDSRJQlVVJkyYEBFKQJIkvnnNWL6+eEyz48L0IeiNpKWldfuYHo8H6JgJ
      yFG2B9l57oJ9CrqPdrvyZGVlUV1djcvlorq6OizVh1pDkiQMYsIXCCgp6X7XykvJDVZrykJK
      yOwCaQQdpV0KIDY2lrlz56KqKmfPniUpSfhwCQSRRo9J1Cgb6SGSXvG0qQDcbjcrVqzA4XBw
      zTXXMHXq1O6QSyAQ9ACEG2jPpl2BYAsXLmTBggU8//zzocLwHa0LLBAIupZIdQMNFB8iquKL
      ThlPR8KbeR2Kwd7MrVPTNMySgvXEOiQ98uJzIpU2FYDFYmHr1q18/vnnlJeX88tf/pIf/vCH
      EeUG2hUEFJW3th7BaJApqnCGW5wL8uGeE3xyqCD0+lRRNbEOEfTVG4lYN9CogfiiBnbeYCqg
      Bsdo6tapAO7+SzpvnF5Amwpg8ODB/OIXv+gOWboFXdc5XVxNfnFN6JjT7SPG3jhpjslKZe0n
      x3m7SUqFPolRpCZEXjHrV97/AovJEJKtT2IUS2YMEZ5QAoGgTdq1Cezz+aiqqmrTzUzXVKpq
      nCTEx4WOqQEfx4/n0T8zG4ctuGqoLCvFEZeIxdT9rqRev8JPXtqCyxtojOWVYPrIvqFzxmSl
      8uaKZd0u26Uyc3R/7lnSjYE1gogkHCYgt9sNtEwG11AT+Hw3UE1VcRTv7FAyOE9sdqvRvJfa
      1nUdVVWJrjqIXHWi3XL4E4bjTxyJoiiYTCZ0XUdRFGIq9iLXFqBLMp6sG9AkY4tzTCYTEAyG
      a9qOqT2CXHE8+DkHLEKzxDU7x+/3h6wtWl0p0YUf19+TIWipY1ucYz6zBZO3/cGw7VIAmqbx
      j3/8g4cffhij0YgkSS32ALRAHW++9S4+3cJddzZOnmvfXc3g4WNYuWo137jzNlzVpbz88kvc
      cvf3yUx1tFvQzkLVdFzeAMuuGsH8CYOAYFKHlPjul0Ug6EzCaQLqCDW2EWAb0YErJKiq6nQ5
      nIYBkNS/Y3JUV7c4WmfOhqTBwRfVTujA6rtO6gtJ9YGrLg3cLT+ny1WfhVg3UpM0r1GWJvck
      dE7UGOiAoaJdCkBRFFRV5bnnnsNqtfLQQw+FNFQDstHB7cvv4J3V7zY5qiOb7YwcOYLSU3l4
      NJ0PP/yI+fNnh56+G+yFDZqyswkEgn36A358Ph9+fzAc3WExkBTduI+hKgHUdg7v9wXQ0VFU
      JfTUcz6KoqLrOj6/D58R/PVh8IFA4ILXXAoNTzOd2acgspEkqWfvwUnhDyIFQOqkvGaX009H
      rpUkoI1718F72+5UENdeey2VlZWkpKS0ngpaki6aHk1CIveLXdRpRs4WnKXCH8PAlHGhP2RV
      VbskuthkCspqNpmxWCwEtKCURqPxkovaKLqEhITRcOE+jEYDkiRhMVuwWCyY6xWmyWTq1GI6
      DUtrUaBHEA4T0MUigXVdD/7mCg8QVXWw22UTtE27FMDZs2f58ssvMRgMlJeXM2DAgFBq6Ab8
      HhcnThdQXlHOydMF2A0BjNFpaN46cnJyKKiuY8bCRQwcPILcw3uw9hH5ejqKruts3X+aM6W1
      oWP+wJWdrVDQfiLWBGTsQ1Vy9ysnQdu0SwFER0dTWlqKx+MhEAhwyy23tDhHlmWsVgsLFy7A
      bDYTHR2DbDJx3dKbyDmex4033YjFasVitTJy7FQks13EEnSQc+VO/rBqF7IkIcsNKxmZcdnd
      nwNGIBD0fNpUAKqqYrPZ+Na3vsXp06cZOHBgC/s/gNFiY9CgQa30YGLU6NHNjtgc4Skp2dNR
      VQ1dh4eXz2DmqH7hFkcgCEUCS5IUSkXRsq2Jo0qCAAAL90lEQVQh9ZQ0Fb2MNhXAgQMH2LJl
      CwUFBWRlZfHqq6/ym9/8pmdvQvUgNE0LlaLUNPEjElyYSIsEbtgDUM/uxVqb2+2yCdqmTQUw
      YcIE+vTpw+bNm7njjjt45ZVXqK2tFQnhuoHCcie//Nd2XN6gB5GiaQAYZGE6E7QkEiOBA4EA
      xA3HEzc8HGIJ2qBdewANAWDPPfccSUlJJCQkdKlQgiAJMTamDM/A3aT2cHyUlYlDxIaaQCC4
      fNodCOZwOOjfv3/odW+uDdxdWM1Gvr54bLjFEPQQwhkJHKk1gQUXp91uoKWlpVx77bVIkiQm
      /05C1TTkVqKqBYJLIWLdQM+j1jocrMIkFAm0ayZPSkoiNzeXHTt2sH37drR6W7Tg0lFVjZ+/
      uo2dXxa0fbJAIBB0Ae1aAVitVh588EF8Ph8mk0msADoBRdPIO1tFv5QKZo3pSD4SgaB1wvG7
      bIhAv7gbaPO2pGugNwlglGT0+hQGrbqQaiK/f1fRLgXg8Xh48803kWWZ5ORkbr/9dpF6QCCI
      MMJRp7uqPiHZxdxAPR5PYzZQTcNesguDq9FcpVricGdcha7roXMa2lJlHrZKkUaiq2iXAigr
      KyM7OxuPx0NVVRU+n08oAIEgwghHUfgGLuoGWk9DsseahAlwviNh/XnNCrwoCjj64XWIoMeu
      ol0KYODAgRw9epS8vDxGjRpFdLSI5BUIIo1wmICsVmuHr5G0AGgih1Uk0KYC8Hg8HD58mMzM
      TM6ePRuK/BMI/v/27u25ieuOA/j37MW6+cLFYBITcykEaqCB1KQzDSTt1AkJkIYM7TSTTt86
      w0v/gc70vW/0Mc+d6fQtxVBKyCRAJzSmEJdS6kkpJA4UsAk2sizrsrvas6cP8q4kI0sre7Wr
      y+/z4h+L0Tk2Hv28Z3/n/EhjCWIJKB6PAyjTBziXq9gQhmlx3+dKnlY1AYyPjyOdTiMej2No
      aAijo6NIJpPo6enxY36EEJeCXAIqXupZKraXdxK93/NvYqSiqgmgr68PIyMjOHHiBDjnOHXq
      FK3/E0IAgPawNLmqCWBgYACDg4M4efIkhBA4duwYJQBCGlAQO4FTqRSApXsCL64C4jy/9r84
      tiwLyGXRdfcsAAGtZzv4hu/W1O9XlYDwxFlIXPP9+9AsxOqtSKwqNOJy9RB4eHgYw8PDdZ0Y
      IWRlgtwJPD8/XzV29Tob3ij8YW6u9oms+2H1z2l32azTyY12dBFCSJtydQdACGl89eipXc1y
      dgI3QiyEgCRJjRGbWmC7nSkB+MR+WPb+yBjCIQVCCKQ0gx6iEc8EcUx7IpEAAKiq6lT8LI51
      XXcOkbTPESsXl9sJXBwLIWBZVkPFnHMoilISA/mKJ7exOjUGVQ+mvJ4SwApoORNz6cIDp65I
      yOnVu9jmZ1bhre8/j8ezaefaxt5uvD60te7zJO1heno6sLHdlIG6YT8YbqZ4qV3QbmNj7T4E
      hRLAMshMQqhDxqlP/4ORy7ec6z95dRDvvban7L/pUGT88uiLfk2REF8EsexEvEMJYBnCIQW/
      /vkB/Pd+4bbt/NUvcXPiG7yH8gmAkHoLogzUrvKpVAaqafm7ZEVRwE0TnZN/BcsEd7dCCigB
      LNOOgV7sGCj0RR67NQnDpPNNSHCCLAO19wNUip1rPfsBOkigIfiSAPJP4BnoeSchrYWWgJqb
      ZwlAWBzXRi9jKmni2OHCprGbY6O4fXcS3b39eGXo2zj30SdgENi4bRf2vzDo1fCEtL0gl4Bq
      6gn8zVUo89QTuBF4dwfAdazp34rJx9dLLt+5N4Xjx4/jz3/6ACb7Dt448jZkS8Ppjy5h/wuD
      TimYXV7lNbv+1xKWU1JWj/Hydb0o+XoA4YxLiJfKHf3cLD2B0527gc7dQU+DwMMEwNQotm8Z
      wPg/ixOABbVDBWMMa2MRsHAUiQdf4eLlazh09Mf5z1h4c7TP8/Aa59bCRw7TNJ0TCS3LKmk+
      sVJCCECIktcXAuAm93QcQuyaekJWqm7PAHKGDiar0DNZcMvCVCKFvek4Lvz9Bt5992dQlfza
      ob0pgnNel/VEZWEcVVHzt6YLz2llWXYORPKCJElgknBeU5ZlMMagqqqn4xCyFFVVAxuz4iav
      nAY59/TDYBI8zxJAdm4Glz77HDlu4PKVf2Dz+giUnufw0r5dOHN6BJt27oKWTiOsSDj/4Tn0
      bdyCl/bRbSAhXgmiR8fcwoFt5XYC2w1hzCdfQ01N+D43Up1nCSDS04vDh998+i96d2PT84U3
      +p8eH/BqSEJIkZmZmcDGrtgEpvM5GJ3U17cR0T4AQsiy2Uu4pDnR/x4hLSKIMtBkMgmgchno
      4l7BlmUhFAq5jjnnCIfDThHHSmPOOQzDQCQScR3ruo5oNFoSW5YFTdNcx0IIZDIZxGIx13E6
      nXZexzAM53miq1jXsHrqImAs/fyFEgAhLSLIMtB0Ol1TnMlkaortBiZexvYRFW5j+6iLlca1
      Hhg3V9QYp9axHq09iEqolowQQtoU3QEQ0iKC6NVtPwOo1IDFymWhGEnf50aqowRASIuIxWK+
      j2k/A1hcBmqaJoQQUFUVPH4PSuqu73Mj1VECIKRFxOPxwMYu3u3+VBzbCCO2MYhpkSooARBC
      li2I3cfEO5QACGkRQZSB2hUqlRrCZLPZktNAY4+vQU7e82V+mdW7INbvcc4aUxTFibviNyDN
      funNQEoYc/3DUMKdEAtngqmqWjaOGtPoePCp65fORfpgDPwAhpGrrQzURUwJgJAWEWQZqJtS
      Tlu2aw/Q5WPnvDJNaQBAi+4Eoju9G8csHWvJMk10A/1Ha3vtVL6EdqX9hxfHbZMAZlNZTCfS
      yGi1NakmhCyNDjpsbi2fAKIhFYwBv/3D30rK0yKhlv/SSZsJYgkokUgAqLwElJv8F2Lxm77P
      jVTX8u+Cg5vX4Te/eAXx+cIOwHCHgpf30OFUpLUEuQRUcedtdBPS0U1BTItU0fIJgDGGoZ3P
      Bj0NQghpOC2fAAhpF+Fw2Pcx7SZOFRvCeBTn264KJ7YsC7IsexYjMwPJLNy9tANKAIS0iEgk
      4vuYdlN4RVGcDWB2bO8EtitOyr2JN0zMGDpm7kBQAiCENKPZ2dnAxl5qJzDn3ImLe343XAzA
      XN1+HQopARBClo3KQJsbJQBCWkSQZaCVmsBomlayE1gIAUVRPIvL7fKtFnPOoaqqq7jazt5a
      4lwuv5vXTQx4t+OXdgIT0uIatgy0DK+aq/jZmMWreKn+yUHE1BCGEELaFN0BENIiotGo72My
      xgDAWd6xY8uyIIRoyFgIAc45FEVpmLjckhGQ/029njElAEJaRBBHM9t9fiuVgeq6DsZYxa5h
      ACCEaOvYXibyM/Y0AWRTSfzv0RPs2LbFuZZKPMHo1THs2rsf/X1rcOeLm7j/eA4HDryMDoVW
      oAjxSnHzcL9VKwO13+xJY/EsAVhGCh9+fBGawUsSwF/OncehI2/hzJmzeOfwq7hxewoHX9yM
      jy99hiOvVe5YTwhxL4glIEmSnI+Ld/A2wlLPUrt/g1jqAfLJsVxc76Weui8BSWoM7xx7GyOn
      ThddtRDt6kJPTzc2r+3GxP2HGNyzFxsG1sManwCAktuS4t8cmo1dZmZXGZhmvkxNN3TotNBG
      PMQYK1t/H8QSUGrh/PvFS0DFZZqGYVRdAmrGGKAloALGwJ6+CMvKf8O0HMf6DhXZnAEIAWvh
      h8X+QeacO+eKNCNJkiBJ+eNvAUBRZDDGEOoIOdcIqacgl4CKd/yWi2kJqDF5lgCyc09w+ep1
      fH13Aleu3cAz3QzKmi2IyRyfXLiAJ4aFH31rO37/xw/w4FYM/dv2ejV0w0hlDVy/na/Ffjgz
      H/BsCKk/+uWmuTHhUWoWwoJp5rM9YxIkiQFgYEwgOZdEZ3c3ZElCTteg5Tg6Y1Hn9gdo/juA
      90c+x/lrX5Vce7a3C7/71SGEO2gNiNTfw4cPfR/TPn+o3E5gIfJ3xJqmASgsDcUeXYGcuu/7
      XJuVqXZD3/ImjJzprJjouo5QKAR5+t8Ix8fdv1h0HeLrDzqJ27MEsFLNngByJsfEZOlhXH2r
      O7Gqy/8jekl7GhsbC3oKpMn8H9odmd9dFprHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DrillDown.Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Enroll Female' width='104'>
      iVBORw0KGgoAAAANSUhEUgAAAGgAAAAsCAYAAACJ1f3bAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJuUlEQVR4nO2aa2xb5RnHf+ccn/gWJ46TJnHSNpemaUJ6pTRLaTvIYNWgCAZi6sQ0bUNC
      7KaJDYHQpG3dJCbYkIYmbdI0BFLZGEhjZaiwrmvZpSNtQ5peaJLmQu6JHcdJ7Djx3cf74PY0
      rh0naYfjD/5983s77zn/933e53leC9FoNEqWjEVc7QlkSU1WoAwnK1CGo7mx4MvHX12NeWRZ
      hOwOynCyAmU4WYEynKxAGU5WoAwnK1CGkxUow8kKlOFkBcpwsgJlOFmBMpysQBlOVqAMJyGb
      nW7KjWb2WKupyitCr5EJhMOMe91ccI7w8dQ4SooLX40osslcQk3+Gor1JnSSBiUaxeGbo3PG
      RrdrgrCi3PIcK02F7LVuoMJkQZYkvKEgF5yjnLL14QuHluxv1hrIEaVlPcsfCTEb9Ku/hRuv
      vNN13WCStXx/+z3cVlC6aJuQEuGlCye46ByLKy83mjlYczt3FFcgCkLK/q93t3J8pOum5mjR
      GXl2x71UmgqT1keiCq92nebkaPeiY8iixEt3PkKJwbSsZ7Y5hnnpwgn196rsoLwcHS/s/iIW
      rQEAJRqlx+3ANu/GojVSay5Gr5GRRQmL1hjXVxYlnt3x+bgXjkQV7N5Z3EE/Rk0Oa3PNSIKI
      LEo8Xr+bYr2JP/S0rmiOVkM+P296EL1GBiAQCdM5Y8cbClBvsWLRGpAEkSdu24NW0vD+UEfS
      cXSSBq20/M/sCfnjfqddII0o8tzt+1VxzkwM8LuO/yaYilpzMY/V7iIQCSeMcW3TtE4McnTo
      Mn3uyThTKAoC+9fV89VNjUiCyP0VDSsSSCOKPLWtWRXn/aEO3uj9KM5c7iur4ZsNe5EEka/U
      7qJj2saQZzphLKOsxSjnAPBq12k+tH2CLC1u7haaN1gFge4q20h1XhEAp8b7+M3l/yRt1+Ny
      cKj1vYTykBLhta7T2L0ebF530r5KNMqx4U5cAR9PbWtOaQaT0VhcSYXJAsDfhjs53H02oc2p
      8T4iisL3tt6NJIh8acPtcabpGhUmC7IoEVIidEzbmA8HIXHNLUpavThZlNi/rh4Ah8/DK10t
      NzXOeefoouIs5NzkMGPzrhWPv62oHABXwMef+9oXbddi71fPx3pLqWoVFpIrawHwhkMJ5ms5
      pFWgdbkFrM01A3BsuDOp+fp/opM05OXoV9RHFAQKrn7ojunx2IpPwQdjMQfBqMmhobAsob7W
      XAyANxxYlseXMJ8V97gFmstrkQQRXzhEm2P4U3/evevqMF1dwctFFiVK9HkArNEv7Xl1Tttw
      Xz03theWx9WJgkCJITbWkGeakBJZ0VwgzQJpxNjjHD4P04H5uDpZlJCXGSsshSgIHKzZycGa
      nQCMzM0su28kqjAT9ALg9M8t2d4fCeMNB5LWSYJIfo4OgPH5pU1yMtLmJIiCQKEu5jJ3ztiR
      RYmHqrayu6SaMmO+epAr0SiDnimODl6mxd6/ovGthnyaSiv5wvoGdee4Aj6eP/f3ZY8TVhQm
      vLPUmUvYuWY9pYY87N7ZRduHlAgDs1NYDfkJdYU6oxombLaUYd2ajyQIRKJRgkoYd9BPx/Q4
      HdO2RQPqtAWqsijxwu6HKDea1bJAJEz75AjtzhEmvR6MspY91mqaSqpUwc47R3mx/XjSMZ9s
      2EtzeW3SOqd/jsPdrbQ5hlJmI5IhCgKHdh1Qzw9fOMTb/ec5Yx9EiSoU6XOpNRdzZ2m16pEC
      jM27eO70X1VTppU0fL2uiSJdLuHodQFEBIr0RqyG/DgP0+Z188Mz78adVasikMPn4fedLXRM
      J0/lWA35HGo8QH6ODiUa5Wcfvc8V10RCO71GprG4Er1GxqzVsz7XwkZzcdy54wkFeL7tGIOe
      qRXN1yRrOdR4IG5BLUWqsCEZGlHkrrKNPLbxDoxX53zjGGk9g66tlo5pGx9PjS26sm1eNy9f
      /AAlGkUUBJrXJt8lvnCIf4/3cmy4kzd7z/GL8//giX/+kac//AvnJmNOiEnW8tPGAyueqycU
      4JmWI7zVd051AhYSiIT5yDHEj1uP0j/rjHu/5RJWFE6OdvN0yxFcAR8ATaVVlF51LCCNZ1BI
      idDvdmI15KtnUSp63Q5G5maoMFnQCCtbR2PzLn55/gT3rN2kpmJuBiUa5Uj/RY70X8SoyVFX
      +XwooLrfWkmjxjorNaXXcAW8/Km3jW9t3ocoCOgkWa1bleuGqryiJd3fsKIw5Z9P2WYpTo52
      86HtEyAWp9wK8+EgDp8Hh88TFxtVmCwU6XKBmPNzs3S7JghEwkiCSI15jVqeVoF63ZNAzOzc
      ZrGmbCsKAgb51j4qQLtzFIil/D8N9lg3IAoCgUiYKzOJ5+Ry0UoaNQyZ8XvV8rQK1GLvV1ff
      Q1VbU9psc46eitxYPsx/CxmHcmPM/V0qI3AzFOtNfNZaA8CVmYmE9FNejk796Etx99UgPqRE
      4mKmtAo0G/Rzxj4AQHVeEY9u2LFo24Mbd6rZ5DMTA2r5N+p3890td6l1qViXW8CBis1A7NxY
      iFHWUmkqpNJUqJ4tC5GWOPe0koZndtyrzuPdwUtx9bIo8ZNd9/Py3kepM5ekHGtbUTn719UB
      MBPw4gpe30Fpz2a//cl5mkqrMGpyeKR6OwVaA4e7z6q+v14j83jdbvaVxVZmj8tBx7RN7a+T
      NOy1buDO0mpaHYOcHO2h3z0Zt0PycnTct76BB6u2qB/6xjTL43VN7LFuAOCVrhZOjFyJq//2
      5n00WKy81ddOi70/Lm9YX1DKd7Z8Vj17Wuz9cXOEmImWRYkiXS6HGg/QP+vknYFLdExdz++Z
      tXoeqNjCA5Wb1X5v9LTFxUFpF2g64OXF9uP86I77kEWJ5vJamstrsXtnUaJRyozXI3JPKMCv
      L/0rzjuaD8VeThQEmkqqaCqpAmJury8cRJY0CQ5BshvP4ALBIotE8WatgScb9vJkw15cAS9z
      oSCFOmPc7u2csfPbJLFPIBLm6OBlvlb3GSRBpDqviB9s+5xaByR4l+8OfhxnLWCVblR7XA6e
      bXmHp7Y1q/cuC31/iL34ry6cxHODaTrcfZbWiUEert7O5kKrukO0SW4u7d5ZXu9uVWOixZgL
      JebSzjqG1JtTiIm10NGIRBXeG+rgzd62Rd3r4yNdnLL18XD1du5Zu0ldODfO0+mf47WuM0nn
      uWr/SbhGqSGPrYXlFOlj5sLh83DJOYbD51myrygIlOjzKDWYsOiMuIM+zFoDU745BjxTavB3
      KxTrTWwqKKFEb0InyfgjIQZmp7g4NbriP6SUGExUmApVoebDQQZnp1K+66oLlCU12f/FZThZ
      gTKcrEAZzv8A3hTJrnmz6BMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='44' name='GPI' width='124'>
      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
      vMyoCF5m/B+/6/3K3zUe5AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GPI.Dropdown.Indiv' width='192'>
      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
      Nm0CCNEI/x/DV0AFU2PiLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Main.Scatter' width='192'>
      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
      mAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maps_basicdistribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      RRQF2jra8blEfvNx101hqa4/AH915AI9vWMUlpWKc7PohSf63LN8frtg1gIWAqZ1bfv6d9e0
      6rVgavi6P6Vi1g+shtWbQmgC/SezjI2M8PHR5d1w3w2ujkyQntUR5gY0Qp4w04mB+f2y5CSv
      m1yND9EQbUDPx3E6JPw+H4p6fcVXOqUgCAVvE11dCz1YLBVz916xf187rrIU2jrWgbyW5Xe/
      uYeRsSkGr46STi8ur2la/I+/fPOWtvszKZ2aKg+9Q+PUlAU5fXEAp8dLQIaZ5PKTaW6vH5/D
      pKKmnunhQTa1tNJ1/hwOb4i2hgr6UitPxK0HqxbA0NAUf3f4yJ3My6qxLItkLEdoTgCiKCGJ
      DpwON6qeJ+irYCxeWI6YVrKEnSE+OTZC4qbAehd7Bvnsi5vRVYGjx1Y2jruXyPKdWbqdVKb5
      p//yKf7fm+dXjC1wq0kw0xLZsbOTnS31XBoo/O7PHnwSK9bP4WPLr7EujZSxvdZPVWMjjv2P
      kYsPUl+2l1+e7GX/3j10d3WTXKn/a5oIZZUrJLg1D8SCmKWYHEsSarjeKaoraWUqPYlP9jOR
      KPQFBASqw3W8d/gU3/v+4uWOF3sG+OM//j+k09k79opdD6rKanCIM4VO7TojenIEgmuz7c9n
      4rzx08No2QQefwAQ6ek5Tz6z8lt0eGSQTNKNe2gKUVMQPT5y6QSxWIof/eww+VvcEmtmaZ+t
      t8OqBeDzuGnf0rzmC64XyXiecl8rip5DwslYbBwLEw0drxyYTxfLxNEN877K++3Sc2WAxxrr
      lnUTuRYEQaB9q4vR0fVweBABoLy0BACXM0ooslrvFIWHWcBbTnl5weSmLLJw0q68NLrAFGI9
      WLUtkI3N/YZQ3wS5tfUTHtgmkI0Nuez96x7dxuZBwBaAzYbGFoDNhsYWgM1DgdPt4Xdf/RJf
      f/UQrlvU6mee2Du/bXeCbR4Kvv76K/z92z8noUlYOHjt1c+jJSY40TvNk4+2k41N8e6JK7x2
      6CDNlVEu9I/yxeces98ANg8HXkshabn5zre+wWN7d1PjE9ix9wn2bGuj6/hvKa+r56tffJ43
      f/IWg+NxXn/lRS739NkCsHk4GM+L7GupZmA8gZrL4w8GuHSpB9WAXC6HZYIpCDQ11lIS8ZNX
      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
    </thumbnail>
    <thumbnail height='384' name='Overview (6)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3gV15nwfzNze1XvEupC9N7B4ALYGGzc7bglduzESexUJ5tsstmUL/tt
      NtnNlpRN8qVtEjuOS9xxwQUbMM10ISShXu/V1e1t2vfHFQKMMBgkg5f7ex4epNHMOWfmzj3v
      e952hOnL1umkSZMmTZqLDvF8DyBNmjRp0pwf0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S
      0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S
      xlUArFm5nMwMFwClxYUsmT8bl9PBQ/ffidlsGvWarz74SUqKCk449u2vfo7cnCzmzJjC+jVX
      jHpdZXkpn//UXSccMxmNFBXmnXSuwSBx9crlfPbe21m+eN7Z3NoIDruNnKzMc2ojzYXDZcsW
      8rWH7uNjN6zFZDKOWbt33bqemsoJZ3Wt0WDg+rWrMEjSac/9v//wFaxWy1n1k+biY1wFwMdu
      WEdudhYAE2squHrVchRFpb2zB0VRATCZjNisFqThl7u6cgIupwOX0zHywk+sqcRiNhMMhent
      HwBAEATsNhsGg4QkSdhtVuqqKzCbTDjsNgCqykv5/je+iNlkQhBSYxKAb375M1y75gp8Q36m
      TqpLPQhRJMPlxGg0jPx+dEwGg4QoCEiShCgKOOw2zKaUALts2ULuv/uWkcnCaEhdbzGbTphA
      jMaxm0zSjA9Xr1rBg/fdwZH2ThbNn8Xff+kBRFHEMPyZwrHP12wy4XY5EIZfrBM+d6Nx5LjB
      YEAQBHr7PATDkZFzXE4HkHqPj15rkKSRd854XJ8mk5FP3nkTFosZg0FCEAScDjum494pk9GI
      1Wph6qTakWtdTgcWi3lkHJKY+roffcfTpBn3N0EQhJF/AJIksG71pTyz4TUWzZvJw5+7F1lW
      iMUT3P+lbwHwzS8/QHZmBrv3N/DVf/zhSFslRQVMqqtmx7v7+cevPciU+hriiSTPbniN3fsb
      qKks50///SMy3C6+8b0f88A9H6OmcgK//+k/8/0f/4y9BxvJy8th8bxZrL/zM4SGv5Amo5Ef
      fOtLVFdOIBaL85V/+Gfqa6uonFDCz3/7CF/+zD1s3LSVaZPrWLpgDrk5WUSiMb78zX/i3jtu
      xOV0MLW+lof/8Yf8w8Of5eChZibWVuJyOvjsV79DJBLlVz/5Pvc+9A2isfh4P/I0Z8l1V1/B
      j3/6G97YvJ0NG9/ir7/9d+bNmsadN1/DZ7/6XaZNruOW9Wv49f/8le9+/SFEQWDz9nf5t5//
      jn/5zlfZc6CRG69ZzYFDTTz2txd5Z+cefvSdr/Kz3/yZZQvn0NXTR05WJt9++LMgCLz02lu8
      8sZmvvbQfdz/xW/xtc/fh6pq/ODffsF//fAf+OYPfkL/gPeEMX723tuZMbWegtwc+r2D3Pf5
      bzJtch1f/8KnkBUFu80KwP133cxllyxCEAS+9YOfUFdTwdwZU/mvX/+R7//9F/n8179PIBg6
      H485zQXEuPsA/uOfvsnTf/wZX33wkwAIgkhOThaSKPLQfXfyz//+K278xEPk52YjDguJ//jl
      /3DLJ7/A9MkTEcVjy16rxYzb5WDBnBkUF+Vz0yc+z9MvbhzR+Hv6Brjtvi/yzIaN1NZU8J0f
      /ieHmlu5+d7Ps/dgIwB5OVn0e7wjkz/AonkzsVktrL/jM2zYuInbb1yH1WLG5UppaW6XE7PJ
      hNNh5613drL2tvtTAk0Q+PlvHuHFVzdxyye/QCgUZnJdNXa7la/947+wv+Ew61ZfyrxZ0+j3
      DKYn/wsYgySRnZlJc2sHAIFgiFgsjnfQR2lJEYX5uVy+bCH7Gg5zx83X8MQzL/Hpr3yby5Yt
      Iicrk+ysDJYvnsdnH/5Hdry7n8svWURebjblZSW0dnSRmeHCbDJxz+038Js/P8GDX/suN65b
      zYBnkML8XIoK8pg8sYZpk+soKsgjM8ONd3DopHG6nA42vLqJNbfeT3ZmBhluF5+77w5+8ovf
      cdMnHiIajZHhdrH+6pU88JVv88gTz3LbDWt5/qU3KCrI41c/+T6P/e2F9OSfBvgQVgAPf/uH
      NLe2s2LJfBbPnzVyXBAEnE4HTUfaT7rGN+QnmZRRNW3UNjPcLto7e0gkk6Afq2YdiUZJJGVi
      sQQCKWEivOfaQZ+f3JwsLBYz8XgCgOysTI60daJpGk0t7Uyqqz7l/fiGAqiqRjKZPKltgKFA
      kO/96GdomsZfn97Ad7/+eY60dfDcS6+fss005x9FVfEHg5QWF9Ld24/dZsVqseAPhNi0eTuX
      Ll3AgjkzePDvvseiuTNYs3I5C+bMoKunb8TU970f/ZSWtk5i8QS3XLeGwy2tbN2xm0QiOdJP
      dmYGN6xdxeWXLOJIeydGo4F9DU2sXbWCto5uBFHg2jWXs3P3flRVHXWsg0N+VFUlKcsIAuRm
      Z40oODrgdNhxOe18/QufQpIk2ju6ScoyW3fs5u7brmP3voZxf55pPhqM+wogGosRjkSJJxIn
      HNc0jT37G/j+N77At77ymQ9kI99/6DBLF8zm4c/dy7VrLj/leZFojJKifFYsmU9WphuA3n4P
      DY0tfPfvHuKK5Yu5/cZ1HGxsZsnCOSyYM4Obrr2S/Q1NKKrKxJpKVl26hLrqilP2EY5EmTqp
      liULZmM0GVEUFW1YcDUcbiEWizNj6iQ2b9t1xveX5vzwwitv8vlP3cWKpQv4+hc/xf5DTQwO
      DfHqm1u45bo1hCNRevoGONDYjGfQx/889jSbtu4gFk+t7JJJGUitRL2+IT5+2/W8/MbmE/o4
      0NhMd98Af3zsabbt2ks0Fmfrjt3cdsNaduzez+59Ddx87Ro2b3/3jMas69DR1cPtN65j5YrF
      WMwmvIM+hvxB3nh7G48++RwtbR1UV05g9WXL+PPjz/Lwg59EFNMBgGlAKphQ9+3xatxiNnHg
      UDPRWAyDJBGOxmhqacVkNPHuvoNs3bEbfzBEa3sXi+fP4s+PP4vBYKDh8BEisRgmk5F39xzA
      bDaxv6EJWVYIhSPs3n+It7buQtU0REEkEAyxZ/8hZEWl4XALRqOBfo+XppZ2EskkC+fO5OCh
      ZvyBIACvv7WNkqICpk2qo72zh7e27mTIH+Cqy5fR0NjCHx97mp6+AWoqy8nNzmLP/kPsPtBA
      NBanp7effs8gFrOZ/YeaONLeSU5WJtOn1LNl+Ev77t6DI88gLyeLAc8gGzdtHa/HnGaM2N/Q
      hCiIXLp0Ab39Hn74n79GlhU8Xh8TSot57uXXaW3vYt/Bw+TnZbNwzgyG/EF272vAZDSy/1DT
      yKoyGI4gCAJ/fXoDmqZhNpk43NLGm5u3UV5WzNyZU+n3DLL3wCE8Xh82i5VnX3qdzu5eTEYj
      f3v+VRRFGRmb2WRi194DGAwSbZ09DPr8WC1m9uxvZOfu/cybNQ2H3c7eg41s3bmHd3buYdni
      uVSUlfDu3oOUlRTy4qubePrFjSOrnHAker4edZoLBOF87gj2ra98hpysTHJzsth7oJEf/Nsv
      zui6yvJSvv3w5/AN+ampKucL3/g/HG5pG9/BngW33bCWW9ZfxRf+/ge0DNuW06RJk+ZC4bwK
      AIvFTHFhPoqs0N7V84Guzc/Nxu1y0jfgJRgKj9MIz40JJUXE4nEGvL7zPZQ0adKkOYnzKgDS
      pEmTJs35I+0JSpMmTZqLlHF1AgMISgwECQQB1ASIo0Se6jqCmkidx/CCRBgtyPJM0FN9isei
      igQlfnK/upbq8+hxXUNQ44AImgLiiWn3J9zH8Jjfd5y6jqCeOI40Fz5zZkxh8bxZTK6rJhgK
      n7F5MS8nm8kTazCZjBQX5uE5S7Of3WZFlo85fxfPn8X82dPJynDT1dt3fNQzADarBUVNnb9o
      3kw6u/vOqJ/62iruuf1GmlraiERjXLZsIXOmT6G6oozG5tazGvualctpugB9cWlOzbivAAQl
      iiiHQdcRlVjqoK6CKp8Qw68LIqAjJgOpv+t66n9t+DxdA+3o79p7jg8fO9qnmkxN4ppyXNsc
      O1dTj/t5+FpdT50vAEfPP6m/Y+MR5DCCljh2rZo8NgZdA11JjSPNR4rF82fz7v4GtuzYzaDP
      j9vpoLgwn9LiVH0ql9NBhtuFzWrB5XRQV12ByWjEYbdRUpRPZoabvJxs7DYr+Xk5VJSVkJXh
      prqiDEEQEEWRmqrykRpZWZkZVJWXkul24XTY+eIDH6eoIG8kc/6SRXPZuXs/ZSWFXHXFcgwG
      AxNKiyjIy8FgkPjMPR+joqwUm9VCIJgSVnabNVU+ZbgMBKRKS9RWV+B2OTGZjNywbhVPPLMB
      n98/fN+z2LJjNzt27wcgLzebygmlI/dcVJBHSVE+eTnZTCgtAlL5OFXlZVgtZgQhVbIFUrkO
      1RUTEMWzVeLSfFiM/wpATQI6umhE0JLokhExEQABRDWOLppBEBDlMLpoGNa0heFjIUBD0GQE
      TUVUYwhaEkFNIOgKoCMqUUBH0FSQUtq2oKSyfEUlgi5ZU/+LJsSEf/h4FF0yI8qRVD/Dvwua
      DIKU6k9XU23rGoKuIAxP6qKaQBdERC2BoOupn+XwsXZFU0qIISDoKrrBOp6PN80Ys2T+bGKx
      OA67jQHvIF//wqdwOe2sWbmCPfsP8Z2/e5AZkyfS3tnDQ5+6C03TWH3ZUg42tlCQn4M/GMJi
      NrFgzgzmzJjCJYvnUl9bxYyp9QwNBVi7egVZGRmsv+pydu09wH/8328RjkS55qrL6ejqZeWK
      xSSTSRqb29B1nQVzZ7Lxra24h+tjaZrO7OmTueqKSwgGw1yyeB66puHzB7h61aW8u/cg3/jS
      p1EUlevXrmLT1p3ous7nP3UXdpuVG9atprW9k9WXLiMcjdHd2088kWDx/FlsfOsdYrEYE0qL
      uOuW9RTk5ZCbk8Xa1ZeSl5PNTddcSU52JqtWLGXXngOsXLGY3Jwsrl+7ijfe3sbCuTM50t7J
      Z+/9GE6HnZrKCRxsbD7fH2ma9+FDqQqlGR0jk6SgJtGNNnTRjJAMnHiiYADRgG6wDZtjdNBB
      0GV00YRmtKcmekAfnqh10YCgKejScRUQBSO60TGskevD2r2MbrCk2tZSgiD1ux1BDr5nxCmT
      lGZyg64iqHF0QUi1OSLQTOiSKWUW0hXQpWEzUuzY/R23lE/z0UBHR1YUZEVBFEW8gz5+98hT
      3Lz+KiwWE8FgmO/8y0+ZNqmW1zZt5cVXN/Hw5+5FeI+2q2kajzz5HAvmzKChsZmc7CwcdhtT
      J9Wl8kQEKC7MZ8e7+3n0yecpLsznYGMzTUfaefyZl0bacTsdfPfvHkLXdb7+vR9TU1k+skJw
      OOwcOnyEp55/lVg8jigK5Ofl0HD4CE88+xLZWRm4XQ58QwHMJhOPPvk8Hq+PDLeLw0faePyZ
      DSP95GRncfct6wkEQyRlGUVVkVWFSXXVyEmZ3z3yJJIk8tTzr3DF8sXYbFbMJhPZmRknVMOd
      MrEGnVQxxZrK8vH+uNKcA0aj4UNyAouGlBlGV9AFQ2pVoKuM2PtPIGX60QUJBAndYH0fLTq1
      stCMDgTlNEktggFBiadWGProJSZOaFk0ICiR1PmnalI7OsGLI8IE0TBsDlI4yWCb5oJHVTW6
      e/vp7O4byew9Hs/gEKqq0tvvYfqUiRQV5OF02M/4s/Z4B3ln5x6eeu6VUcODHXYb+Xk5Iyag
      QDDE3/+ff8M7OMTCOTO4YvkiNmx8i+bhEiqJRJKqitKREtCBYIiq8lLycrIoKSoYqT91NOR6
      xtR6+j3ek/rt9wzys9/8mT89/iw9fQMMeLxsfHMrr7+9bdT7cDsdTCgt4tmXXicWP5bl39vv
      wTcU4NU3N/PKe7Kg01xY1NdWjb8JSBeE1KQoGlOmHclMSsNOohvtI85WXRBSE74gpbR/Q+qF
      FrQkumBMtXHUCSuIqesEEWHYmasbrCMO3ZE+OdqmmBJCogEB/ZhpRhBBEIfPTwmco+0imRDQ
      SQkpAV0yH9e/BJIx5QMYnvwFNQ6CgC5ZEIbNVkjm0Z3eaS5YNE1j2qRaysuK8fp89A146R/w
      kkgk8Hh9BIIh+j2DqSxaHRbMmc4Tz7yE1zdEMBjGM+jDHwji9Q0x4B0kEo3iHRwiHI7gD4Z4
      Z9deli6cg8Vs5mBjC8FwmH7PIJFojH7PIKFwhMULZrO/4TCaphOJxujpHeCdnXuorpzAlh27
      WbZgDr19AxxqOsL+Q4e5dOkCfEMBOnt66ejqIRAKs3zJfF545U36+j0AtLR2sHLFYvYdPMy+
      g4eJJxIjf4NUHa2+4cqj3b0D5GZlMnliNYeajtDTP0D/gJdYPMGAx0ckGqW7bwCT0URN5QR2
      7NlPe2cPkWiUA4easVjMTJ9ST0trO4ND/vPyOaY5PTdde9VFlAega4jJEKCntHXpNJtmqIlh
      p7WAZnIMRyilSZMmzf8O/vCzf/5wfAAXBIKIZnaf+fmSGU0yn/68NGnSpPmIYbNaef2tbRfR
      CiBNmjRp0pxAOhM4TZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S0gIgTZo0aS5S
      xjUMdPLE6pGMxjRp0qRJ8+HS1+/B6xs9GU80GsZXANisFnbvO3Ta8ywWEw986R62Rwexmk3E
      kkkmBHR6G49gkCReenM7uq6DALOm1NLTP0jfwOBJ7QiiQJbbic8fQtd1sjPd3PPlj9OjJsgx
      mNn46Ab27TtETqablcsXkDu1ip0BD9opSkOIgsjkwiJcYYUfff+nqOqJ582dUc9D99+AZJRJ
      yhfmrmTvxWwyYZBseAcjaJpOdpaDz33tpwx4Pvxdy2qrSqkuL0FRVF56c9volUEuUGoqSrj1
      E+tI2gS2PLedNzaOXjLhg1CYl413KHBCOWgAk8nIpIlVNDQeIZFMgg7zZ05i6Q1LaYv0j5xn
      M1nIc2Tw7H9vwO8PomoayaQ8UiX0fCKIAmaTkXg8XSH3wyI7K4Ml82fx1AsbR/27NSNjfAWA
      qqrIyvsXRBNFkdtvvpoDchDRILJ0QjWbu44Q7PQQjsRIJGWScqomS3amm5Xrr2Dn9v10PvMq
      APXVE7jkssU8+uhz5GQ6ufvmq2nx+IjHEry04Q2G+rx0mmWaZYVpaxYx/7L55Njt1BUW8/ZQ
      L4quDdec0zFIIg6LhUg8gSAKJGWFQ55+qrCSSMopIXQcW3bup+Nb/dxx45UsWTiDUKQTTVfH
      52GOEWaTiYEBjW98//9hNZuomlBCd+/AeRnLoaZ2ygrzSMjKSZPehUx2ppubr7+Sg7EeiEP1
      lApeeenc69509PSf4i86pflZuG1mtuw8gNVqQdd1zKKEdtw7GZXjGKMCH7tlDX6bjCgIaJpG
      x9Yj/PmJDSe9vx8mpUV5LJk7jUeefvW8juN/A2aTkaxMF739JyvBx6Moyml1qvOeCWy1WwmU
      ZhCOhMh1uxH7/VQpZhI2K2U3r6RtywEaW9oJhqOsX7OCg0qEvLoyxGcFNF1HVTXKJ1XywAN3
      YDCJON1ughaViJxk4ZK5vPHcG6y9Yx0DBg0BOBjz4hZAivmxdA8xz5kJCQXFZUHRdeItPShG
      CXeGm3aHTm4MXnzk2VFfWl3XGfIHyc12E4p2gqBjlIyomorN4kBVRZJyGFW7cCa3RDKOw2Gj
      pDAfXVcRhPP3ZVQ1jQ1vnLvmPN5YLWZmT69n0Begvq6CGfMnMWCIoUV13HYHLVtbxrV/t8vJ
      YCBKX5+H4oJcvvDlj9OZ8NEWPrGom66DzxClU40TDaSKwAlA6bwJlG0roL2zd1zGJwrCCYJo
      NDp7Bvjz314Zl/4vJnIy3dx1z0089eJrcBoBcCacdwGgoSMDpRlZFEZ0tu3ZidlsImdePbs9
      PRTOKOfuGTX84ce/4423d7CuZj3eXJg/fwZyLIFn0IdFExCLs0lE4zTrMSQEIokEBVkuDhxu
      hT88jappVE4opmTZNDSjSNwT4H/+/AzewSHQdWxWCwgQjqSqf06vr6akrJi2WJS2jlNvWB+J
      xfn5757kG1+8g9ycDDyeKKqusnlrM1u272FSbQWrLpuJZIyhqudfECSSMmZTkm89fANbtnfw
      lydfOv1F48jpJo7zjd1m4d47riN3UiFhLcFgJMDBRC+iIlLizOHw5ma2vLVrXPqurSxj8ZLZ
      VFQWU1JazON/fpZ5y2YSMSr0DPqIyYkTztd1HU/oRHuvDgwkgnzhK/fwtYd/SDx+4jXnSobL
      wcdvvwZPLMwLT73OmiuW8MLGLWe9I1qa98fhsOLMcBBTTq5UezacdwGgxJP4XtvD4qVz6e3q
      ZdHKpTTtbcQrKBgliU6/D6/FzOpbrmTXS5sxW8x0+HqYe8OlKKrG1kdf5pVnX2XBrMlEi7PZ
      29ONruuIgoDJaQPAbrXgcFjZsmMf9y6fwzuDA9gcmdjsVjRPSoqGozEqy4q4ZMk8MjNcHGho
      4sCBRipKC097D4ePdPK5r/2E4sJcOnv60XWIRFOCZPvug7y9bQ933ryG+okZyEp8/B7mGZJI
      xtB1BYMBjryPcLvYmVJXwXW3XknCKdDg60TRVERRINeVQeRIkN8/9ti4THSCIFBckMudt64j
      kSfRONSLmLQyf+18Wvy9JDp7P5C7xGo24xVDVFSU0NAwNqsVi9lEXk4Wly+dg7HShUM18un7
      b4Y8C7dPKiTQMcTGje/Q1tY1Jv2lSdE34OP5v76I4g2NSXvjWg66MD+X3v6Ta48fj6ZptLZ3
      8847u1l52SIamtuom1hJqxwhHI2j6zqKopJTlEeexY7bYGJI0uiJBImqMmrHIO/s3E9dTQVY
      TBToJnLzchiMRaguKKDG5aS8tgKTzcaePQ3MXziTLjlKUJNZu3QRlaVF5OZmsXzpXOpWzac/
      08iQ00DtrHrK8vPZ8MKbqOrp7fqJpIzX5yc5ij3b5w/y7r5GptZNxp1hAk6/H8F4YTRIWC0O
      krJMfm4mL7yyc8THkuYYZUX5fPLTN9Mg9+GLhdCBfFcWhgGN1x57m5dffIto9NR7RZwKAZhY
      PYHBofduQpQKmrj8knlcf+tq5l4xi2bFw0DYj6brDISG8EQDKNoH9zGJgsCCwkn87clXUmWs
      x4CZU2u5775bsTvttCY9RBNxHHkuEqpMfWYxfdYI0xfU42sbpCg/l2QySTyRdgCfK4qq0t3n
      HVEw3w+b1UJZSeEp93g22W3nXwAcRVFV3tm5D7OmkV1RTEcsjCSKLCiagD8eQ9Y1gjaJLj1B
      VE6iaRolTjeucJJLr7mc3/y/x3jz5c3UFebhd5qIayoZMZ1Mo4mBfAfxLCvlZgdZlUV0x8Jo
      mkZvMorfLmEty8Vvk+iOhFC11OTsj8cw57gQPCH6z/Ae3o+kLDNrWj2FBQ50zqOjWE85kezW
      PAySGZfNTiAYxjsUOP21FwGiIDCptoJ7P3kDfVKUQCKCKIpUZRTy/K9fYsNzb+LxDp11+4W5
      WXzuvtt5/e0dI4qFJIlkuBzcecsacueW0qUM4Y0FR97Fc0VWVcLxKDve2DNmJiCLyYR/KEhF
      VTEDaggdnUAsQkKTKc8u5PBgFw7NgiUB625fzfSlUyjNykOWFQZ9Z//80pw5ZyIALqhEsEQi
      ycGmNg6+vZuFtmzm2LPRW/tYV1DBsqIKNF0n1+lgdn4JtTl5mH1xevs9hP1BIrE4iqrS2tFL
      ldnJZHsWO17bhtFupSccwJ+IYcvJwJRQOZqZkFBkZEUhEIsRHcWmVuJ0E/SfrKmdDZqm8/Lr
      W1FkE3D+ciM0XScSi5FMKjz9/GZUVWHapOrzNp4LDZvNwkOfvoNeQ4SeUErwl2fk8+xvXuZg
      Q8s5b/LW6/HxrX/6r1Q45zAlhXn854/+HqnKTV9k7CdHp9VK6842hsboXYaU6fCl17bQcrgd
      m9GM1WTGYjSRa3MT1GIsLJ3M3rcP8s6u/fR39dMV9mKa5OKa+69k7uxpYzaONOfGefcBQMrm
      eTTKJhiO8sKrb7Nh42bqayZw9fWr+VtfK4quUaaa2fno67wx4EWSJLqGwxdffWvHSFuvbd7J
      5h17kRUVh82CHI1y1U1X0S3I9Af66W/u5NI59ezy9lHkctPk85A8zsST7XAQjSdIqArRaGzU
      bQHPlp37GvmvX/6Nz31qHQiRMWv3g6JpKpKkoKoqjz/3JoNp7X8Ek9FAKBQmLqYm6NLMPEKt
      fvbubxyzPo5fvhfkZnH3ndfRHh+kPzr2k3+m3YncEeWpx14e87Y1TePJZzZyz/034M7PZNeb
      e9l9eAcVNWU0NrbRcCjlb/jJj37P+vWXk1eVT1tDGw2N4xs19b+d4+fLc+W8CwC7w8adD97B
      xideoanxCEajgURSRtN1fP4gWjzJxEw3PU2dPPr4hjOyfSWSMjarmcsWz2bTtr1s3fAW7d39
      tHX2YjCIlGzZydRp9fQn25g0uRrdKJJMysRjcXyHWqkszCWkqmx5/iV6+jyn7e+DsGt/Ix5P
      hNy8MW32A2GzuEjKGjddt5jDrV1s2vru+RvMMAV5WdRXl/Pa5vGJqDlTJtdWYslzEuzppCwj
      H7Uzxm9//cS4xa6XFeeTn5fFjqG2MW87z55B+ICXmokVXHf9Sh7/64bTX/QB8fmD/OTHv8di
      MROLJZAVhT0Hm044J55I8udHnkcQ0ttkny2SKDJrWh01dVXklBbw/HMbaW44cs7tnncBIOsa
      B5IBpt96GWtil6OYJA5s3cerL22id8DHv//XHzAYJCLRM4+eEQSBygklHGjpxDsUYPfBJhbP
      n8mcedPZ9OY2uvo8HG4djk544fXxubFTIEkiFrMVQUign8Hm9GON2WSiuzvKwYYDyJrGtncP
      fOhjGA2P148/sP+8jsFgkFiycBb9iSBmg5Fsm4t//eNfxsxx+l5cDhuHmjtobDyCqdTEWK4J
      nVYrQ41eulo6mTi9eszDbSfXVpCZmcFb77xLUlaQJIlvfvU+HvvbK+zbf3jUa8PWF0QAACAA
      SURBVNKT/9kjSSLrr1vN61EPnXKIIXlsfDnnXQBAKn65NxjAazQgRxTyFtYxy+dn1459JJIy
      iVHMMAZJIi83C0EQ6e5NZVCaTUbWrr6ESdMmUjaxioaDTfziJ7/lrruu57BVo1dOsOrBm8kW
      TTz5i8c43NJOWXE+c+dNR07IvPHWdmRZJivDjaIo2O022jp7QdfHzCGnaTrNzZ3MnlOKzgeP
      IjlbzCYbgqAhKzK1NSUIksbXv/crEhdIZIaqaajncSyiIHDbDVeil9loGuyiOq+EPRv30T9w
      7gEA78UgSZhMBq5YNp8+rw+r04bNamEoNjahfVaTify4g6J5lehzp/On3zwFiAiCgNtpJxpL
      jBr5JQoC5WWF9PQPntZZ3NbVS3VV+Yg5QlFUhrxDrFuznOKyfDY8v+mjVNnjgicpK7S3d6Pn
      mMa03QtCABzlaPjkQDjEtHVLGOgZoGuU9HhRFFg0dyoL1l/GoJzglV8+SXt7N1PqKileMJm3
      A17e3reDclcmJYV5GPLcDHm6AWj09FOWkUUklmDG5Bouuf4KDiVDlGdksQKomFZDxGmm1GIn
      iE4wFEJPyGx5/i327Wk453uMJ5I89+rbzJj5MYQPwQUvCgZ0VCxmN/GojsseIxr3U1aSjclo
      HP8BfEQQBIHsLDd5zkzaA/3YMfHam2eepTxlYiUGo5Hd+xpH2ps3o57tuxtGtO9Mt5NP3Lke
      W66DpFEnKakUaAoBg0o0cu5ZnQAFzkwGD3jY2trCddevpCnex7wb55Mnuli4YhbGbAuqohLz
      Relr6eeJp19G01LjW33pQhatWYDXM0Tn/g66unrZte/wqOVcItE4f3vhtZHfbVYLuiAy6EpQ
      uqScZbEEb7x24Wd5f5SIhCIY8ixj2uYFJQCOkudyMcWVTfH9t/Ds4xvYs/fEgnLrr1xB9exJ
      uO0OOociCAiIokA0Fses6CiqiiRJmP1x4vE4inZMFzFIEnLnIAF/gNtvX8c70SFMJiP5MZ3c
      ZbN4y9uD6gugFRSSZ7ByMJT6Ys5ev5zujh58Y+AwPdLRQzAQx515zk2dFocjA5slkyefeQO/
      P8is6XW0d/fx/Cvv4BlMh+MdpaykgMLSfGRUllRN54XHN9LXf2b+H0EQuPsT15GwC3R985f4
      /AGK83Np7egZmfwlUaSitBBrmZvDwR4Yh9SLwoxsSvUsFHOE8rXz2eZvIa6kVlWqVSfpUvGH
      UwqVyW0gtyyXCSWFtHX2oOspk1RPxIffFKFqRR0T9UnMbZ/Fb3/9+EiG/Klwu+z09nvJM+WQ
      V5JFsqyYN8b+Fi9arBYzFfWVdITH1id5QQkAQRCozsllojObbQPdeONR1lxzOXMXzmTz69tY
      sXAmb+06QHFxAbsSfkojIjl+hY7OHq5YOo8p86bTsqcJa10uiq6RlZfFtPpqGDbfWIxGCh0u
      3vrrs0woLSDmMKMGApQ43Tg1M9uUIOqwXb7d52V6SS0T3FmIBhGHyUJNTTnvbNtzzvdpNhmR
      kzqiaEHTxjczWFVVQuF+Fs6dRuOhI3R09PHGlnc53NI+rv1+lDAZDVy7ZgXNqpdAZ4Sp+RW8
      9srWM76+rnoCZslEuDdAQUEOiqLwpQfv5t9/8ScGBv2IosgXP3M77V39SOPk9pFEkbqsEpqG
      uvEVKHiDJ2Z4D8ROFPZJWSGRb+CeL96Cp92LoENxST4Ho92omkb7UD+CIFBWncfC+TN4eeOW
      9+2/o7sf275DsE+gu3cgnfQ1xhTmZROxGtDDY2tYu6DyACbm5jFRsvNqRzO94SCSJBJymzni
      Frjsnmuw2q3cfO8NmE1G3CYzrT4vPYODaJqWWgHk2HDMqCCaSJBIyuwd8uAuyMUYV3DarFRH
      RI48t5XW1k6mT6mjK5ly7hmTKglVwRM4Pk5aYN+eg4S3NFCnmMk0mKmcWInTaT/n+3TYrMSi
      cSRx/E0wkegQsgIZGQZ27jtMNBY/n2kIFyR2m5XyiROQdRWLycSh7U1nFG0GYDQYuPn6VewI
      t9Ji8LLqnsvJz8/lqWde4Y5PXIfbaefm9Stpa++hv9+LUR+/r9zu3hb6Ar5Tljd/L5F4nH2D
      7fQ5IvS5ouwMHCF6nHPRaJAwmYzY7NbTtpWfm8Xs6fXc9dBNPPDVO/j0Q7dy+8fWMmVyDaJ4
      QU0zH0nqaipojYxdHsdRLpgVQJbDgdDmpbssbyQpK55Isru3C0EQ6ElGMOXbOezpZt6EfDLi
      EfqjYdzFuUiSyMtvbufeukrkQueI88kfj+HMsBEa8JFXns0bf3mRg43NiIJAQUkhu+IpAaCa
      JML+GGaTkeiw88tmNjGptoz80kJ2JwP0dXZjKbJz+dpLefJPz5zTvfpDEVwu13AZvPFHJ4rV
      msP165ZxqLEjbft/D06HDV8sRDQZJ9eVwctbzlz7t9ssGDOtxIcrcwaSkVT1zqEAGVku5s2c
      zGVrltDr8dLY0MqB7Y3Uza6mKd5/xhP1maBqGv7Y2df9Hy3MVZIkFEXFbHt/u7PNauYrD94N
      eTZ2djei6RqCXWDeJdO4dt0VNB1qo2uonyOHu9j4yuZRgzrSnBqT0cC0uVPZMg55IheMaHb6
      EiSGQnSN8hLrus7AkJ+uwBBD0QhRScAmDcsupwW3y4Wiqvzyl48Q29ZEscMFpKIalEgCXVUp
      icChplQCiiiJSKLI0c3KoppCfl4O0nFe2XhS5kAyxLtqgP5oakxxWSZvehUTayrO6V4FAURJ
      x2iQsFlPr12dLQ57BkaDCVlW6Pd24HTLVFcXcag5bf45istp54HP3Ea/lorAMUgSsdiZm+UK
      83OIiMcmtCyTk0Qsxsr1lxAKBZmzcBpqJEm7PIhQaSGnvoADmw9SnVl0wS/E4vEELt1KwJPS
      PC1mEzOmTjzpvFg8yd69h+j09Y0INV3XafMPkNBk1GwRrzNOxfJK1l572Yd6D/8bsFrMCKKA
      1Ti2EUBwgQgAq8nEYHMXoiRSYLPjMJtxWU49MTaFhuhPppboA5EQVdUTAFBVjWc3vEleQCHD
      bqdWsNF1oBlneSHtVo0FS+aOtCEcp/H0BYP4zVBqd40ciyYSHBrsJxCKnBDOZjeauPaG1ay/
      +lJqq8rO6n6zM904XSYk0UA0bMNuLUAUx34xJggK2ZlFOB35AMiKTPmEXC5dtmDM+/qoIoki
      ugRZVidmyUggGmbi5KozutYgSSxbNoeeqG+kLV+LlyvXXUKfKYxolDBn2dgebCWUiJKUFQLm
      BLVLJ1KdU0S21T2et3bO6EBf0k9GVup7MWtKLXd98joqK0pZtnAmt9++lmvXXMpdt64jM8OF
      9J7pRBM0mge6OTCQUjjsJgsF+Tk47LYPZfx5OZmsX7OCZUvmfKTNUIFQhJ/+x+/J74mQbbEh
      wJhttXvei8GZjAbqMnN57ZW3eXdfI0tra1hSUUNMgIHo6HHR4USCUDJlqpEkEa03QEd7KsxT
      0zRigRB1WXk88pvHWbFoFoPZVtr9PiZPqmHvpnfRVI3SojwmVZZjNpnwxiKYLGacJgs9wdH3
      zzyKJIoMmcFSnMPUWVM4uG3fBy4XEYnGkJM6um4EXaK0pIh4IoB2FpUe3w9VUYgnwphNJsIh
      IwaDhqLGKS0q5flXtqCdYW6D22nHZDKOaVmMM8UgSZQU5xMKRzAZTWdUmfWDEE8kIa6wasli
      TJKRrpCX8pIidmza877ZvwJwzx3XItW4CA0rI5IoYomJ2GwW/EIMSReQfAo1RSX4lSgJRUZV
      VSSzgUzdRnOobyTo4EIlnkyQ5XSxc/M+Ll+xAJ87ydT59ZRMLCHolJk6q46yqhJCdgVP1H/i
      DmWJOJ5oAH1YhQrEIhiyTFy6ZD5HGjsIhSKIooDLYR8RCooyNp9vUX4Od919LWVzKjFPcFBg
      z+Jw4+hF0T4IZpOR22+5muycTAYGBj+0newSSZn21k7WLF+MQzLSsqOB0Gm2+vxIVANVZIXG
      hhZkRcFht7J81VJeHeqmM5iyd4mC8L4JJYIgkGu20bD7WKhov3eIXbv2IwoCK1Yv48Cw7cxp
      t9Kzt4VwJEosGmPejMk4XS76YhGMgkjT4MBpMyaDiTiheByD0cD8wlIqSovw9HsZCpy5g0bT
      dA4f6cRqttDZ00ckHKWwMAd1jCOCXI5MRNGN1WrjD49soK66DEGQURR47qWtZ5TcZjYZWb96
      GZ7BIQKhD69+kc1qITs7g3vvvJ57P34TtRNKuOb2K7GKRjo7e8b0i9fe1QeqRl1tBT3RQTQz
      1JZO4ODeplMKAbvNwo23XMWRaP/I+6npOlmFmXj295JdmkNvbIi4XUcx6jhNNnzDCk1BRjYZ
      STMDaoikemHbw3Vdx+Q0UZlTSEVdGb2yn1AyRjAZRdd1vOEgvaFBgvHoGWUbJ2SZiJBkZlUt
      pQX5rFl7CQtXz2X6JVNZuHQmRXl5HGnpRDnNVrKnY86MeuoWTEQJy8R8UXZt3Yf3HKq4Zrqd
      VFeWsXLVEkwTs5mzYBqTptZQVVhIbl42bW3d5zTeMyGeSOLt6OPtlzef0b18JATA8SRlGVFW
      qc7OJdNgJksWcUUUygvyCShJlFEmLFXTsOW5mVpRQXtz+wlaqo7O7IUz6dFSq4W4qlKRk0vj
      vsNomsa0WZPZEfaSVBX88dhJL7AgCOS6XcSSJ4e0JRWFIRRKS4px1ZdQYHHS3HTmGobbaedz
      n7yBpYuqsNmsWC1ZKNrYeflFUcLlKESUIBKJ8u7eIxglI3U15SSTIn97YdMZadNHhdVo9evH
      i5wsN//y/Yf52M3XoGQaEJIqucV5iBYDGWVZzJ47he7W3jGrbqnrOk3N7fg8fuoLJpBrcJKf
      nc3B/YdxOuyjloJQFZWSnBxshe6RWHsAg9FAx+4uqqpK8cphZFXBHw2PTP4AuY4M8tyZBKMR
      gvL4lJkYSxKKjKsoA78eQx5llfpB6ySpmkbSqmMptOMTo/iSYQKJCH45gjXfTlVhMQf3Np/T
      mHv7vezeepCXXtjEtrf3nPXkLwgCOVkZfPJTN5E3r5yIQyeYiNEXHCIkJJlWWUvR5BKkmEZl
      eTHlZcX4fIETqr2eLdmZLuprK06YQ70+/xmvxM9EAFwwUUCQqhXyxuZdyLLMxMl1mHPdWGxm
      jAkVu9l8ym3QPKEQxjwLN33xDt7+yys0DlchlCQJg3jMVhZPJqmfWkWGy4E/GOaPv32cNVdf
      RklFMQeTYYYSUZKqiqKqmIxGBGBqVj4x0c72QP8JAkjVNJS4zLbOVjBJLLh8AUea22hsPLMC
      TQV52TgcFgyiC6dzCKMpTDwpjCyXzxVdB1nx47DnEo8rfOzGS9izv41nXtjF29v3nvELquv6
      hxLTbTBIzJk2EUkysuryReTm53Ak2Ed3yEtItNI+4CHT5cKIhGzRqaorp7Wta8yKtCmqyuZ3
      drP5nd0jx26+5gqmrJjGf//oT3S+Zz9dTU8lHKrqic/GbbBhlASCwqlLKbT7+qh0F+KXz19F
      2A9KKDG2gkpWlVFj4OJykqK6IqwWcypk+T2IooDVbCaWSDK5rhJ/MEzfgPekFWEiKZ9zoqMo
      Ctx6/WoKppfTmhgiGT7Wh6ppqJrGdl8LOjoll9WNOMBnXj0XX5sXX/sAO3bup7AglwGPj87u
      vtP2KQgC0yfXUFNVTndPHytuvxrfv/6eQY+PspICDpzh/HKmnPcVgNliYuaMSfT1etCBooIc
      brrrenYLEXqUGP1agm45SlQ+9SQkCAKlGVm4rFZcFiv7dzcwY3INU6bXIwfCFJSX4E/GMRoN
      WAci7Nt5AFlRCIajNDW1EvX5qbK5WFpbT7FmJN9ko8pgY1ZhKSFfEE9DK1nFeQwmTowNDycT
      xBUFRVEJCgoTi0vYtXX3KUZ5IjOm1DFvTjk6UaJhIwIORAlUbaz2bNXRNIV4IkI07kPT45SV
      ZpKXm8njz7x52szODxNBEFi3cikPfPpOqspLseQ6aA720en30hscJKIkyXfloqqQabfjComE
      /UHWXr2Czq5+/GNY5/54wpEoM6ZMZOGK2WS73TitVsLhyIhAvPG6KxgQIieEc+baMxADCsls
      6ZTmHVXTiMoJHCYbgfjZh27+b0QQBGyygQO7DmM1m6ipKiMvN4tgMIyOzprLl3D3AzfhtNpY
      uWYx5QsrWbpsNrOnT2Lm3ElMnFpNf7fnrHZrey+zp9Uz6bLpHIl6T+mrOap+JBSZpKKkLAPx
      CAkr2EszmLtsJll1hUydP4lch5vAYABZUVDVY+2JoojdZsFmtXDt1Zcy65pl1NRWkpefy7ZA
      PxXZueRYLVy65lLkcISFi+fg9fqJnKZI4UfCBCSZjcy7+yqm19cS94fp7Ooj12mnoLIUWU9J
      2dFsi06rhSyrjXAygdEgMbN4AlKHl33b99HVO8DHbruGSE0OE/PzMfQNke90I4oSUpaDpfNm
      snfHPtAhFk/Q0d3PzJmT2amHGRBkEtE4T/3haQa9QwT7PSiKSq5kQspwEEiePEHruk5JZhYm
      f5y9uw+emaNS15k5ZQp2h0Rn1xAGyYBoCI1p2WFV01CGV00mo5HW9hDf+N7/u6BKQNisFm6+
      dhW33b6ekJYkadDY2ttIX8hHWI6jA+XZhRzo68YTCeIw2cjMcWHMt2LMMDOpuJzOzl5kWR61
      Zs2puHrVEuqn19ByuOOUtutAMEzjgRaWLJjJgDtGxdQJLFoyC4fJSuuRLvz+EIumTGFQOxYp
      luPMoOdQD9YSJ7KmgD56tEYoESWSPNnsmAZUM9x09SrmzZtK7owiJkwvY/GiWcyZM5niaaWI
      Cdi94wAVVaW0xjwMKRHCJpm4RUXMNLJgyUzqqyvp6/YQDp/9ymXdusvotyTOOl9DVlUC8Sgx
      OUEwGSOjLIs1V61iwpRqAn0+hnx+XA4bN95wJYuvXMqShbOomjERm8XKrv5umhIhkqqCsyCL
      y2dMp9+gUl9VwREn9Lf3EBl8/7I0Hw0BYDKQOa2CiFmkdt5kJldX0rD3MLm6Abl9gCllZXS/
      x06aYbNRJVgpCisU5OYwJCfoDAxhVHSa9h1mxZI5GGqLaQv4SNhMNG85QF15KbLZyGG/F5fb
      SbFk5oobVtO4/zCxeIKKsiL0wgw84RCK1UCJM4NXXnyDtWsupa27H6skUllcTFDSiI5iPjEY
      DRBTaN53+IwqbA4FQjQcbmXbziM89vRGLl82D4dDRNXGPqpAkgzs3eflB//2RwKhC0fjnDG5
      lk/dfRMVFSV0awHe7W7CZDQyIauImBwnNpyVmmF1MhAOIgCziivZ2XkAT9iPNxzAmeNk0sI6
      Fi2fjQUD7W09pxWibqedm+66GlO5A2MI2jt7cNitTKmvwevzo2kagiBQVV6MLgjYJCOWQif+
      eBi/EqVmUgWTJ9WwZ0cDJk2gpLaU4LCJJMvuYt/bB6ivqaLEkkV1ThFBOUZilNVAevIfHUVV
      MdpNHAn1E4xHicoJAlqMsCGJPxnBYDbS09KHw2hCdUsnaOeaphOSY2gukTkLphLpDeH9AAqP
      1WKmuDCfObMmUzq7gsHE2H1fVE1DMlo54PdQP3cyRQ43sybVkqjNpzkWIL+wgMFwmE3tLQST
      iZH7iiQTHIkH6Y2EaE+GUDSNgYZ2Yr73rx77kfIBqJpGd8CP5JaovX4pCUEkM5RN0uOnKN+N
      QRSxCRJSQsEdURGtAnp5Psb2AazNvVhtVhKyTHami8bmNi4pK2ReSTEDcpzC/ByUSJykxYIO
      +OQ4yy5ZyMvBHhYtn88Lf3uFvPxs2oc1yBKsiPk5aLpOZ3sXm97ezoxJNdizM7msupyX1A58
      0WP2W1EUKDHaefLJZwmcJjTreI6092AyeZg/awo2u4mk/P4hqKfDIJlQVJmjC1NJMmAyWjjQ
      0M+//vwvZ1ze4MOguCCXv/vS/UgOMx1tnfQGh4gpSVRdo2NogDxnDm6rC9AJxFMrAaMo4QkP
      kjjOF9ThP1YttnJ5DTm5WTz26AsnLLGnTKzC7XLiHfLT0tpJNJag7VAn3QNetm7fQ21VGbfe
      tgbRYmbo536mTZ9IpstFxaxyBFEk4Y/RrR4zM3X6BxBdIjd8Zi2b/vI209QpDO8uQXfAQ2FN
      MaHuIZKVGcTjGnWGPLYn2sbMv3MxMBgOoIyyktZ1nZ7IIAvXzUVRVLzR0auoqqqGRwty9+dv
      YsPjr/Pqy5vPaD+Cq65YQvmyegbjIY5Exr4UOKS+nV2hANapxahWO55wAF2HDr8PTyg46luS
      GKdw0wtGABxF1TT6QkEEAcoys2nZ34pvh49AMIxncAiDJPLQg3cTy7ClsjYLMnn3ry/Q1TuA
      yWgYsW2XlZdQVZZLlWLiV5t3kn9TPh3h1AQbSiRosyeJJBMU5mVyzepLsE8oIOBLOfqsZhOP
      /uIvKIpKNBpNOZhEESwmWpvbmea2s8esMTTsE9A0nYMBL5ffcw0b/vtJ+noHRn1534sgCDx4
      7y2sWTWHcCTAuUZZOuwuZFlHEDXCIZUXNu7inZ0NNB1pH7P46rHA5bBz0/pVBENhbJJOXnEB
      WtSMw2zFFw3TGxqkVMjDH0vgi4aOOd8FAe19JtFAPIJjUiZ333sdjz+yAX8gpSF5B4e44+5r
      6TOEaN/RzpOPvsSvf/MEmW4nH7/rGtx1uQhWK7mCk/vvv4Um3YMgCDQEu6nMKcRjihBLnGj6
      0zSN3qiPK25bTkA/9rdYMklJVSF2zUBT2IPNYqbUXYNLsRFIfHScvueb0PvYt3Vdpz04cNo2
      dF3HFwsx6bJ67C47zz756gmKwWhk52fTF/ETSY5vkUZIvStdx1kT+gLnpgCeDReECahkzsnp
      5RaziWLFyL4d+wmGwhQVF7DkikUoqo6nq4eMolw29bTRm4gwa+lsamsrESJJpk+ro7KijIVX
      LGRf1IdsM3Lt4gXsVINEhh3JsqrSEw5it1hINPdxzapLaExG8MVSX1DJYsRzqAPfoJ/Wzh6M
      RiM33n4Nu7Qg8yuqkCxmnJKRjugxrVBRVYKqzJwF01k2byZHGttOq3Hn52Ty6Y+vxWo1YzJa
      iMTOzTYvJ0X+8tRWXntzH//5qyfYsbsB7+DQSL33CwVV0xj0BcjNzqCksoTeiI8O/wBtQ/0j
      0SaBeITSjFz6QsfsnJqukVR1CpxuQqeYTJOqguaSWLlyCaG+IH39XhKyzKxpE/FKUWqryjm0
      q5npk2q46eNXE3KrDEQDeMMBemM++tUg8f/P3nvH13Wed57f026vuBcXlQBJgJ1ikUT1Xmx1
      W5ZGli1HjhPbk0nWm83szG52dje7ydRNMpNJMpPEduSJJduyLatTMtW7SIqdYAELQHTg4vZ+
      T98/LgUSBEgA7JL5/Xz4By/ue865957zPu/7lN9jaBMB3Ey5MK375lMyaom8dmyykmWJ9IEU
      2dE0/tYwoijSXNfA4fTwJZfPBSDk9jGUSxKaF2J15yLGhk4dF+ju7mVZYyv+xiAV4+xmv4mC
      QMAdZKxw5kkLiQMDZ8UFdNHWR1dVjQNmkYVfuZ51j9+N78ZldDs0Wu5Yw7prryBnG1i2jaYb
      HEjEGXHbtD9wDeKVC5Gu6uDjzBiqpuOSZEwBcupUi15SVRpWLKBnaISBXHri9dFCjqvuvBao
      6ZwosozlkPA5nbzyytv81X/8e3IDccQTyrF1w+BgPs0uu8gXvnY3waD/lJ9xSWc7waAP21bR
      jPIZtcxzOjz8+d8+yy9eeJ23PviEqnq2sonOPoZhksnm6Fg8n75snF0jvQznpi4UREFAOEEx
      J1Mu4FJOLU5mmCaHsyPc+/idOBwKfo8bT9SHtyjz/f/wEzram7nvG19gyMpMVPFCzXgYZ1iN
      3eKP0rO3l44V8ynpVUpqlUQpzerY7OQlLnFuKFYrWK0OHv2DL53yuSyVKzz90/VU9yQIOs6P
      ZMWF5KJwAYmCQL3sxhJsEsc9kKquo+o6x3v5RrJZos2txAQH+zi2DTRMk/HiVIvYm05ihaPT
      nteyLIZllbzTgVo2UBQZXTdQJJnycduxTK7AB+vfQ5BlNm/egUOWcUoSDsmmOk3miW4Y5MJe
      vvtH3+L9V95j85bpewj4PG4sq4qqFXE6pJm+ppMiCAKJZIWufT2nfYzziaLIPHDvrcTtEtWq
      flJJCsMyEEUB87gdzLxwlHihZizaQg2U1AqpyvQrqpKg0tRYTy6bp1qq4qhzEauv46orLmNf
      ZvCsVeGKgoAkSiiyTHzfGLFImKLXwipbYENXvO+snOcSZ0ZFVQmHfPzR7z/O/qF+ksMpPvhw
      65TCKtOyeOfdTTw+/yssaKynN5+YCPJ/3rjgOwDRBnHvKP1v78BtSzR5A3hmUL0bzGfpLs6u
      hV6lqnIgPnrSv5c1japt0R4ME/B4iPr91KVVXnvu9Yn32LbNx5t38tFHWzFNi5uuv4JknWvS
      5C/LEmGfD/mo6FS2WGJ7JcXah24hGpm+9df2rgPkcjput5/inAO0x1bGLqeXX77w4bR9Xk8c
      Ma+5AYdjshy0IMCqFYvxuF1nTWTqVNx87eV0rlvCvuQAhmWd1MWimwZOefK1ioI4oZmUVvNc
      FmxjubeFsNM36dpFUUQdL+PzuAkE/WSG0ySree741q2o7Y6zKsGwMNbMjeEl3Na8Grugsequ
      1cTPgXTvJc4cwzSJNdbhXRKk485FfPH+m6YIxbU01nPVlat59pnXCJREOmNNKPKFXysLCLhl
      hQZTQa6cnaDwBf9Utm2THU9Typfo37SXukAAeWXTKcdkikVmO0/ZMK3mjSgIEz7ZiNdLbLRI
      ZEELe3Z086tfrD+pC2XV0g6W3nQ52/KTW7MpssziYARB9LCjnEY1jNpNM144aWZQKODD6/GS
      z6emBBlnoi7UQKVSxrQsfvnCFt79cNuMY666fAV/8Pvf4OPdu3hr/UfUR8K0t7dgWRZX3bqG
      TCrHk0+8xMDgyIzHOhMWL1qAKdksrm9lOJck5PLhEGXGSpMnTUmU0E8I8qG93AAAIABJREFU
      pg9mk6xsaKInOUixUuGgMkp89wjJsRQdyxcQaa2jKupUU1UOfnKAr3zzbqqKSbsryofxfdO6
      ms6UvuQYml/Hn8qzYF0H3bmhmQdd4rzQHmrAK7vYM17zgydLefKBeqysTU4t0byulS9Ld/L8
      M6+jKDJ33Hw1V9++jqRcxRPwsGf/QZbeuPICfwpwSjKr3RFEw2K8kEE4S3G9C28ATAu1qpLL
      5pm/sgNvNMzQNP76KePO8PPPq4/iFxT2xkdxCxJtC+bhFmV6unumnfw/NRjpXB5Jmuqu8bic
      HN66n7HuXq556A52ZOI0eHy886tfo59kZT4wHKdvcITmZoWAz0N+FkUrsizjUNw4FD+7uoZ4
      +rk32Lnn4IzjfB43jz50D2mhSNPiGI9/7QHC8+tIqTlM06IrdRifx8OXH76dH/z9L6lWz00M
      oaG+juYlLewc6WFBXRPZaq2n84r6NsaPqkmKgsDSSCtC3mB5sJGuzLEAqmlZCMf1bRjJp2i/
      so2P/3onr7+9kXDQj8ftYuWyDtbetZZDpTGECiTLuXOWhGmYJgPZmbNSLnH+UUwRSbNwKQ6w
      oWpotXoTSSHmC9EciLLjyA7cLgff/p2HqTQ52VWoSYx4l4axJYlNgwcveABfNQ269RwlTaPN
      6UQ/S8q8F9wAaJrOwuUdXHv9laQiDkZ1Fc6DRO5IOsNVre3cv/Qy4l2H6J0n40MiX5nqilm5
      dCE3f+l28pk80boQWWrbr/n+MCOlPJplkskVWDAvxtsvv81VQ0k62+rpf3vHKbWBylWVf3zy
      Zf703zxOoTjzBCIIIm6nj7//0Vv0DYzQNzgyrV7KdCiKzO79h4iM+FmydjGVBSrbhrsnVTkW
      ymXCLX5Wr1rC5k92z+q4c6WhPoIvHEAqihMBVxubvYn+iQm6PVDPi0+8yp69h7jl2rWsuOcq
      egvHVu4n6sOaZYPRsXGaG6KUylXGEim+9a0H6S0lse1a9v3xrQ4v8ZuBAIynMmx6dxuSU6E5
      FsXZ5q2l44oQswK89KMNbN3ahaLIxIfGWdK2nGS5lotfVC+euhmoKRHHPD62P/8RZ2s1c8EN
      gNPtpGXJfNJ6hZR2/r5w3TD4qK+HqN/PUkUhVa2yI5/msoduJtIQ4YO3NtakcBWZu+67ja1W
      EW+Th5FqESNnIQDOvEq75OYQRSzbJi4b3P+1+3h1w/usWNbJrp37ZryOPQd66etL0TrPi6pZ
      mObJv4OAL8B7H/bz+jsbZ1VncDy5QglDM1iyopOxSooj6eFpS9z9ipdi8dz8Dk2xCN/45pfZ
      NdZDS7Ce0fyxOM6n97MoCoz3jNO15yCSJLLq8hWY0omhqsn/N5w2LU0xHn/sfqoe2PXeXg7s
      6aHluoWMltNc4jcDWZRY1dSBZVuMFlIIms2PfvAMh3tqDWmWL5rP17/zZXotE4dTYdf2bjYe
      TdDQdIP3Nu5g3pI2JIfIpx4Wl0OhzR/lUGr0oujdUNI1ltx2BbnXPiKVPvM40wUPAtuiwL5K
      mjHj/FpbSay1hQxWbA4d6KGia7UitHKBphtXsnL5IqBWrl9M51kSiNCiySxUZZbhwaM4iLtq
      k/6nFKtVElEnq2+8ghdffYdEYubJ52jNLqYWwuOaPlj8KZYtki+W5jz5Qy3j6fn1b/G3f/sU
      DY7wlMCXJIo0+SPsenc/e/cdmvPxZ8Lv8/DgQ3cyJpYoqBW8DudJNFYE3H43oiBwy/VXUIo5
      6T3BvaKa5qT2nSW9yg03X8mePYfwud103rGIjluWUjXPvYrpJS4eTMtiKJfAxsYxbPL0Xz8/
      MfkD7D/cx3//y6eQB1TWhBbSf/hYrMa2bcbGk/z6xbfxj5g4h1SC4xbV/Wms8YsnA6ika4wr
      BuWzlMRwwXcA5wtZlvB7PWiqjmVaLPAG0UbSfPLuezxw/23sNtTaitNfj+SQaXz8XnwvBdj4
      0Vae/NmLxOrrGBlLoBsm0bogj3/3qxxEJa9VEQQBhyShGQYVVaW1s5lwKEgme2qxJgBd0/nl
      i2/yv//hY5QqM8nFmhzq7Tvt76BYrhCJhDE0g7DiZ9zMIAgCQbcXY1Tn5/+4noGhmSVr54rb
      5eTeO26g5bJ2kuU87eEGLNvGnMavGvUF2PraFpYtXciaO9fRPY1rrKxpKJKMebRQp1Ap4+p0
      01IOURkvknOVGDfPf1XlJS4sNjbjxQyJUpYF7Y1TJKJtG0bHU/zon57nuefeoFRRaYpFyRaK
      E32g9x44wt7jOodJksQ3Hr0PR4f3rBeGXQz8xhgAwzDJF0o0BkOsizbzxF//mH37D1MfCXH4
      UD9r162kr5Dlmb/7OS0NUdZct5bEeJKGaJjHHrkP0Ya/eeLn2LZNIpXlhZ+9zMO/+zAfqxVk
      SeL6xnbyxQLbsgnygsGyZR18vHH7jNdlAwcO91OplE4pBOdQHGiqRP/gmU3QH32yk20797Hm
      siVcedNlKB4H7/xqE9u37zsnchGKIvNnf/wHNC1spmobjOTT2MBoIY0kCBNbbUkUafHWsW39
      NtBMHvyt+9iRG57W1VnSVDwO96RGLFVNI67oJAXxtHZIl/j8YNs2RavK/AWtZHZMdcMahkky
      nePh+2/n1ntu4vDoMG8+/x5dXQcm3tMYi2BbFl97/MvIERdHTqI59FnnojUA17V1sGmwdyL6
      LgkCqxpaKGsaB9PjpxUDMS2LiqbSPzRCb+8AAIlUlmeef411/cMMjcRZvmQhLfNb+cWTL1Ao
      llAUmV17DrBt5/5JBSP9Q3GG9/Vy41Ur6UqOsjM7xnLbwxXOEILbx7uH+mZ9XeOpDD/91Ts8
      9sj1aPrUlFFBEHAoLn7+/EccPjJ4Gp/8GJqmo2k672/czgebdiAIwqx7A8+V1qZ6vvbIfUTa
      Y7xyeAu6ZRJy+xAFEY/iJOj00peNIwjQ6o3wwj+sZ2Qkzr//t/+S7eWxk/7GiVKezmgjbqWm
      GOqSHRiWWftnX5r8P2/IkjRno57MZ7n5S9eyc+f+k6rDvvza+7z5/mbuvPtGxOPiTE2xCL//
      R79FUTQYKKWplE4tufBZ5qI1APFCjhXeCEdKWUq2wULRxyJXiB4hjySIGKcRkPG4nATGyzzx
      5M+mdLnasn0PLY1Rbr3vVvYe6UfVNFavWESpouLzuHnw8S8x3DtEYmSc1nlNvPfuJl5+5R0e
      lmTmB70k6h10C1WsA0O0BPzIc6insm2bjz/ZxVfuuw5Jmfp3URQZTxo8+9I7c/7MM513tv0H
      JFGkpbmBweGxWY2J1oX4o9//bcKtUTaPdk9qJWhjk6kUyVZqxq7OF6D7vf30HhmkqSFCRiuT
      rZ5aOE0WhQlV0MuaOpBskS3D+y+KQN0lzh4tgSitdpABO8voDMWfgiAQ9vgQUiZelwvDsJDE
      k+8IVU1H1XSe+fmvJx3jxuuvoEfPzHgPfh64aA3AkWyKlqLA4Xc/oXPVYrKOKi9SQTVPrwJO
      EkUaqgLP/eRlSuXpUyeT6Rzrf/4KXd2HMU2TBx64g917DrF0ZScb9SzOVfOYv66Dqm7w4KKH
      eeEfn+OJn76A1+Ni1colLF+7HH9bC0/+j2cmlChny3gqy6uvb+WrD99AuTL5RjdNE1HQJ0ki
      nG88HjcP3HUbf/ejp2c0ALIs8cf/8tuE2+vZPnyIVHnyd/Hp8E+P4lNc7Ni+F6g1YRGqxqRC
      vRNp8Aepasc6ceUKBcb2jiG1STOqPV7i4kQUBPxuL3UOL1W71kdZNTTcukzeLDOmnXzyF4Cw
      L4CjLPDhM5+wffteFEXGoShz3jk0RMMsXbeU3cVzWwx5sXDBs4CmI6i4mO/w887zb5JJZlBc
      DkpNvtOe/AEiPh+73viEYvHkVl3VdDZt66JUqmCaFm+8/gEff7yNXCKLQK1fabJYpKhWGXFZ
      3PPoPTgdCqVylY2f7OKJ7z/NU//jGb7zW1/B5XLO6fps2+btD7eQTJQQhVqhmSTWtgOiKLL/
      4DDGHDpenW0KxRKvv/PRrNxFXrcLwS2xcWA/uRNWUQW1TNjjm/SaootkMrWAebmiUimWEYXp
      b82w28s8d4DDHxzCadfWLwO5OLv3H8BZuihv50vMgmZPHXtf6uJn/+U5IlkFWZKIml6yR1Lg
      kk7qDhSAeYEYu1/Yxff/00/Ytm0Ptm2jaTrFGVomTkdrcwzJ65iz9IMkioTdvgnxwvOgqHJW
      uCifmJDiRBvNsOraNdzxjXvI1rson2GnrLAls3//4TmN2bRtD6lMFoco4D1Bn6iqapQbvPzO
      v/4dVq1cPKGvk8rm+c9//9SsC7SOJ57M8Nff/xXFggO14iLga0FAwKE4+GT7gZkPcI452NM3
      6f+CIHDl6mV4Pe5Jr1u2jd/hpjkYoc4TmDwGAY9SM44xbxABAVXTJnR8JElE9LswT1DlFBDw
      OV00B/yMJRO899Zmdr2yG5eoYIk2t91/A4Ln9AX1LnHhCHt9fLJhBx9t3M7A8Bijowliho8X
      /mkDqWSa/Am1MZIoIiAgiSIxb4gPnt3IRxu3T3Hrng7buw7Qu+kgzaE6ZHl295Miy1zZtJC1
      9e0EXG5WNS/gmmgni+tbzvh6zjUXpQHoL+cYjsiUO+oYlvQzLnpzyDKJg4MziqVNh2XZDA6O
      EnS6p/wtXS7RY5Vp62znX3zzYUJHZWbXrlxCrD5yWte650Av/+uf/C3f+z/+hjff3YbHHcLp
      8DM4fPFJDcSiYf7wnz+O1ztZNrdUrqJXNerc/km+fwDDMidcO7WKS5usUOHb//PXuXzVUu65
      8ybcusS9S68k7PbhcTpZGmqkteqkIS0QEp3YXpEVKxfhFBVkUUYzDXoro+Stiydf+xKzw+ty
      kTuUYeOHxzLmnl//Nk99/zm++shdxK6ax1glg9flYmmsjXrBj9CnskCK0CiFeOUHb7Bp0845
      n7epoZ7G2GSV4KZYhIe+dCfNjVGcZm1qVMSZjUCjI4CZrfLe4H7y1TKyAameMZo0N8v9TfgU
      F/JR+ZiQy8Xa5tYZBS/PFxdtQ5iT4Tj6Rc7FKPhcLuLbDjF8mjnuQb+XppULSVenTjCiKOCp
      WLz4/OtkcwXqQgEe/Z2HCLc3sm/r3tMyXqqmo+kGB3v6UVWBw0eSvL9x2znL1jldbNvG43Ky
      aevuSXEB27aJhoIEWuvoTR/zpUa9QbxON2VdpaRVJ74bzTBwBF14VAmtovPR5u0Y+TIxxUey
      e5itb2/lo/e3YqoaSxbNJxjyE2wO07SymZz2+Q/UfV7wuzwEnV5MTEzLQhRFAiWFn/zDC+jH
      uTc1Tee+e2+CNjeWBPVFD3qyijZW5qknXmDL5i6KiTyjR+J07Z1ZB2s6iqXyFBdRe2sTN9yy
      ju4jgxT6k7RHGmiTgqSF6pTkAkWUiLoC1PtDqEcyxJrrKQk6MdXN6IERDh7u44f/9Cv2beum
      Qfaix8s0e0KIDpuo24MgSSTLJbwOJ42+APlZ6J8dz9lqCHPRBoGnwyPJ+AYLzJvfgjMWojsV
      n+jidSoM28LtPnUTkZMhyxJXXruW7vz0ZdeWZeP0uskd7efYOb+VcdHEbPCzeGkn3ftPv6o2
      lcnx02c3nPb4c4EgCNi2zdVrV9DQEOOnz746RW1VEASikSAuWZmY5B2ywuqGBSSqBfpSY9Rb
      PrJylXnBKP3ZcVo8dWzYvIGBwREEQSCVznLbzetYvm4x869diGKJtNU1sH38EJXRo7o+0zwz
      DknBxkY/g3jRJU4fURCodwWxMzoYNs2N9eQqZSws1PEq77z1AV/58h3YMSeZaoGOpiZWLF/E
      jl37JsY/cPdNBFbUk6zmaZUifPLhdrbv7qZQLE0sNHbuPfvV6nsP9HLwP/3wqPtRQHpZ4P4v
      3ET4uvmY1fKkZkExTwi/5CS+f4QP3t7EkiULSHwywI/XvzvJmCXSWV5cX8veE0WRWCTEl750
      O47OCIui9dS5XQSdTnLVypyNwNngM2MAvIqD5c4QR9oVuu0ipaHZa7xousHSG1bjcCq8seH9
      OZ13XlMMR3MdWiY+7d8FUUBpj/DQNx9k1/tbuO2+W9iSz2DaFlfddR0Huw9fcCXBs0W0Logi
      K7TPa+K3HrmPZ15+a9LN/im2bdPbP4xrSW2L7VQU3Emb1z95i6vuu4ZGIUCqnKGhKUSynGdJ
      oJn3nvuQoaFa34Zw0M+f/cn3sB0ibw92YWMTdvgYGo1TsU4u6iYIApfFFjKUjBO/VAl83hEE
      iCoBXvrBBvr6hgEI+L1UKipgYx1NO+6c34rT7eLg4T5eTGYZHTsmrd65oJXFVy+mpzqOz+2m
      NJTnrrtvYve+Q7NOWT4Tjt3PNpYFVU0nbLlw53SaFs1HM3TKls6h9CiKLLNgfoyKqvFnf/bf
      Z8z8syyLsUSaf/zRs9x+2zXc9uCtBH0+bNFmYThAd9Kkapy9PhWz4TPjAjIsk4ylkzPUKX7l
      Twk73VSnWflZlkVCr7Jg8QIOb9k3pQPQqSiWKzR5fQRaGyjqU4NMlmWRrVQg7GHNulV0lTPo
      plkTkgt6ULJV4mOJaY782UEQBJobIvw/f/wvuGxpJ6tvW048leaZZ147aZpdKpNlZft8opE6
      tLEyP/vh84zGE3zh5uvo05LYXomg5CFnlRndMcgbb3yE1+tBVTUWd7TRsWwhe7buZfWypYiS
      RE4r0hCqI1k5tbyGbhoU+nNY/hM1Qy9xrmnwh3njx29zuGdg4jVVq3V8syz7aN0J7D94hD37
      DjE6liCXL2BaFm6XkytWL+OLD93CoJnBxqbRFeaVp9/i1Q3vky9M31PjXDMwNMqWD3eyefNu
      hg8NIpZ0iHmomBoxXxA5ofLPHrybDW98iKrNLght2za9R4bQM0VWrVpKozdM1dYIOF2M5GfX
      L/hz3xP4RGygfAotjojDQzRvTenTezxxrczqy1fg87hn3fnKMExeWP820bx+yjHFapV9mcSk
      BiapYpGV16+Z1XkuZmRZZt2aFbQ0NrJo2UKKRplwXZD/6V99nXmtjdOOSaSy/Le/+xk/+vOf
      8dT3n2X1ikXceut19B3qJ69VKOlV+krjiKJAtVzl97/7VW66aR1Qk4zOFQts27EXyzAwbZ15
      4QYk58wBuWQlh9Ykfm52XZ8VAm4Pg9sHOXiw77TGP3T/7dz0tRsZErIT/vYyGvc9fNtpZdSd
      LVRNp1pVMU2Tw31DNDZGsQSbJtFPXQraFreRs6pzrjewbZv3N+5g34792KJAi7+OFq+fiNc3
      8+CzyGfGAMxEzO2loKunfPDLqsrqL17Dd/633+Xr/+JRVq1aNuNxBQFM02LkyDCuOeYGm5ZF
      JBbG6bw4Iv6ni67r+Lweenr7cbidjGTH2Z/vRQkplE9SVAe1hyedyfHbjz3AjV+7GX9DgJ07
      9tHoDKAaOppp4FQcdLS1Ua1qbN3ahd/n4ZrbL2fMmefuR25jsJRgvJhm4CTy1dMx2/dd4uwQ
      cHsY3jTIi79847QMbyQcpLGzkaF8ctL4vFpibDR1zl0/fp93xvcossS9t1+P0hHBLzp54Yn1
      ZFJZCuUKv/jxS5Tn3NK1ZgQ2bdxBIpfCa8v4ZAdLIvWn8xFOm8+NAWgK15ELnnqCNkyT3ek4
      WwsJhjw2i758HTfddu1JV/axaJjffewrAOiqjlOae8ikZJkoymcm1HJSXnnrI/L5Al7FRcgV
      IBasY3RfglT61L72aF2Q1hXtDBRThOoC7DvQS73gRRAEfC437b56tmzr4vtPPMPoWIKWhije
      kJ+WQD1CyEHA68Pv9GDaFqqh4XVMTce9xIVDkWW0wTIb1r9/2llqt1x3OUWfOcVwuxQHS9d2
      4DnNBI7ZYprmFHn04/F53PzuN7/CkjtWYeZUXn/yDUZGxnnv4x089Q/P8MnW02+e9MnO/bz/
      +kYUxUGDP0xbIMCyWMOs0k/PBp/9meko7/bPrW2bZduMl4pErl/Gowtb2fzmRo70D09abXS0
      tdB9uA+X08GCyzrpUueecjhqVHjgsft57p+ePyuFKheKXL7AgZ5+brrxOtrrmklVs7R1NtHc
      VM/I6KljHDoWIbePdqWB7/0vv020tZ76sSIjHx3hyX0fcfBw38T3rhsmum5wODOCIsqIgkDU
      F6QxEMWwbBoD9bhkmZFcgkzl4hDpEjhrDZrOGrIg4lXc5zRNVpFlvBWZn//s1dOe/AWgdV4T
      aX3yTlIQwFtWeP21d8/5c3MyF5Mkidx167Wsu+VKGmJRug4cZv0zbzAwMMK8lppv/UwVdG3b
      5pfPbsDSTK6571oaA3W0qHn8zhY+GRyY+QBnyOfGAJyuzzdVLiGFJG741n3cmVPR8yX27jrA
      5i272Lh9D80NUb7x+IMMOEwsde7nKFQqOJv8fOO7X+W9X39AT0//Z84/vaCtma89cg/BkJ/e
      vj7KUoXRfAITk9vvvpanfvTSSccm0zmEjMZli+fT5A4xUkzT19WLmkgj6TYHDx1BFEVcbhe6
      rhMKBvDLLlqC9QwdbQQTL2QIuYPsGesBalXBK5vaLrgBEAWRsMdP1FeHYRlohsbgSbLFzjc+
      04WoAufI++hUFJxZ6NvZRyjoJzdH7asJBAGX34Vh5U94WSQ9lmXjJ7WOXQ3RMHfdfgNP/nL9
      eckGWjCvmZuvu4Ibbr+G/Xt7SPYlef2tDxgYqNW1DA6PnrVz6YbJSxve5YqbLicvlWjzR+k1
      z7zb12z43BiA4xGOrskUSUKbRXDGtG2O5DMggBSWWHPXdWzesou25hi/9e1H2KblKJ1Bf9Bk
      oUDWLXL7t7/Emi0HeebZX8886CKhuTHKow9+kQWrFnA4eQQHMs6KzNLgfHalDtKyJMa81kYG
      T1JkZ1oWalEFS6Hv0CCRSIjeYpV9XYcZHBph7WVLuP2uqwk3hujZMcDVt1zBQClJncdHrlqk
      UC2zMNJC19ixTAYbm7KmnlIw7lzhkBTcDieNgSiqYVDWNbpG+2qN7ZvaccoO1KPJCqIgEHYH
      yFYK51WlVBQERveP0ry8+Zydw+t04xRtrrtmDZZtYRgm8fEUhmHQ3FjL/pvVRG3bVIpVJI+E
      Zdcy+BRZptEZIm6NT/zGqUye7kNHaG1uZDyRmnXGzemwsK2ZP/j9b5DM5fmvf/VP7DvQg8ft
      Oqf3WqlS5cc/fIb5bS20tzRgLmo6Z+c6ns+dAfA7nKxqaCVdLOB1udg6OrdtlGlZmGJNgzyV
      zVOxLUrTpH/OBVEQWBCO0hmJ4V8j0Ll9zxnr+p8PnA6FP/re4+S9Gt2JPhqDET58dTu5RJ7O
      zlZCy/wkqxke++59/NW/fxL1hK26JIl0tLei6Rp74yMITpFCPkOu1c8d8+7AoVUxvDrj1TT5
      SonQZX52j+8BBCRRYElDG4WqRqpUmFJsNpxPszjWzoF433lxv6xoXIhumZQ0laqh0x0fmiJx
      na0UWda4EAGb3uQwdd4gLsVFWa/1LThfuG0H6byK6QTmcOvOxZWVLuZxhRxc3racYrHM1Q+s
      Y//mg6x/7i2+992v81d/9xTjydm1RI2PJAi2NJFTawYg5gzys79+nvHx1MSka5gmm7fvmf2H
      mSOiKNAUi3Lnrddx+MgQf/FffsR4IoUgiliWdVrCcnNBEOCOW66hpEj07TvM9WuWcCidOCMB
      zNnwuTMAi0P1hJDp3nIQIeyByNz3wJJL4d4v3MSrb3xAeTyDHBAxzkCGQRRFBEHglYN7CXrc
      fOE7X8H+x+fp6T33Pr4zpZgvYbgExgtpdFunv3+Uq9esIDY/wriewbJtXEEnnQvmse9AL7Zt
      I0sSjz1yPwtWLcQTCnAonSRVzJNXK3QffaDzXh8rIy7GckfrRGzIq5NzvSvVEt3x+LSrZwEB
      UZDwOtwUtXPfT7reH+a9nq6JHgTTMZRNMpRN0uAL4XP5OZQcxbZtFkYaieeTaGepj+upcAgy
      hz/oYcnlHeRn4f8XgAV19UTcTpyyjWGJjJWqDGSSM654q6rG5tFufPM99GbHaFrbwv+55Pdw
      NHlpa2+elQEAGBtP0STNJ0cJv8uNQ5fIZPOzTq0MBnzkC6XTdg0psszD993G0iWdbN25j41b
      dhyTFT9P3eVsG8YTKRbetJatb39Ms+ji4c6V/OzAznO6wPncZAF9StU28Xs9uBrDdG/Zi98x
      N1lmgLypc/U1awgF/SSG40TcM6eJnQrDNDmYiGNYJqlikWG9RKwpdkbHPB8Ypkk6k6Ns1lav
      giDgcjtpjEVIyDkqRu31nF7gq793NzfccDkAV1++glvuuI4xq8RQKUdPJkG2Wp40oeiGgTbD
      6kYUhAkRrRNxyQqqXkUQhZNKR58tfA43Q7nUKWtMjidezHIkPVarfAX6MuO0hM79760IEsZA
      lXlLmyl6Z2dsYv4wjR4olPpJ5gbIFvoIyjmWxaav7ziRZDFHX2YM0zLJq2Va5zdxIDNMrDk6
      8+CjjCdS+CQnoijiiNv83Z8/NdGjdyZkWeKq1UtRZqncKYoi9ZEQglBrV1ofCdO5sJ2tu7r5
      d//5B7z82rsXrKfEa29+hDtRZGgsxf/17/4rpUSGxmDwnJ7zc2cAupNjVG2LctjJ6stXErGn
      abE1AyPZDN1GCVuoRemlGR58AeaUIuoRZdTq+XMJnC6LF8zj2uuuoGpqNMlhkjuSWKqOK+JG
      O64oL1cuktOL6LqBoshcf9NVbIr34HN7KKjTf86CWkVx+E95fkl00BKIsqi+lfl1jSjHfcct
      oXp8Lj8u2cf8yOn7uh2SgixKOE7x+7XVNTKYGadymq5A07KoGsaEDPaZ4HU4WdXUSsQbmNCe
      V0SJOsWPJyNT1xHBiIqzroXIlAuI4uQ0S1WrEHRYOOW5PTumZVJBRxCZU1rU6HgKxRAIuDxs
      2dQ1p6pfwzB544OtaPrJFxPBgJ+br1/HfV+4mcuWLeKxh+9j5dLFuJxO0tkc+w/2cOjIwLSy
      JueTZCbHn//XJ3A6HAyOjvPv/+IfaPOcWwPwuXMBmbbNjrFBrmkBFFXHAAAgAElEQVRbyGap
      j6WBKP3jxTltoyzbZlAt8uj3HkNxOdiROHXEv87hJloVOCgaJ29cIQg0e/3UGSLL61uJz6L4
      5ELTOzDCaxvep6Sp/PzNj8nli7Q01pMZynDN6lXsTx4hXc4iCAIN3giiCd/5nX/G2nWr2JcY
      AmT6R6bvrCQJIhLyKQO5sgjxYp68WsYlO2gJ1uNRnIiiQKpUZOio++hy30JCbt9Ei8nZ4nd6
      qPdHMCwLhySjG1otu8myCHsCWLZFplygLzVKR6SFnSO9czr+8QxkE6xomIeqqwxmjwU3TzVR
      CwjYJ9xRnZEo6UI/jZ4gHeEWhgsVMuUSPslFPmqR1E4tlXEiiyKN5EpT7+9iJUVzoI4j6dnL
      kAc9XnZ90EXdihhp/+zrNVRNRzFEMt0Jtm7pmvW42SBLErIkER9PMWqNc7Cnn117L3xvjZOR
      zRfJ5mv3calcxVPRkcUzc0GfDL1c+fwZAID+XJoGtw8ByOvaKbsJwfSLFcM06SomsfIzm460
      VqEky9gWKNKx1aSNjWlZCAhEnW52P/c+a5Z2MFoXZudR9cOLGVXT+fHPX570mtOhEGoNMlpI
      4tBkFkitjMbH6R0a4P5H76DqFHjj8C6KaoWVTZ1TjikA80Jh2kIuJKFCZ/0CEsU0+WphShOY
      bCWLdLRAp2po9KSmzzTaNdLH8sZWTNvCtuwZYwJuxUnQ5cMWJA6MD09Msg5JZnVzB/lqiUyl
      hENy0lEfxLJtqqeQIZkNtm0zVqgZy6UNCyhpVUQBjqSGp7w36PJS7/PhVSQ0S+RIanzi/JIo
      YWOTq2TJVbI0hhaSKOZICQX8bjc+zaJ4kow1SRQnBdMVSSbg0MkUp+7SNEOl3ufkyOw1F3Gq
      Epu2dHHXsjtp7GxEUWT0U6zMoRZ8vf6q1Wzdso+XN7xz1lM8DdMklcmSynz2xAHXrOikri7M
      l1oa6Ukl2JcYm9FtOhe0UunzaQAA9ibHsGyLHdoYsijS7A8ykJucW9vm9GNaNkP69CtHa5Y9
      eG2gahk0+ANYB0apZgrcftNVDAyPMzKaoFSpsqm7h2qpTMs/+yKGbVFfHyFXKH6meth63C5u
      uv5K3ntrGwMDoyQTabxeL5VKhQe+fDtDlTSpTIHO+lY0bwCHzJQVvsfhYGHIwVCmFgB3SAqN
      gXoa/BEGMyOUjk7etYnOQ646cw8H07Y4mBgl5PLi87hoDsXIVvKMF6bmUouCyPxIC27Fwbah
      w5NW2JppsGVwsr68kBfO2qSULNVy3RPF2io96PLSWT+P0VwS3TQwLZMFkUaCDotUcYxU1UCR
      FFY3tVE1DDRTwDyhO1a6MMhlDTEMS6eiFYl5fZh2hP3jw5O+9+ZAmAavExMZSVAYyKao9/mo
      aifPN1cEHZfsmLXxk6Ra60bdNhECEm3zmmdMdHA5ndSFgrz42nszGovfNHbv72Hp5p1oixpo
      9Qe5sXEe7472T8mIOxMuuAEQRZHWYPicnqPZEyCswiCZSat90yEiiiJyQZqk9T1XREGgNRym
      VZUYQEQOB9i6rYvLrl5NLl/gmedqmv6PfuUuDmtFsqUkd37zPh7QbNY/s2HOrSovFOVKlX96
      +iVEUSRaF+TRL91J5xVLSGdzDBhpStXaBHcoMUjY7SfodLA4GmO0kCdXrU1cJU0jVbFxK24+
      3XsNZcdoCNTTVtdG1agF/8LuIO8fmb2UtmroxItZ4kdt+eqm+ZTUCiVtcjBRESUK1Sq7RqZX
      SDyRc1l0lKuWsLFp8NXR4PUhClXylSTx/DE3jm7qDGdqBXCSIFGwJ9+nuqkTzx/bRZS1Mg7J
      yeqmVgxLwLRNPIpIvjxOopBAQKCzfgFyEKpanIp58sk9W4pzeVMMw1bYE09QniGVVVN1vF43
      kkOiznaw7srLZjQAoWCA197dNCWF+BJQqar85Kcv8vDDd1NY7cDp8nBdUxtHSjmOnKWOYhfc
      AAjYeKTpMxbOVl/lbDWJ6AqypqmZVKVKolTABkJuN+bBUS5vqGOPVaR8Gi0jAZbHGumQvew1
      02QXhPA6nKQ3HeA//Onf4FBqgTSf1037msVszMWxgV2ZcaJ+P81Nsc+MAYDaLuAP//ljyE0e
      rKpBvJLlcHmqnz9TKZCpFKjzBGjyBycMAMCRTI7r2uehG7X8+M5ghO7RXoazCaK+MD6nm6Ju
      oFnmRFFfWziKIooMZNOz2gbrpkFZmzph+VyeM3bnnE3KWpWAU8LUBpEcQQqVk8sBm/bsFima
      qZLIH5nIjsofF2fwOX1U1AKFysyVpqZlkC6MICBwZUsHH/T3gW0TcvvQLXOSq0mWJDJDGWRJ
      os7h47//xx/Pagc9MnbxtTq9mDBNi2d++Sq3DF/Boq/ei2gLNDZ62SicnV3ABTcAtm2TKs0t
      cHU6pMq1Byvs9nNlSyO+qkSyb4yfvvgmLqeD3/3uV+nxaPTm5uD0BBoDQeZ5g7w+0EPF0FnV
      3Mp8y8mffvBTiqUKUHtIbrx6LabfzQIxigBk1QqtwTCR66/k44+3UfkMZAVBLfe7UCoTEbyM
      SUXymVMXyER8QUq6zKJIjGS5iCJJrGlu4eDYfkzLrAXHg1FaQw3IokCiMM5YNk1HvcKNbTFK
      uo0kinhkm3ghx3XtbXzY13fKoNiCuhhORWK66E66lGdF00J0y5hwxVxIot4ADjtBSS0edQG1
      kS7nyFbO3Gc9XYDZ6/ThcjiJKW5sIFuMo59iFwC1WJaqZVlW34zbISBbRSpWiN1jQ0CtiCnm
      CvL0+udpqAvh0mUGhkb5jCmeXLRYts2mrV184f6bictVlgXnoZ6lmpLPXRrojEhQp8lsePZ1
      XAEX3/zGg2RyBdY//wbznLPPzBGAiM/H6sYWCqbGFc3NhN0eukaHOEKVplitKbwoCly+ailb
      du7jZ//f/+Cdf3iOwdc+4eZgM41Fk3LEQyBw6nTIiwnLsvj7H/2CJ//bs3SYUdzyybeiYbcP
      t6gjmyOsrPdyW0c7V7U2kC8nsKxa74aoN0QyH2co3c+R5BGKaomwJ0i5Ok4820+xNECu0Mdo
      pp+Ix89wup/OaAOSKOI+bhssCgJ1Hh9Loy2sa1rIcCY+bXDfxmbPaA8hpxu/y0PUH2B+oJ46
      7/n9DZbHmljR0ESTP4B61LVS1cuM5waoc/vPWW3DWH6UnmQ/A5kREsUMQW/DrMblyknQhygX
      BwCR3nRq4m8ht4/Nr2xjbCxJMOin6jTp7Jh/yuO1Ns+uzuASNcpVlb5Dg4zlM2waOHtZTBe8
      I5jskOm8evG5uoQpOGUFXYbGRc0M2QUIO7jj1mtZftUymmP1xJw+vE4XFjblk+R9K5LEmnnt
      BB0uDiXHkQWVkdw4PqefTKWCKIk8dvttrFqzAtmy+eo3H+LAvh56+wbJ5YsMjyXYuHE7Xbv3
      k+mPc+DQ7PzRFwu2bZPNFciks1y1+jJS+vRCYKtaOiipOYLuAC7FRVVX6Un04XO66ahvw6m4
      6KxvwTB08tUCXqeHBn+MoNtFpjTVNeBW3HhdddT7Y5SOpLly4RIqlo4sSTTjZ8crW/BVQa+T
      GC6c+r6r94fwlRU+fP4jNr/2CVcsWEzOMfX3FoWz31lMFiWWRzzo6hiSXZyyAncqTiqGgWmd
      m6BoxBuhKViPhAm2RVWfnczBpwFzryvKkWwtniaJIoxqvPp8LYNn9YrFhINBHKKDvdP0ww6H
      gui6QalcnnWSxSVqeJ0uOlZ1MlbMMLx/kGLqzDqCwUXgAjrf5MolcuVjJfIORSbk8uCs2sia
      hRzPscTvJ5jPk6uL0pWbPJHIksQV8+ZzaHyMXLXCmqYW+lMDiIJA0O3GV3bR5g3RRxWlKcid
      D92JVVKRpGMrOk3T0TSdTDbPwPDFoR55OmzvOsAdt1+HK+ScVutm93APa1sXciTVz2ghQ1Et
      o8gSsikQcQYwTZPBVB+aobEg1oaNg0QhjyyezB1m43KE6drazT/+/c9Zt2Y5X/3WlzlYTOAt
      CoT8PloXNtOfPfV32uQJs+3V7bzzzmawba65chWxWB2DlfKE7ETA5aElEMEpKewcPf38/xNx
      SgqLYy2o+jimNf0k71Z8wOxaA84Fv9NPyBPCMEqMZfrnPF6RnMiSQqpqTQTnG+QgT//qeUzL
      QhQFNN3ghWffpPvAse9MFAVWLluEbUPA7+PjT3acF0XPzxtul4O8epY0iYJhBEn+zTMAxyMI
      Aisa28l2x4nOb+DtgT1EHB6+/ze/5A9+7zHCbgc91QJlVUUQBOrcHpbU1xN0yCyvj2LaVs3V
      YNu4nU7qLFhREhFDFgO5NK6KSa57kLfe+HDGhtGfRQRBQJLEkz7MgiCQLGWo6Cr20YnVoTjY
      u7GHTH2WlWsWEYu0IBslECVMOcD2wcMEm+YR9tpkSpONb6acpNMdY+O7W9ANg+1d3dwyGEcM
      CuTLZToWtCGFnFjFk8cHPE4XBz86xIYNH+BxO/naV+4htLaVfaXxiUlteawFmQohp0RRK7As
      1syhZPyMMsUA6r1B1jQEyZdHTxmIHs+P0ByIIIkyumUxmh9HM04vRuSUnSyMtlPRVXS9RKEc
      xzgN/7Hb4UWQmsknSgzYtf4PUW+QN3/6AWPjNXeQZdksXbyA1TevZOA/j5DLF5EkieVLFnLT
      jev4ydMvk82dfcP2m4Lb7Zpz68mTIS1eiTUy8JttAGzbJpXLUUhl6PNXqVo6TZE6li1dSEo0
      6S6OE/b56AxFaFDcyE6BLUMHJ+WOO2WFhYEYe9/t4tVPXubb33qY0UqRobd3sH1r1zlXETwf
      yJJEY0OUTDaPIAiUKxWwa23yZLcyRSDtU1XJqqER8UXIHcnidjrRwgaqoRJuCPKDJ57jwXtu
      5so7lhFzaGjVEi6vhCgI7Bsb4op5i4lJDkpqzXB6XWFkSeT1DVvZ2dUN1ALSz/5qAxVVY2Bw
      FEGAhW0t3PvALZRjMkWtOqWS1rRMGlpjE59rYWc7+4rJSSmOsiiSzCfIV3JopoYsyqxsaKEr
      PgJ2rVPViemlsyFdLqCbHioziLTppkoiX8usEgWRtlAL8WKWQnXuk6dTdpEtJShUcpxJ2xrb
      thkv5xgzM5i2hdflYmjbIF1dx/zRoiAgyAJZpczv/qtHiHeP43f62LKji7/7wdOn3TTmEjV8
      Ps9ZkxW31Sr2cP9vtgEQBAG9rFEslTEtB7Zl01NKcMf9N7Mrl8GwLa6PtDA2OIQqVemXJk8o
      giAQE3089ZdPTygf/vrX72IhsGffVP/nZ5FQwMfjj38Z74I6LN3EFGwoGYgIVFUVZ8yHlEhh
      2TW3QNQbxByuEGkIY7kEXnjqNT7+cDvtrY389h98mSOVEVwtDh7++hf45U82oNsWjz96D9n8
      ASzRQ3tdAyW1wlghg22ryKIbwzTpy43Q7K9n8+a9k67vwOFjrgzbhp7+YX74w1/x7d/+Clde
      vYrxSoZMucRIrrZKVXWd5cvaEUWRfLHML375Cvd9+z4OZkemFNhoR33zhmWQLgyzrqUV3dCw
      sSkZYQ6cRCLEJTtoCoRJlvIYtokkSBimiWpomMyt1Z9lW4xlh6gPts7ZAAgIeBwudL3ImUz+
      giAiILAw3ERJU5FFidyhNBteem/iPaIg8MiDXyDSFiFRGkKVNDqvXcieN7vp2nfw0uR/FmiY
      F6PXmJvcyUz8RhsA27bRVI1crkBEilLWVVTbQAz68cSTrI21otoqB0hj6ib2CTtnp0Ohb+cR
      EsfJ3u7e99nJ6Z8NDkWhsTnG3sIohmVOniQVSKVUmoIx3IoDj+LAKOv8ux/+BFEQ8HrcJNNZ
      Hrj7ZpatXEzv7iFiq6IkKmmal9bT2FjPi+vf5eCBfh5/9B70aJa1jS0Ips6YZrJ9YM8xmQZZ
      IdGbobfvWB8FURDwuF3IskyxXJ5oz1epqnz/iWe4q+86Vt65BFUrclljG7IkM5hNkVCzLFvW
      wd69h+jq7sH/87e59+tfJGmVJ/SFJFHisqbFCLbB/sQAVV1lINU3ce554VYUSUY/WpMgCSKr
      mtoRBBOH7GAsO0yL301HtB2rYhHXU0iSE9s4nbx3m3wpSUekDUEQahOyIKCbJtlKnlwlh2XX
      JEdCnjBBlw+EmpLQbNI8T4UoSDjNIF49xtM/fZFYY5Te3kG69h6cFMRde9kS7rj3Bvrio7R6
      69HKGr/8b+s5eLgf8zxJKn+eEQCvz4N9koSL0+UzYQCingDJ8jnyHfoVlt6wkkOVml+zJVBH
      tX8cLzaHq3Hiqey01aiyJBHzBGm/cQG7t+6nf3CqpsvngUwuj1FRWdbUjG3DweToJFVM1dDp
      y9TkGmK+EKXDGQzdwLSsidqGcMhPtlzkyZ+9zN3xa1l1x3JSapavfu+L2Cn4q794kj/5j9/n
      X//hN4krYJkFTNumo76NolpGN3WW1LdSCRVYtLCdoZE44aCfh758C+2LIwgOm0y8wq/Xb2XX
      noPouoGuG/T1j3BP6GbIjzGQHqTOG2J5rJXBXJKvfese/tP/+0OKxTI9fUNEBA8eVae9pZEq
      TlobO1D0YQxTZXXTfHaP9lM5rm9tppxhQbieg8lRPIqT69qWUDGK9KfHJt5XUEtkyhkkQSLs
      8dPohHTh9O5j1agQz01uIiQg4HH6aA+3IEkKlmVSVrOkCrV70T4Dd4GEApqL1IhGenSEV978
      Fensya+9qmpIpsC2t7sYGR2jouocPNx32ue/xGRsYPjIKI5251mrAYDPiAFwWhJBp5fcaTRl
      n4nhXGrS/w/Eh3HKClVRxZ5mtyVLElfOW0TYdPGTp17gF4f7yJ7iwfisoxsm2VyerJKgra6V
      6jTV0pIoErW9bHl2M1u37Zm0MnQoCrGGCO6wB0EUWP/GRwyNjnPXvTdhOW2qIZV//Sff4oWf
      v02+UMAuVokFYlQ0AwubkBUg7A/gkHSyRY1/+3//HgUjS0ktkFETZKwxqIIQEnj0O1fzSPV6
      yjkdSRHx+GXi+QOEnT7mhTuRkCjrBRxCkYpk8LWvf4Gnfvwq8WSGbdt20hALsbQxCGIRy9Ko
      GrUiPqs6wpVNMbpTJRKl2v1SVEvE/D5uXrAYsDHMHA5RoiPSwngpS6KQps4bwiGKxLweStUk
      iVzirP42NjYltTARJzkdBAH8jjpEUyZ7dHci2S4+eXeAN9/YRl3Iz9qVi045+QOk0lkqlSo3
      33Y1f/xv/vK0r+cSJ0eQBKyznJT8mTAAw9Xz0yAZaoVOlWkkBKDmcnAqCtvf3M7LL731mane
      PRNcTgfeiJesXUWW5ClBVYB6d4CX/+HX5DI5br3xKhRJZsPbHwFgmia+oBsrKOB0OND1Mju6
      DtJ9qJ/v/PaDRFZEKCXLfOORe+g51E+bZxF7Rodp9EUQ0vDMS29w83VXsPqaNiSvyXDpCJlq
      csrq1rZtsuWj94kfDEA9aquK1TxBTwzbthCAQqWAJEm0dcSI1UcYGR1nQVsD7Z0SpWnE53Sj
      il4cpS3YQqaSncgGGi/EyVYyXNF2GZbt+f/Ze+/4uM7zzvd76vSKDhAgwd6b2CRSMqliNUu2
      LMc9dryOk2z22htvstlNskk+d2/iXGdvbKfcJE6cTWTHkSLbkmVZkimRIiWSIsUiFoG9offB
      9Dn9nP1jSJAgQRAsEkGK3z8kkXMwmDOaeZ/3fZ7f83vwkGhNdZEp5VhYNxnPKWE6BoO5K5dc
      vh9IoojqxNj4whHW3b+AUDiM6oX4/vfeYO/+oyycPZWaqiRvbN932eeqSMRoMwdwJJea6gr6
      +lOX/ZnbXBmiICAJItdzrtwHrxP4KlFlhSUN01kQb+TNN3ZO2MU/4Pfh95U7ZH0+ddiL6GqZ
      O6MZN1i+f22U3b8ggKC5pAbTTKqvZebMKexrOTLiGlVWyPUU0M97zzTd4J+e+ilSGmzB5Rt/
      /j2eee5Vir3lmQpFVyM7VKCnb5BcNofoKgxqfQxp/SMW/4By+e5tRVTAc8qKmoommquamVrd
      zO5tx2jv7MF2HH768jYsPTjm87hGD4tr64kHouV7R2Bp43w6UycZyveSLvQQVCQWN0xHNwZJ
      FXrH5blzI0iEkwSdav72O6+Qz2lEwwle/OG7/NWfv0hVNIIgwIzmRrbvaaFQuvzITVVVEAUR
      V/QI3wSzLm5Gtm59h0n++HV9zpviBDARmFPbSNjv5/WfbaH3Mt3NN5LzA9OdyxbT2t5FR3cP
      giBiX8XEI9OyUB0Zy3VGVXJIooRZMEGA0+1dtPzjyCK447p8569+ODzjVZEl7lg8F8OwWLxg
      FnXJav7t335B/oxctq+jn2Wr5yHKIrGmCMdPtXHsVCfrWDbqgBTPFhGRcBm90CgJMgG3Etsx
      6c+n6Mx0kdWyzKybzpEjrcPXvfPuEfr77iZRI+L3J0CQ0C84aXiei633MiseJxOeREc2Retg
      J4JnkTYHqI/V059tI1eUaUpOxrD0ayrAvlcIAsienxd+tpOu7n4KRY3f/b2/IZsrUF2ZQFVV
      QsEARc/lV770cf7u758ZLrCPRkNdDevWriBrFQjmVE6d7rjktbe5ek62deL0FQjFr32y3Flu
      eAAQhPJM1/GOsLtR9GSHaBYS7N6x/0a/lHGzedtO4IySp6aS9s6xJ5uNxrFT7Tglm4p47CLt
      uyxJNPgSvPj0egqF8gIuiiKyJGE7NqFgEFkSsSybpYtmc6qtG8u0eOShNfjq/Niuw3f/+ccc
      OnJy+Dmff3kTVY0VCFUyvScHaayro7Ozl4HuPOFQhLwx0sBN9y6d//YrAXyKH5/iIksKNf46
      2vOteHi0D7Xz8KN3Yugmre3dCKKIrPhwfDUczaQxbIPJiVqCkodrDOCe58RpWUXqQ2EqwzPI
      6DqWJVIbjoJTJB2IEQtEcHFIhqvoy048cYDnQUrr5cnPrmD65AYmz6rgxOE+XnxlG9lcgWy+
      yH//rV+lI5DGUySW3jGPA/uPjjjBAcQiYe69ewUV1QmY5APB4s0Nu253+b5HlPte1vP1//YV
      NrH5ujznDQ8APlGmKhih731wBL0WckaJfadP0NN7fQt57wemZZEaujp3SdtxeX39DkLREFOn
      TKJ2WgLZEnALFnbB4gc/fJZcrsDau5YyY3YjdY1xgiEfxZxBvDqAKEHcX0HW7CUqV/EHf/hP
      fPNb/8yqOxawaNnsEYs/QFtnD1te381jT9zHD3/+Ej6fj+lTJ/P8S6/z1d/4DJ3pU1hKnlKf
      jC/hUHLy+L0oMX8M2S/hUh6sIgoClm2SDCXoSZ/EtVUUXzVaphyoNMNArBX58u88TN+JHGF/
      EC8Kh/vah08ZxwbayhO8KhsJSxaaXs5rJyJ1ZPI9uF4XUTWGK9tksyfxqWHm183BslJ4novu
      BEkXfVfdxfte4rouGb2fGSujyK6Mz6fieR6GabF9z7s8+vi9uHjktCKzF01j59sHgDPeP4KA
      4zgsnj+TD31kFccznfRrGaoicYau8nN2m/HR2d3P4d2HCKn+y188Dm54ADAMk0pTZWCM2bAT
      AcETmD1tKtFI+IqGVk8UiuPI446G67psfbtcBJw1rYnfX/YlvvmtH9DXn0I3TNasWsTd9yxA
      ipsU7By2ly272MQgdWa3HgwEyWppbEEknc6hGwZv7X6X/QdPjNop/YtN29ny9j5W3bGAVDrN
      4aPH8fv9/Ognr7Jz7wEa6qt5e3cLd69czNIlc1i/Yw+NtVXc8+hM+vPndtyJUCWD2Q4s28Cy
      DUKCTHNlE6cG24bvbbCYQqoDjSxto9hDe57H4YF2ljfOQbFLxMJ15Ip92E55US/p53pAfEqQ
      vsH9w48Jgsjk5BTyRom+XM81yTLfC2zXwe8o/PN3N/HueY2Ltu3Q3dmHU++CwLAzqSLLPLBu
      Ff5IkEDAx7wF09jdV+4E9skqFb4YmcytZ3kykXA9j/WvbyMcuj51lhseADTd4JWfbOTDX3yI
      o5meCXl8FEWBhliSl366oWyD8AFlwdxpGEIbv/X1exFRcCyZkmwyUOhjLGmCi4OHhyB5BAI+
      dMNA03Q07dJ2CsWShiAKPPHxByhmSvzvf32Op59/Bc/zOHG67EPf1FjLrPmT2Pr2fmzbwbBH
      Pp9fDpArnivC6mYeSR270DsaqqSioCP7QqQyp0ekg87HdmzKLTsCoUASz3MRXQO/LFEdqRsx
      uWsiEPIH2Lula8TiDxCLRZk5cyrFkEXAVPm3l35GOBTgySceoG5xPbJPJqqGaM/0sbR+Fjmj
      QMwMsnn9zqs+ad5m/LR19g3Pyr5WbngAADh47DQztx9n3rxmckGH9vzEkZCFfH4qhRDP//8v
      cOpk+3W3Br4ZEAWBBXOms3bdLEpG33l/L6EqY/u6RwIxinqWgM9P28H8FZ1ENrzxNhvf3HnJ
      TcEzz7/Gvz//GiVd5+tf/Tx+f4KslkJAoCJSjYCN6znEglUUtDQhX5zuq2gorAgl0bQhTOvS
      fSjxSAOiKFPUU0iigieFyJRSaMYQrudSn5xO/yhF7BtJUSux/EMNHDgwnXcPniveW5bF7p0t
      5IslfrFxC4vmz+a/fu1XmLpgKn7VR9YoECFAvlDkp0+t5/jJNvx+P+2d3RNyA3crcr3mAk+I
      AGCYFs889wqxDWE+8sDdTF3RTJ9WNh47f+zc+03Y58c8keG7P/rRRQWwW4naqgoQhVHVTT5V
      4T987hGWrKykZI20WfY8F+UyOxHTNggFYqQKGZoXJviv/+Vz7N17nM6Ofo6eaMUwRx4dYpEQ
      i+bNxPYcdr9zGHOMMZ1ng0lzUz2Ll8ynp9BCyBelLtFEKnuKtFlOLxX1LIrsI6cN0hBr5oRZ
      uiJnT9u1x0zfiIKELPkYyJQtkB3Xxnas4RnJ5fdBR5HVCVUP8IC8nmX5ilkjAoCuG+i6xuZt
      O1FkmS9+5qPkQjpFU6Ooa+x56wDbtuzBtBxOnJn5q8gyiqzgOBPn/m5zeW74QJjzMQyT46fa
      +djdd9JUq9BcEaYuGkOWfOT0c0ZsiiQTD4TwPG/M0YDXQj2XavIAACAASURBVCQQoHRwkBd+
      9CqmeWWtF5FwCOFMoexmIBoJoRvmqEFu2aI5PPz4TDR75KhMSVRIRBpRlQBDpfQld36Oa6PK
      ASRRwPMgVhGkcorC0pXTuHv1Elr2tw4v5BWJKL/zW59j9spqZi6uYvHcuUSDUXp6B0bIEMs2
      1NLw73xw7Z0sXTEfzdawPRARiQejWLaJ7ZTN20QkHM/Gtoo0JCYxpOXHvVsNqkFiijOqd78k
      KkRCNRS0FI57TvKpSgo+f4ySUa4XVcWaGCqmLpk+ulH4VT+LZs/jUEsHg2fSN57n0XLkBCVN
      R1UVisUScxZO50RrG9/9i6fZ9MZOBlIZhtLnaiae5+G6zu0xkBOIsQbCCDUNeH3dE+MEcD66
      YbJh4w7u/fgcfPjIt+doqIfGpmos1DMOhwq6nsIjzsHBEmnt+lpECIJAzFJ5+sevXZX/dr5w
      /S0r3ku6xwjS996zFMO5uDiaiDZzYvA0lm1dNq0xVBykuXIatmvTMVQuwBqWgeqX+c2vPs7B
      fR1s2boPVZEJJCQGz6SZlGqBRz+5hMefWEFvV5qjR7o4daqHdR9aTFVjiJNH+ykWdFbctYSM
      lqUj3cHCuukU8m3kdJuYL0HEH2Ug34vplIOM41pYVp6oP0q6NL4mrZyWRYg1IzkdOO65zUA0
      VIOqhtH0LKY1UhigKiF6htqH/1zQMgTUIJY2sfoCTNska/WxYP40jowymS6XL9Da3kXAVNjx
      2l46ui7ulIZyALi9+N98TLgAALDl7X2su38xRlLnqade4qtffZKU2Dn8+PnL0ZyKGvb32xRN
      A598sTf9WYQzagYPD0EQqIhESZgqggs6DobkYHgOumWiOyaey02zg38vcWwHQRDhvJ1rwF9F
      b34Qc4yhJhfiCZyzajiDadkQyDBnTYLlaz9Grs8i7547aXiehyCIDOhtCEmX+XfHWXZvHSWj
      SMEr0DhPxXFF8OXIaRau61IwDVyvnLIp6ikEQaI2VsdgfhDrTHrC9WymVTYzkIvSW+jFuExa
      xnQsTNvAO+8EIAoSoigzkL7Y/VUUFbQLAmMq30XIH6OpshnH9ujLdWO7Nz4YOI5L3FeNYRy5
      5DUn2zp59kfreffdW8Pi/DbnmHABIB6NkMnl+fnPtvNLX1jDF3/lEYwc+KuCo84uLWgDLKqd
      TMlySfhcOvMOx1MjLXdrowl8gw49nb3U1VYRbogRiYR57ZlNbHrzbQQBFs2fhepTWbFyAamk
      ihRRqa2tuil1/1eCIAgAw+kQQYBYNEomm6OpoYam5hi220c4UI0o+3Fcj85M7xV3uOq2hm6N
      Xs+xHZuMk4I4GBfEXMu2kEQZ1zGxHYvCeU6IVbEaSpqBbuZpSNbgEyYhmP0XdO86FIo9VIaq
      Mb3yvcr+Cna+eYxXN2zjS195lB66x36PEIgHk3gKgIgoijiuTbY4+m7YH6iiO3Oh4sfDdkxc
      2yBT6KMmUovu2KQKY4+vlESZinA1iqTSm+287nOCPTxaU0dZsmQmP3v5zVGviUUivP7G9us2
      jeo2E4cJFwA0vSzl2/L2fqoqkzz45EL6TpZQizEsn4FzQQ7V9VxyhdNIosSA4ZD0x6iNxOjN
      Z1EkiUWVU3jl2Q1s27Zn+Gfi0TCCKOI67rC9wTv7DwPQ3zvAJ//Tk3RqGebMn3HLB4Apk2qZ
      OX0KzVMaeWXDFu5avpg9+w+xaO40Pv7xFThqP9FQDb2FAgXj6ucXm5aJIqlYV2hl6+GiyMqo
      AWeoMMDk5GxcwUQrnsYxLpXS8ShofQiCiCL5kS2RhsY4x0+1s+31d1nycDPZMYateHjs6z7G
      rIoatOLoxm5lmwoIB2vozfWNWjT2PBdZVPApAYYKXfiUEM1V0xkqpIadR2VRIaiGyJSGkESJ
      ylAlmUIP4UCC5qoZ9Od6yGnXV2oZ8ofZvOPdUR8TRZFpzU3s2d/CJdw2bnMTM+HM4M5XhUyb
      PAnTtJHjFs88vZGgVoUkjB6znDOqjqKeZXrchyxKzKuZzAtPvTxi8QfI5AqkMzmyozR0GaZJ
      RPFjmCbT508FQFHk4Z3yrUZnzwAtR06xbfseJtXX8PqWt7ln5WIWL57F4aOdHNyn0dVqX/HC
      fSGu46JI6hX/3FhpZc3QyZYG+em/76K/Q0K4zMfZ81xMu0Su2E1dvcbqVQt4fcsuTm0foEau
      LY80FMpzgxVppIlewSjSWSjiUyKjPnco3IAvWM9AMX3J05Fp6/Rl2/HJAeqSU4gFk6SyHSiC
      R0UwzryGRdTHahHcEjOqZpIIREnlO3A8G8MqIgsQD0QI+cJj3ueVoCoKB3b0sXHTrlEfb6ir
      obW9E8sa38lDFMuur7e5OZhQKqALOXTsFMlAgsbGGmonxXn6XzeyYsEiTHnsIqvrGtQnpxBU
      A7z6s81XVJQtljSm1tQQrUuS8IU4+u4Jnnz8QaZObuTwsZOXf4KbDNd1yReK9A+m6ekbYOXi
      uezY08Jrm3eyZ+8J3tl7HNeB+1fPx/S4qNlqvIT8YXRLw3avLJAEfWFc17xkALI9g77uEps2
      7WP1qoXYow1xGAXT1rlz5XTaWnU2b91N67EemqsnE1LC2P0ytckqcva5apMoiFSHk4RVCeuC
      fgABgYC/is6hU+O6P90qUdAylIw88XAVQV8USZQI+IKInoiLi+2YZAr9eLhEAgmCaph0vgfb
      MVCVCCXz2rvRBQGCThX/+A+vULqgKU+SRGbPmErTpDpaDo8/9y8gEAoFMYwbX9/4oDMeFdCE
      DgC6YfLOgWPYJY8PfXg+27YeIRmKUdsYx3Au3R/geA6ek6E6HGLjq3spXsFgds+DtvYuVi1b
      hKlbbN+yh4HBFKZl4bjuVVsq3AzMaG4kk83T2tnLIw/cyR///kd54rHlLF1Uj270k/CHiIaq
      yOnjl1CeJeKPUTILV2z6F7pcAHAcZkxv4KUX9xAPVlDfGMT1xrdbFUSX1UvvoaqhglfWv8XO
      XQcppTQefXgNb76+j8bqOuLhKDFflNp4DTV+D8fyUKQAEjEkWcJxz9g+4CFKAQz7yj4fmlmg
      oKcp6FmCSgAw0EyTgp49UyT2iIeqSBd6cVybcKCCjJa74kA6GrFQlHfe6qarsx9JFDHMc4u2
      53nk80VOtXXieR6iIOAP+C/rKCuIwi3dM3MzcVPKQEfjdHs3xZzBo4+s4h/+8QUezaxm8b11
      FMxL521dzyWfLzA4OHTJay5FKp1jw/Nv0D84RMCv8ttf+xX+8V9+wpIFc9j1zruks7lbruNR
      EkUmN9SwdVc5FyzLAro50g5Zkf2E5QDBqqm0ZXvJ6+P3fRkqDFAXbyRdTFEwru8ENc3N8cij
      K3l1806Wr/wENuOzIzZMg1AkhU9UmN7cSF1NJY89sQo16tDd18dP/udGggE/4WCAxoZa0plc
      2aJCECiWNL7+G5+gvllBVUJIkkrcFyGnXfnnrUxZnTaUbUeW/dTHa+nPD6JbJQTONN1JPmzE
      69JMFglEaWvR2bRpN2uWL6C7b5DdB44xrbmRdCZHT2//iIDgeh66fvnTnyIrI37ucgiCcMt9
      l24mJvQJ4CxDmRwH97fz0AOriCUiPPOT16gKVdHQnMS6hJROEkWyfQ5bthy4ot/l96nUVVdg
      WTbdvQMUihrdPf1ks3lURWHqlCbaO7uvWyv2RGHJvBl096XoT6URBIG7VsylqXGk46BPCWKY
      RUwjSzIQxe+PjjsIuJ5LXssyuXIqQTWIdkbRVRWpwbCNS54MLncCgPIpYEpTHc8/t52Ojgwr
      ls7HYXwpEs3MMXPaJOatms6UeUkMSSMkw5z5VSyaO5vjJ3ro6O6nq6efVDpLvlAiVyiiGybH
      T3UzY/I84pVJ+ou9ZIuD12T1oEh+8HRs2yAYqMW0DWrjTfRn2srTzASRaCCGXw1RuKBoLQoS
      fjWIPY5aTdxfwc7NHXz/X3/B4nnTyeaKnO7oIZ3NUyyWGMpcvTPvaDMjbnNjuOlTQOeTzRc4
      drSdVCpH30CKI8famFU/g1iNijPKkV+WJLpPFdi7d/z5y3Wr7+B3vv5F7l+7mrsfWsRd984n
      FoiQz2kcPnaSdCaLaVrcsWgehWLxlkkH+X0qc2dOYc+7ZS34/R9axqOPNOFdIPuQJRVRkHEc
      E8cxUXGpitVRssZeoAFU2cfU5GT8joHimlRHaphSORXBHKA2WoVfjVA0SxcFgpAvjIB7xuJZ
      RBLE8r9FedgQSxBEQsEAWha27jjA5LrJVNdLeIxvMSoZGeKBMBF/iJpIJXltiKKRwR91WLNq
      IVu3HB3VkiJXKPL2nkPMnTaLmZNnkdZ6UWTfmXu4mkDgUR2rJh6uA1fG7w+SynVjnAmWnudS
      MrJURupIl9L4FD8NyWYCapiAr+wOWRufRLY08hQiCAJV0VoqfHX0nC7xxmuH+fnL23Bdl8a6
      KuprKtm9/wie52FdxdCgDwLRcBCfT73IumQic8ukgM5yqv2cXtuyHV5+9S3+84KPM+B0XnSt
      7ThMakqO+jySKDJ3VjML588gHPexb98Jdu05RE11JW9t20cuXyKbyzNz1mRW37WItQ/JLN41
      g62b93H0eCt9A4NUVSRpmlRPe+fYGvKbgfmzpiKrCivumI8ATG1uwBvFssCydQLquZF0rmvj
      aoM0RytJmWF6c6PLRGsitVQHIlh6DuvMwmjpWSyh7JxZKg3gE2XmVDUxpBv05HqGA4GHR1Os
      GvNMKoQz/zz7L9crCzAF4De/so72jj4ymSKyWIHpjH8xyxXLw3JkScWnJinqWcppmbF3tZpu
      8PauFionCSB4TK2ZT/vgkWELiPEgSxKylaQ23MjunSfYtn0Lq1fM5c67Z1DUL5Z8pvPdTK2a
      SdAfpaQNMqBlhtNqqqoyOTGTYkHDVXVwJbrbsrzw4l527z1M+oLh7ntbjtNRMXDLnWivN/W1
      1bieR0N9Lf0DKdKZLK5786eubqoAcCGiICCIo8szPc8jVi0zY1oTx0+2j3hs7sxmfuP/eowB
      oxNFkZDE2by96yDPPL8eOJeX3LR1N5XJGP/hC48zc1E90xbX0HEwxcb1u9F0na6eq9fFTyQG
      01l+/csPIPqGwPPw8EYNAJ7nIssXS/xMI0OFEsaL1tKf7xvO6YqCyJREEwHPwdIvTitoeo5Q
      sIJsoRvXtSmV+giJCnOqpjCol+jL9YLnUSz1YZiXTzU5bojmplrefqeFO+96HMGvXbEHf8AX
      Z6iUKXeLh+r596f3XKSQuZD1m9/GcRxmzm5g56uvc99HpsM4U1AAQX+IH/xgBwOD6znd1onj
      uOhaicVLpyFJ6vB8gbO4noMqifSljqGbeaqjk4gH4/TmuhhoNfj77z5LJOjnj37v1/j9P/lb
      Orsv/TktajrFzl6amyZxuv3ijdRtyhw50QqU+yI++vA6DMPk5Q1bbuyLug7cNCmg0ZBkieWL
      5uL5zVFNtgzbYP6sGby17dDwLk4UBe5bs4z4ZBHD1kkGq/ibv/zZRUPeKxJxJEmkqOn09gwS
      FML0tWcY6ElTzBf5H7/7BR58aA0LVs7Ch0pbe9kKt66mks9/8gHmzJrC6baeKzaSuxFk80WW
      LpxNJGaeSZuMvrPxPBe/GhvVFtlxTYKSxKTkZAqWQTwYpyFSg2yV8C6pyvEI+GNoxrldrue5
      2HaRoCQwuXIaUUWiqA1e8jWdjygKdLSbvLn9AIcPd7FqyR0IyuUXYlGQCPqTBP1VmK5HQc/g
      96tsfKWNF18e35f8VFs3u/Ycoam+hunzEljO5QumoigQkivY+MopNmzazVA6Oxw8e/pTDPTl
      uG/NWrL6uVNmVXwKjidjODY+WaZk5HEcg3i4BksX+OafPYNlWvzalx8nXuujvyfPiVNjF8V9
      qoIgiB/oWRfjxfM8unv6+MKXnkBA4ORl3tsbyS2XArqQgVSGb//1s3z+sw9SOyNB3siOyCF7
      nkeg0ub3f+9z7HzrGE1NNdQ1JEhUBUiZPQTUED47edGxGCBXKGBZNpIoMm/uNAqlIr949S0a
      66p58mPriET95LUcclziE7/8ABWJGFpJ56MfXUs8aGGaRSbVV/Jn3/7h+/mWXBWe55HJlJg0
      RR515z98HR6SJF3ycccx0EuDLK6bTS7XjzmOXfuFdYaz2I6BoaWw7OKYr+l8LMvi7tVT2LK9
      glPt3by2oYXHnpiB4VzcIRzyJ1GVEIIgAQKabdKdKZ8U/T4/3cdh+46DV2xw1ts/iEwAGLtb
      VxQEfMT50//nBXp6L94keZ7H1p37WL1yCXUzw+hWgYAaQbNM+vM9iIJIc+UUFNlHKJDAMHPI
      bgDdMKmuiFPbkKSvN82Wt/aO+ToqEzG++PnHSGeL/ODpF8fd8PVBplDS+P4//5TT7RNrwM/V
      cFOfAKDcuLX7nSP0tRapDtZT31CB7pzT/duOjec3aJ5bgb/CwfPr1FbUkgxGCIbq+fGzmzh5
      QYoIzuV9Pc+jIh6nujZBR0cfXX2D9PQO8daOQ2hpk5d+9CYv/OR1Dh05RWNDLWtXz8Eyi3ie
      S1VFFTvfOUY+f+PdQcOh4Jje+nNmNDOlOXTZxTboT6CPkd/2PAdFVtH1IpfbtYuihCTLl0zv
      yJIP17VG2CyPhYdAMpFg8by5vLppD509/SyZt5BklUo8UkPIHyWgRlHlILplkCkOUNQzFPUM
      4UASzcwTD1WwbWMv//z9lxkaZWNwOWzbKTuoepdW0iiyjJ2P8O1vvUT3KIv/8P14Hul0ltWr
      52HYBRRZRZEC5PUcCAKRQBLLFRgoDBJSw4RCEPIn2PLWPrZsOcBrr71z0cn2QubPnsqK+2aQ
      nBRg59Zj11XDL8sSUxob0AxjhJ33zY7nQf/g0IQPlrf8CeAslmWzt+Uo+w8eY+a0Ju5du5zp
      86owpAIlq0A4EEISJAzLQBBEbMfBtnIEpSSD/UNEwkFCgQBFTR+1a3jbrv1s27V/+M9nbXP3
      Hjg84rrX39zJssXNzJ9bDYhsfHMf6Ux+QsyAqq6qoK62Gl3X6ezqHfGaFFlm0fyZxCIyjmNR
      KA2MsD0+H8vSEQRx7Ny6J48r9+5TwyPSP9dKJFiJbZvUNyg0Taqjtb2bn/9iF//lax+lZ+gI
      Z7fzsqRintewJcsy2ZTF/t0lDh48xJ79hy/1Ky7LUDZHMevA6I4RBP0BrFyUb/zZv46rQ72u
      upKqWD1+KUp60CRYLxHyRSgaedoGzzmR2q5LKT/Igw8vRNMMfvTcxnHp62tqqvBED9t0uDrl
      0ujEomH+4Lc/S9OkKP0DJf7s28++55vB21w5t0QAOIvreRw50caRE20k4xGWLJjN1On1HDr8
      LoZu8UufX00oquDYWTQzT3XU5dd//SEMR0OUwTY8Xn2phV9seOuqKvyWbfOtv/0xd61YSEkz
      2PlOC4qsUFWZZOAqGtKuJ6dbO4jHo0Qj4Yu+5lMaa4kmLVLZDkAgGqzBdV18vki5w1VUEPBw
      z9gzl/TzLRIkfGoYDxefEkGSZGzL4nKLiaIEsT0DcxSHVwBVCRIMxEhlxv++qWqATK4X25H4
      b//5M3zzO09zuq2TdD6Ne56L5tnFXxAEQv4YRsHPN7/1E9o7R3f3vBJc12P3O8dYdX81+gW1
      klgozpbXunn2uWfHvSM+fKKV5597mze276GuKsHXvv74qI6g/flemhKNDKRP8+DjC0lns7y2
      YXR/n7OIosCixdOxRZ2tr564rgPd77tnBfNnN6EZJSorLB68dzn/8vQr1+35b3N9uKUCwPkM
      ZfJs3LKLjefV8Lp7+vndr38O4kVUOUDJ1hjUO3E9h4gUJxwN87nPr+PNbXspXIF9xPlousHG
      N8998RzHQJYvnTd/v5BlGVVR6Ou/eN7yqmXzEKTsGbdHj1ypl6rETHK53jEnWAX8cVQ5WFal
      yEGy+b7hFJIoiGPaPgT8AVK5i1NvZwn6Y/QPHR33/QGocpjK+DQc16Iy4eeb//OL/NGf/hCj
      5IDv3HWSJBEJxNm7K8WmN7Zy8MjJ6yqDXP/6Du66+5dBHBkAREFhw+u7rygd0tnTz/effREA
      27KwNPApgWFrbUmUqY7WgwjRYCWyoqJZFvc+uJCNr+8ecyPjuh47tr/LF+c9ykcfaURwRI6d
      bOPk6WsrbNZWV/DJj60kERdIEKN/UCZfuF1gnojcsgFgNLr7Bvn9//u7LJw7neVL5zFtps6c
      +uUU3BSDuW76Mu2IRgJNN1AVZcyc+XiRJJGaqgpEUSQ3ivvo+4Vl2/QNXLz4A7y5fT+f+Nhv
      4w8KeJ5NV/9+SloKSVJwR1msFCVAPFJPoZgiXyzbZcth9Yx8Fvz+GCVXR5VU/GJZNmpZOrIS
      QKDcFXzsZJb6+gSGdXGBtjxO88rfe9t2yOTPFeYC/gh/8kefoa/HQlUCKGKAVK/HocM97Nyz
      m6MnWoeLvIIg4FdVNOPac+DpbJ6WvV3MWhEYqQYSHOKxCP3jOA0KgsCnPvphnnvp9eHPYU//
      IMeO9DBnaQ0RJUHOGCIciNGdacf1XAZyfTiuQ2WkhlBUJh6NXrart72rj7Aaoa/QzZe/9AR9
      PWm++rvfuKaO3sULZuGhkc3LhEN+unsKvPTqW1f9fLd57/hABQCAkqazY08LO/a0oCoKyxbN
      5ku/+iCyqCKIAtm0huM4SNLY1sJL5s9k3bo72P5WC9lCib7+FKn0xfnsWDRCd28/+gR2R9R1
      k2KxiC2UF7+K2DRsRyccSFLSs3ge5Arl9IggSERD1QxlOkbkmPPFARKxSTiuRc7MM5gra8oV
      yYfrOQTUCKV8x7ClgRoNEY/OpS+V4eJ0kYAi+7kcPjVKwBclk+8kFp5E6YKmKU3PEw0HmDa1
      lu8/fZBd7xziROu53a0kisycPplTbV1UJmP82hef5C//4ekRs26vFJ9PxTBMdu89zII77sOi
      Z/gxx5LHnQcXRZF5s2fw459vGP471/UoFm0CSoDtb7RgWTb33zuTLsozCkzboCJcg+3aCIIw
      TuM9kXcPHKe3L0t2qMAdi+fzh//9K3zjf/3TVRc5j59sx3FWMZTOkc4Uef7lbRP68/9B5gMX
      AM7HtCze2v0uruvym//xU0RCcU68c6z82Cj6/UgoyIP33cncBZOZ1FyBSoCGumrkBLzx6gE2
      bNiJ45QdQ5cunEM6U148qyqSHBulEj9R6Bsc4qmnX+NXv/ARFH+ebL4T2zHJ5sv680ioGr8a
      QTcLBPwxiqU0ngeRUAWCKCIIIgIihp0lW+xGVM51C58dw1jQz+30Pc8hHFQxncKZVNEFpwzP
      Q5ZVFDmIZV86FRcKJEGQUOQgsqhSsi4OwD4lDKgcOdGKpussmT+LZYtnUV9XQV1tnKbGGH/6
      //2UbTv38cff/PtreBfLnJXJ7jt0nNZjy6idJQ9blaQHjHFbk3uey7/++KUR6SJBKAseJPz8
      +IXN9PUPcvpUN7/0K6vpzXUwuWIGfbkuwKPtYJFsbuyc/pTGOj5013K+//TL/Kf/+AmqKytJ
      Z7IsXTSXhtpqWjuursv9ZGsn/++3X2D1qnmcONUzIiV6rUiSdHtU63XkAx0AzrL/0Al6BgZw
      og6TF9XS1FhHe0cPqiLj86kUihqe5/HRh+9h3j01FK0srpwABzK+frRciaX3NnLnvbPx8Og5
      mWHazAaUgEi1Us8Lr2waVYo1kVi/aRtHjp/kd7/2CYIxj1Agies5aHqWYilFZXIqsuVHkf0Y
      WpFwKInmeXSnThJUI9TFG8nkusrqn8ukD0RRJuyPYjsmqhpGN0buuMPBGtK5boK+SnQhTShU
      Q7HYh2VrCIJIOFSN57loZhHbtaiKz2QwPfqshsFMG8mox//4nSewbQFJtDEt7czu2MDzXFLX
      sOO/kNIZfyjX9di8ZQ9fWbiWjN5HKBCikAkQ8PsuK808+/ODQyPTY54HgYBKy6F2BgbL6bw3
      tu9F9at87KP3kNXSRKnnqade4u3dLWP2MPh9Kp/9+MMcO91JV28/e3cf4zOfno6/IsiJ1jZi
      sShcZQAAaDlykpYj139+xu3F//py0/cBXA9s2+HE0XYkTWLS9GrW3bmcRDTCJz95L5/9zIPM
      mDUJwRJYe/9icl4KSZSJBRMUSxpFu4Dt2uiWQdHKU7QKiBGbjDnEUDFFxh7EzHscOHACx5nY
      fivZXIEDLad5cO06LIZQlXIaxnZMJNlPf/Yk+dIADha6VUCWg2RKgzieg08O4Vf8qEqEwcLo
      IxHPkgjVoBk5fJKKdt7JIBquJeCLU9QHMO0SkXAlshyiL3MSfyBOwB9FkgKk8t0Yjo5m5rEd
      k7A/OYac1MOwioT8CWxHx7RKw46dAjCUtnnqmfVX3PA1HooljbWrlyP4NIx0FFuXmLuomR07
      Wsb184osjTAfEwSBD61ZRG2zn8ygRXtnL47rcuJUB/NmTEUUJb7z7R/RcvjkmPcjCPCFX3qU
      Q8daeWXjFmzboVQqMXvGZN7Ysouqmhj+kMqu3Qev9S24zQ3klnIDfa/J5AocO9VOXI4QjgSZ
      ubgGD4/vf+8XrL1vKXevXUpH8QSu5+J6DrKoMKgNXnZClmmbNE6u5rEH1nLieCepoeu323wv
      KGo682dNJZowEUWFZLwB1/Xw+8LkSuWCr3OmOcvni5LTMrieQzgQxScqOLjkSpeazQshfww8
      i9KZru1EpBZJlAn6KzDMAvlS77Bk07JK+NQohq1R0ssTtPQzk7DOBpjGqnmUSimcMYbUe56L
      ZmRQFIVgII7fH8O2LQKBAH/9D+vp6Oq/Xm/fCAzTYmigQDJcx1//7fM8cN9yqC7i5GTaOy4v
      ORUliaZJdcOd6oIgMHv6VKrqg+CK7HnnnEqqu2eQF1/cOq7TTDQSxvFg64538DwPz/NYtWwB
      S5fNomFaBa3FYyTjMbZufveS6ii/33dLNXfditwOAFeI67ocPHqKrdv2YeWgo22ALTv2UZ+o
      gnhxWHoHZSVLdbSGRCiB7Yw9M7cqUs2A3sXqFYs5GwBbtAAAIABJREFUeriLTPb66a2vN57n
      cfREB1MaZlBfV0l/5jjRUDV5fXCEZj/gi1EwdMwzATCoRvHLMoIoUjQunvzlkwNURhsIKGEy
      ZwrK4UACzzWxHJ2SnsK6YJqW6znoRpZoqBrLNkad9FXU0wTUKK5jXdaL37J1DLOILKo4jsGx
      41l+8OyrV/U+jZeu3gHeersFwzC5+87FFOQcQTHM3ncuL3G1bZv62uoRPST7Wo5Rn6hjzYfm
      E/D5OXqsHdd1SWfz4zphSqLIw/fdhT+g0t0zgGXZ+H0qX/rsEzz3s81MqqtCDYv4zCivbdgx
      qhooFAwQi4SvWip9KRRFIRwKXnagTCDgx3VdZFmmaVLdhP4+3UhuB4CrxPU8TrZ2cvxE+ctV
      KmmsWDGHknNOxmm7Nnk9S07LkAglSYQSRPwxchcM6lAlFb+iktMyOKLF2rVLmD1tNstXLWTB
      3Blkh7KkJ9gHuFDU2L7zEEODBgvmTqVk9hEJVKKZhTNmcQKK5MMRZEyrRDSYoDgk8uYbx9m2
      9ThDvS4zpjViuuWCpyr7CfkjpPPd6GYB13MQEIgHKyhqZ7uOL714m1aRWKgW3SxctMh7noth
      FUlGGzAuMydXFCSioTo0LYdfDfO//vqFa1L8XCmKJFMVruKnz785bnuQgcEh5sxopq62Cq2k
      Y5gmp1q7+fC6u1i0bArTmxt5552j41LsCILAow+s5r6PzGPegkb0gkdv3xCPP3wve989ytbt
      e4iFw8yYMo2/+/vn6esf/btrWfZ1X/yhvAEbzzQx27aJhENomn578R+DD4wVxHuNZTsIMnCJ
      2t1gvg9ZUogFK4DyQiMIAo5rI4kSkpygMiqTynfiSn6GkoMEFT8+MUA0HOS+1Xewa/8Rclcw
      vP69xnYcXntzF+2dfXzpl++nIhpEdqs4dLiHdLqEKjtMm1FHVw9s2LCZI8dbR8hCVfkR7lzX
      gCh5hH2VDBXKTV9nLSY8PETxXIOcgEAoWIUgCBhmDhDxq5GyN6nnIYoyFbEmND2H7Zro5/kH
      qUoI1VdB1INCcWBYVSQKEh4eoUACnxLBdVyKpQyKLLPxzWOcuMaGpytl/aYdrN+044p/bvKk
      Gj7zhbsxnBI//fFufvHqLtrbexC1IUL1Eo8+sppnf7xx+PpwOEihMHKBrkzG+ewvPcKda+bQ
      nTuJKDg8+shdBHwh3tq5l/bOslz16Z+8yvqNOyiUNGLRyEVKookywvFG9tTcStwOAONAliVU
      ITDmNa7roEhK+XpRpqlqHulSjv6iwaHTp1lYW4coSBRNG9t1yJslwj4fB4+3cuedS3jsyQf4
      4VM/fT9u54o4eqqdP/rG92msr6GnPzXCG18UBNxLLAY/+tnrHDg8hdRQlkfuW83SO5qxhNMj
      zOZyWhq/L4ok+Qn4wgzle4cLto5rMZDrGLHjl0QZRfYjCCK1yWnYdvnk4Ik+9re/jU8JUBmq
      JCQrIEDRdqgJ15DP95PXy6oZSZJobSvyvR/8/L15wzjXC3C92LhlN/F4mDvXTeHBx+YhIHFg
      /wnWPDKVgpWhpjYGlO/Npyo8dv/d/HzDVvKFIoJQli9/+QuPUj87iO7kiQZCVPln8Bt/8Cf0
      jrLLFwSRymQC13UvCgATYfG/EFEU35dRlONVcN1M3A4Al6G6MsHnP/0IaXNgzOs8QPDKw2lM
      xyCvZ9jfO0DRLH9gfJKA7tpI5KiPVRBSQ3h5h5kzmpm8cibxaIRAwI92meEjNwLTsjnZdrH1
      7aUWfygXk985UB4x+eKrb6LpGh/6cCOWW87ze66HbmlEg1NoTfcSNBwkp1RuJCuNXpR1XBvn
      TJonGqggm+8APMLBGlTFh26V6My0IwgikiBRFa0lm+3GdctBR5FlOrt0/uQvnnlP5zQ417k4
      atk2x0/1EItFmb08zH2PTaHrqIOsxfD5dKqrfdTXViPLMq7r8uOXNtJYX4um6Xzq4/ezfE0z
      upAjWxoiqAQZyPdQyFmXTLeoqsJgKo0oCjx072pe3fTWmP+vbzShYGDc/RXXwq22+AOM3e76
      AScY8PPpJx4kVC9QvIRlsSCI1CfnEAw2I6nVhH0RVMlHyXKxz9uVdOeLJMP12EKCkD/BsdQg
      LcV+FnxiJRnZZMAt8qkvPI4gjD7h7GYlEg7R25+iaWoDA5Yf2T+ZohcjEZ+DoFSSNUyyWoaQ
      omCPoeQ5H1lSz1x7ZrykXUI9r3PY81xs10KVfMM7Q58aZOMbp/mDP33qPV8s7PdAq76/5Qim
      YdN92EXCT/1MiUhSpoJpTJ3awJSm8njSzu5eBOCJR9fw13/x29y9bh6CahMNxJmUnMJQoads
      9Bd0WblsHj5VYc3KxUyd3EA8FmH5ojmsu3sFgijw5c8+zoP3r0ZWyvvEifrZ9KkKqqK8L79L
      VRTC4eD78rveDz5wJwBVUfD7VXLjKMJ98dOPEpwVol8zaKqYjmFppAr92OdZJauSD0EMsLvz
      FJLYTWOiAgGPg909I3ZNp9MpuvMKhj1y52md2Z0GVR+zptQTCQfH9domEpc6GkcjYSzLQlUV
      qiuSlLw8pwZOUjJLmI6JbRco6uUdvXoZ643ziQWryRW6EFDADSHKcfL50RvtBAH8aoi//O5r
      vPnWvqu7wQmA7TicPN3OYDrKtNl3kDeH6LFP0lQ5HdWu5s7lS3lr5z5EsZy+mdxcQ15sJ6Ik
      sA0NzciQpXyKEgQBoygR8Pn42lc+zdz5UxAAxxJxPJs//8738VyP5uZGKirC1FZVYtkWmVwB
      XTcmXBrIMK33JOiOhmlZ18UjbKLwgVMBTW6s40//8Lc4eboD27YvOQBjUl0V9z62im5tgKKp
      0ZNLozkwq2YWul3AOrNbFQWRnCnRW8jheC7pUpEhrTiqpuVSmupoMMgD0xYx5Grcs3YlzQ11
      VFRXMDSYvik8VMLBwKiv07ItLMtmyYJZzFxeT0++a1guq0gKEh6mY+JXAoRkxrR9OJ9EuBrX
      dXh9Yy/f+qufs2DBLKSAeZFCKBaIE/MH+N4PtrBh8+5rv9EbTFtnL5Pqakj1F5k+vQHdLpAr
      DSF6fk6e6OHAwaN4nkexpLFk3lzi1SqZYj+2Y+F67nDvhKoodBwzeP5nm/n8px7lr/7uGSoS
      FZxu6+LPv/MUvQMpXM9j3uyZtLX30dPbz+9+7SusWDaDNXfPIR6N4tkCi+bPpq2z+z1porsU
      sizhuh6iKA4HItO0kCWJYMB/Sy3O18ptGegoFEsae/Ye5FRrB4ZpXXI3s+qOBSTnJNGsczn5
      RCBCX76foD+MiI1wxvI4FkzSnr16OaEsS3SX0gQUH7FQmNNeFn9jjLVrV5IIhGlv635filxX
      y2iLvyiWd/SeB5FwkEV3TKfoFMryz0AcRVLwyeVUzqRInJI+do3lLAFfhKA/TiiQZPvbJ6it
      ruBDd08mFIiiW/oIXyFRlFj/8nGee3HzdbnPiUA8GmL6tCa0nE2owis3Jkol4sEkKxYvZPe+
      Q9iOjWk6LF88n6Iz0nlUEAScXJh//N5LzGhuZMHKKlatmkUgLBNS49TXVLNo/ixUVaWvP0Vn
      T3mgfDQSoqomiBovsWTRDPbsPs2TH7mf5UvnsHLVdBTZTzqdwzAtBEFAFIXhwDCpvhbwsB2X
      qsokxdLVW0Oftbe+8Ht7ti/Asif2lK73k9sBYBQc1yWbL+AxtqJBEAQeWrOGgltCEASak5Mo
      mXkKRoG8XiISSKLKIZLhagxXoSN76e7Xy2HZNiVdZ6hUoHWoH922sByHlFFkzbIlLF45j7mL
      ZjF3WjPz584glcq8L0Wva6HcYVr+76FMjppoBbVNCRqSDQRVBUmAdHGA+ngdltF/2Saus1RE
      m1BEFU3PMrkpwfI7ZmPavXhOkYpwFZIcpGQWifij/OL5Izz/4uYJMZHtetHbn+Lo8TbqqmuY
      PKkOSyhiOzaJiiCzZ01l1tSp3LV8MT9/dQtzpjdTW1uJKArluolrIUsyHcd1tm7bx6c/fj/h
      KoegGqOrp59v/Pn3OXG6g9Ptncyc2sTJ1nbWrFrE1OZa9uw7TEtLKx+598P4fD48G3xBj1ij
      iRzWWbi0gfvW3cHCWbMxDJt0Nj/cKRyPRhBFkXyhSGNDHffctQyfqjKQSl/XdNKVLv6SJE0Y
      Wet7we0AcA0sWzSbxXfMoavYz5RkHR1D7Rj2uXRRwShSMEpMrmikM5dnsHjtDSmO616ktugp
      pOkzChRkGyMmYyUVVq1egmJ4dHb2XOKZJhaeB4eOnmZysoHm6XX057oo6DkEBCpCUUxz/GMh
      RVQUUUI30zheFts9ayftYVlFwr4QohxgoMvif//LK1e1+KuKcl0HxFxvTNOirbOXwZ48dyyZ
      g+EW0cwioiDxR3/8L7S2d9M3kGLHrhb27WmlkBJ4951uZk2eDY5My4Fujp5opbqygjsWzSfd
      a1LT6MfSFPYeKI/OfGDdMmLxGI7tUSyVmDenmbfefpcZzZOQJIkp05NoUj+6Wd6ImLaJI1jM
      nVbDsuWVPP7QnSTjSQ4f7SCVzgw3jg0OpREF+O3f/GX6B9P09A3esNOt53kIXP0gTEWRJ/TJ
      /HYj2FUiSSLLl82nrdDB5GQdvdnei6wNkqEKXDHM5tY2CsZ7N+3ofCWRR3lX3VYcYsZDi5k2
      bxqDnQNsen37hJeo2bbDD59dT0VFjLvvWUiuOIAiq6RzrVf0PLphoBU8JHX0gFvSBqmJNrD5
      QNtV7ewUWSYei9I/OPrwnIlCLl9g+56DqKrKR55Yiq1m0Es2+WKJ3KnyomyYLm2dvbSdGXW5
      v+U4CJAvlPCpKi2HT/Kkt5odu1v4yEP38ORHPsyGTW9TKGl8++//ffj9C/j9Zd+mWJRvfPsp
      BGDBnOnMndvEzHm16OIQtmMiUO4LKWl5IM+aexJMa/48f/E3z2FZFtFImIpEnIfvXYEnaJRK
      GjVVSfoHhq576iYYDCCKwkUNcVAehXm2jgBwtUUMe4IPhR8Pt08Ao+B5HpPra4hOCtGb68W+
      YAarJEgovkpaervQLfOGaKQ1y8QICcSbq4hYMm2tF+v0Jxqu6yJ6AvfctQDHzeO6Jn41jChK
      WJcx1TuLJAYY6CsSjlxa9RHyV/D65sO0XYWdseu615Sjfr8ZSGVoOdBOdaSRqQ3TmDK1gspk
      BV3dA0RCQaKREJ7nIckSlmVRLGlnOqvLqQ/BU2lt72P9xh20tnXhIjCUzo4Ino7j4Loutu1y
      5/LFzJkxmaamev7un37Cnt0nWLPsDhy5iCypxHwhDCs//HPJCh93LltE86RmPvXR+3n04aXo
      hsFffvcntBw5ybq7lrJ86QJaDp+4bqmYBUvmsuZTDzBr5XxU26Onq2/E42d/zVkjvKvhbDF6
      InP7BHANPPfyZj4beoiKeRHy1si286pYPS394ytavpd4nkdOKzF53hTY/PaNfjnjYt/BY5w4
      2YYaPdfslYg0UtIz+H1RkpE6DFNjKN81qvmb7WYxzSCu40OURj/16NYAyeSto9Uei2JJo1jS
      +Kcf/IygP8CsBdU0zwvw4YfnYxkewahIIWsh6BFefm0bg+kMJ061YVplWeezz7/GwnmzaO/s
      4cjx8kIhSSIV8Ti5QglVLevrVUVm7ZoVPP/SRlYvX0hXb/mElErnONrSw+K7a9HO+55Ioooo
      SmhGlqrqOp597hD/h737jo7jOg/+/52Z3dm+WGDRe2VvkqjeZUmWZVl2LMmWbVm2ZRUrsRXH
      8XHyOnlPkpPkJK/zS7MTl9ixHdmRbTWrSxQpkmKvYu8dRG/b2+yU3x8LgqRIkAC4IEjgfnR4
      RICze+8uFveZufPc5/7oFy/idjkZGNwoCWDJyg189lN3c93V8+kfiNDZ1UPkAso82O025t51
      DV1mCgxouXUB+3cdJJ7ne2aTpRKqCADDSKbSvPjKEr5R8zCyO3naFJBpGpfMjSNJgmzy0p7+
      OVUimWb16v3c84kaMnruTDGZHqC0sBEw6Ro4gM8dxKF6SGXOzKxyqB6aW4LEwmmc3r6z/hx0
      Q8fn9Y73S7mkaFqWf//xb5jWVMvsmY0odpn6ulLKbF48PgdFFQV87uE7+OCD/UxvrqUwUEAi
      kaSnt5+CQi9FAR9ulwuPx4XX5eSG667k1beXs/fAYWw2G26ng96+AQzDYMW6LUPtNtdVcett
      V+YK/CkKsqzg95Rhp4L3lm2lubkIlyPBvR+dzeZte+kPRfC43SSSuamZZCrDL37zOg211dx0
      /ZX43U5WbthKJBLj2BjvcZmGmdvsgdwV3aXyu3rCpXTjWQSAcwhH4yx5Zx33fOEGupMnz/gH
      4t3Mr2xmc9tR3KqDaPrkPKNdUTAt66LdRCxwedix9fLauMNutw1WFc3JZBP0hk/uHjVcbX9F
      tmGzF9Af78DuduF0V6DKMvFEP4aZOuXxBjD18sF1w2D3/iPs3n/ykt/tcmBTbPi8bkpLglSU
      BZnRUg8y+DxObrruCrbt2oOumXR0dvOJe26hoamO1Ru3snLd5tNKUZ/NkbZOvvXn/048keT2
      G6/iY3dfg90Bb77zLm8sWklpcSHf+cZDVNVY/O1fPMrzL68jkUzR2d2LBPT257Lnjh5vJ53J
      EIlGefATdzFnZgt//68/O++2lh+Wzepse3c9V37sBiRFYse7G0iMQ+XSsbLZFCoryujo7L4k
      riLEPYDz6A9FuHnhlcSVk5eQpmWR0WK0FJdTX1RGa3gAh2KjpbiMSr+HCn8xndGRZ7aMlc/p
      IvRBGysuk+mfEyQkrr92Frp19kt93dDwu0tJaXE+nKPhsPuIpgbImmli6QguZwDZCGJaJzeX
      N02TaU0N7NjZyUA4emYD5+ufJOFwqJNi+8GsbpDRssTiSbp6+jhw+DhrN+1g7cYdtB7vpLS0
      gENHO1i7cQf1NZVMm17N3/2/n7Ls/Q1D21tC7j058edUpmmSTKXRDYODR9pYvGwTK9fsYfuu
      A0Duim/v/jYqSmopLHRy+03XkslYfLBtF2lNO+09jieSmJZFwO8hGk/QVF/L7v2Hh9p3jXAT
      mr6efnav3c6uNdvOmP+faKZpkU5nCBYGxqWk9qnOeQ+gqg4rERcB4Hx03cCGQvPsatKnpIEa
      lkEsHUGRJeZW1uO0yXRHuxhIRvA7/XTFRz/wjIbDbkc/GOLN3y+55G9GfVgkGue2G65Cdgw3
      12vhchYQ8JTh85QhS7krBptsA9lBMnPyrLDAHaCrK0xpsBSH6kJVPXhcQeyqTjRssXPPEfx+
      LxJn1ug5V22byTD4n08snmT9pl0cPHwcwzBIZ7K88sbyM0qR+H0e/vybjzN3ZjNXXT2faCRG
      MpnC487tcXzqQsAZLfV8/Y+/xNq1HwztURCJJVi1bifvvreFFau3snHrLkzTZN6s6bk1MKcE
      Gsuy6A9FOXa8k6yWpWdwrYCiyNjs9hHte3DieS5mcsZoUocNw7goiQbnCgBIEpLXL6aARmLl
      ui1cd+NcFI+CYZ0+MPREu4mlIjgdheiDdX1CyX7mVdTQn0jQHj33JfRYOOx2Km0+fvHqq5fE
      ZeRozWiuw+U1OVeRi3CsA5fDT1LP1a9RbV5Um4oiQXmgjq7wscEjLY4fD1FWKmNaCUzLRDcy
      OFQ7NltugM9qOk0NdRw4fHSoCuhV82Zw8y1z+ff/fPGSmY+dSJqW5Xj72efcJUnC5rDhbyij
      T9a4+bG78WRlAm4Pb/52EZs27Rg69uqr5nCIGNdcfyXLlqw+7Xl0w6D71N3Nduw566CZSmdy
      Uzm79w99zzDM0wJFPtTVVPDRO66mfyDKG4vWjGgzmuGMtgTFRH/mrI7cXhiiGugIpDMar736
      PiWu4LDHSJw8m4ym4xwfOIZkJZhbXkljUSlyHispVrgDvPXLdy751cBnUxTw8/iX70KTht+H
      V5HtBAunYcouEpkoiUyEUKKb7kgbupVb9AW5DV+wTOrqCrEsC01PoRu5qzTTypWxBkil0+za
      e2Bo8K8oDfK5h+5m1pUBpjXVje8LvkxVlBVTWVEKwO03X81hW5IPoh20hvtoj4Q4mB5Adaok
      YyenMWRZorC0iK5ohIZ5jSjyuYcX3Th7MoWu66QzZ09s8Hjyk91VXBTgr77zOW67qYEH7l/A
      ow9/NC/Pe7kRVwAj1N7ZAwkJST7zDr5H9RDKnDmdkdBSJLV2qgrL8Kouopn8zPmZGZ3WMeS4
      XwpaGmpwF2ik9XOX4Yilw/RGTl/bYGHRHWlDkW0U+ypw2x0oMtTVlmKaJtlEZGhDecMwaGwo
      PuO57TYb9911E47iOEktyaxZtew7eDSvr/Fypsgyn/zEHbTcMIdQNkX3ugNceeMC1kbaTjvO
      rTro2nv8tGk0SZJQ7DayRgq1LMDnnnyQl599PW9n7s0NNYBEW2f3sEUcR6q8LIjXm1vJa5oW
      M1qqkKQxrwm7bIkrgBHqG4jw3P+8TXG2GJ/jZIqhLMmUucpJaWdfyGRhEUsn8Dtd5z0jGjFb
      7ibl5ejKBS1kzfNndpzYXOfDHHYXDWWz8NgsYvHjhKOtGEacpDaATXaccpyDvftOTmk4VDvz
      Zjbz9GOf4sqbK4lnBihwFVHg9134i5okFEXm3rtuounGOWwPddAWD1F8Qwt7MmfWucpks6QL
      VfyFfmQ597OSkDCV3N+PhfrIVrpZeO38vPVv7owmrrt6Pjdee+WIjlfttpOrfT/k8LEOjhwb
      IJfdLbN24768D/6SJOF2OYf+fikSN4FHoW8gwuaNuymSC2iqrkW36eimjiSDTXER185+hq/p
      WUp9PpqD5XTHYhjWhaWIBhQXG5dvvixvVN5/zw0UFMswtApTGvrvBAsLh+onkT49UDhVFwF3
      kJ7QUSxJxesuxSbLWJaB2xEgnupBkiScqo/du5I8+9ulGEbuvX78kfu576FZuIIayWxufYEq
      +fj+D14lM467g10uGmoq+OqXH2T2dfPYNtA+VIIklkmT1s98f0zLImZlqZlVx6zGBjyKimUY
      zLt5AT2D9YFMy6LU7WP7pvykKR843Mq8mc109w7Q1tE17HGSJHHVvBl855uP0drWRc9ZUlmz
      WZ1NHxwgHDVYtnIX763YdEHz8oEC3xlVcVW7HVVVURQ5l/tvjrTkYX6c8ybwIDEFNErxRIqX
      Xl/KijUf8KVH7qOw2kWxv5SNrXuHfYyFRVuoi5AaocznpzU89joziiyTiSTzuufsxWRhpzut
      4rB5cTvsnFixIwEeJYtlpZGQ8Tq8tFRejW5kSWkR0tkYiqTQH+0ALKLJfqLJfuqKmxiIHCaj
      JVDtdro6FF57YzMbPtgzFCDdLicz51QRSZ2cUpIkiUMHey+7zXfGy8fuuolIuZP2/razDvhn
      Y1kWvYkYtjKV+fddw7UZOJI+mf6c1XUKqoN52yPZME1+9cKbtDTVn/O4j33kem689Sr+5T+f
      5djx4ReThaMx3nx39bD/PhqxeK5q8KzpTezaexA4++YxZSVBunsvnTpTIgCMUW9/mB//9CW+
      9fVHiLjDBFw+QqnhUz9lSSKZTVPnK72gAOB3udn8zsYxP36ifbB1DzOD9bRnzpwGUm0qLruT
      KyobCCU7sYig6XEC7jKyWopY9vTBWpYU9MEaQrJscvwY/P0/vXDGYKPrOpmEAYGT37MpCl0d
      Y9/DYTKpLCumoLaU7ZG+MaVO6oZBa2rwvfzQxW3KZjJrVgtbtuRvseLR1nbKSovpPsuG9gCH
      jrRhdzpp7+w561m92+UkleedzU6cbOzed+icx526F7XdZsPn9TAQnrjPoQgAFyCeTNHe0YOv
      yE3QW3LWAFDhL6LS6wUMZFmlNXZh0w1u2U5nx/AZNJe6xcvXM++aaUiqdMYeAJqu5bYeTPQS
      SZx8jaZp4XUFyOipoV2tTshN+bjZsC7CL59bfNYzTS2r09raR22hMrRhjNflZ/2G4XcJKwr4
      SWc0kqnT7+243a68pyNOBLtNoaayjLqGGubdOI+92fC45M13R8MsfOgmqpuqeO+tlWN673xe
      N7FTqnpms9lzzqnvO9RKR3f/sGsGPvwzzafzBZVQ5OQYkdX1CR38QQSAC5ZKpgnIvlxRnrOo
      8HoIDe5Xq9ocWFbpmNtyqirdO9ro7Lx8A0AynWH10q3c8Kl5DKRHtolOWotjmgbF/mp6I61D
      3/c4C0hlIqg2J28vXkYiefZfbJ/HTU1tENM6+b4lIhKHj7adcWxNZSnxRIoZzfUca+86Y7C4
      3Af/+bOnsfCauXiDfqQiD11anP3p8RuETNOiLRrCO6ecT/jv4Xc///2oHi/LEo89fD89/SFe
      fOM9qivKOdLaRlf3uYsxDpcirar2087CJ0q+psUulMgCukDZwYVYsmRiUxRKvUWUeovwO73U
      FpYjWycHEMM0KHC5cNpVxpITUObys/zt/MxZTqS1m3Zg9UnI0pkfvxJf0Vljqaan0PQUxf4a
      7IoDu+LE6/CiZRNkslHuvnP4bJM7b7kad4nGifUDNkVh59aOs54hypKE06GyZtP2XOrvJFFS
      FOCB++/kts/eSXeFnf22BPuiPUTSF6dOTjydJtBcRmNDzagyYkzT4tkX3mTOzAa++80vo2U1
      gkWB8z9wGC6nE5tNGfPj82XCB/9AEOWqG0QAuBCSJFFZW0IymyKajDKvooWsqWFYOlWBEmKZ
      ODoyJ250GqaO0+jmxio/M0orRtRGkcdHrT9IU6CUncu2EZrgS8Z8SKUzLF28nhL36QvrZEmm
      obCQaOLsGR4ZXaczBX1GEXZ3I+l0H2CR1XWmTysZtr1gsADNPDnQeV0+Vq/ZfdZjj7V309lz
      6dyky5cbr11A023z2Z/sm7DdzjoTER76+kPMnTt9VI8LRWL87T//nJVrtqJpWfoHxl5nKxKN
      XZar5/NNUlXM9mNiCuhC2G0KwdIC2q1uIukoxUaKaCq333AomZvrO2jotBRVkUz1kDU0EpkI
      ZCJUFUwjnA4MWzQu4HJTYfOzbcU2du/YTyrGxbJZAAAgAElEQVSdpn/g8h/8T4gnkthl+xnf
      N0z9jN3XAFzOAEeiFn2JXCZPOBXn2rIC9FRq8Iph+LPKnbsPc8WN15M1ctMG2aTKwcOtwx4/
      GQWCAQ4MDJ86eTFkDYM9oS6uv/s6Dh48NqrptHRGY+nq4e/ZCGMjAsCFkCRkRQYLqguraA/3
      n5Hnm9TS7OrpoSpQTKFbIZHsIWtkCEcP0hSoPyMASJJEucvPzkVbeG7tlqE89slmIBxDOsuJ
      mCydenme27HV7SikX3PSlzhZ2TGeSaJTjN1mR7b8vLp027BtdXT3QsaRq/Jpd7BjU/tlV0Dv
      QkiShNfjIjqmicf8yuo63S6Jhx//NLtX72Dd5u0T3aUpTUwBXQCbLOcCAKAqDiLpYcobmwbH
      BrrZ2dODz1sO5Ia2gKcAj+o47dgyXwGbXl7LmlWbJ+3gDzAQjmLEzDMWgCn2AHbFgVP14fQ0
      4vNUk6KAQ/2nl/UNuHz4PH62bE7xZ3/5Em8u2jBsW8c7evjNcyvoP+pg2Zvt/O6F5eP1si5Z
      Poebev/wtawupkw2S7bUScvMponuypQnrgAugMftwhoMoYZ5/nlFr8OFpuWmhuw2F22hbsp9
      gdMGN49k59ChY8M9xaSRSmcY6Iqg1qpkjJN1XTKGhd9TSUc8w4HuI8iSdNb0xKaiIKpNZceu
      Drp7z11x1bIsVm3YzqoNU/Ns07Isjnf34K10nP/giyScSiKlL++MqslAXAFcgMa6KtK2DIXu
      AKHU+VeUKpKCzV5C0D8NWS3HlFTaI6cPXlksnE7neHX5krJt+z4K7L7TsoH64iHWtLVzoD83
      Xz1cbvqB/l72DUTo6Jo8pUbG0wdbdqKaEz8FdIJpWVTWlOevPpYwJuIK4ALMmdNMRItR4ivl
      UF/7eY/vT4TpT4TxOb0guTkW6j9tMZQiy2ihJAOh8d9N7FKwZtMOZsxuZOa1MwglB9CMLHEt
      TdY4+wKeIrcPt12lLdJPLJOku6OPo63nf98FOHq8E1dEQ5bPfkV1sZmmiVWgoqoqqfT4LcwS
      zk2E3zGSAK/HjarYSWVHntPrsKnIioejob4zVsKWqT5e/cUbI9716HKXymg8/+JiBvqidMXj
      RNJZjofOvoVfwOWl0S9TX2DDZXcQkL08+5+vXBKLei4HyVSaLeu3U+b2T3RXgMF1k1mDrD41
      PuuXKhEAxkhV7RQEc2WhP7zV4AluuxOP3TX0tYREc0kdHrsDh+1kCqRNUbijYTadm4/SMwlz
      0M+lLxShc28npmEOexMdIJ3N4nAEaY/nqiyue3sr3d1T6726UN3dfQS4NMqIK7JCrCeCLgLA
      hBIBYIwkScJmt1HgLmAgefb8/Kypoxknz1BtikJK0+iJddNUVESVvwiA+mApWneCJYtXXZS+
      X0osy2LJ8nWU2wvPeVxaz7Cu9SjtsQGSrQk2rJ+aN3QvxKHWDpzp0zOvzkUCXKpKiddPfUGQ
      Urcvb3P2TrudjsOX56ZGk4m4BzBGmpYlGU2hFqq4VSfR9Jk3gT88l+20O4hrSUzTJJKKIMsK
      s8qqsfdn+ft/+9G4Fqm6lB1u7SAzkEJ2n3t+2m6zYXbq/Ppnr4vVnGMQT6SI9oVRghL6MOsg
      JKDE4yeQtaFFkhzZdozdh48TGojQ3FjDjLktFNaVsid5snKoIsmj3uOiyO5m+bbhS6gLF4cI
      AGPkcKh4fC76UiEKXEVnDQAf5rI5SGgpCl1+opkEcS3FrKIGfvLT54jGhp/+mOxcDgdOrxPL
      OPvNb0WW8Ts9dG7r5pUXlogNXMbI5XTgLvBiWqdXrT1Rm0eRZSpwseq55ew/cATDME+rbtnd
      28+aDVu5986bqL9tLodj/UwLluGQbOwYQRLECaVeP2tfeJ/es2zUIlxcIgCMUVlxIYpXwcga
      w24792E+pxvdhJ7EAKZl4XW6ePu1ZezYtW+ce3tpiydT7Nl6iNrrawlrMfyqFylmYpkgO2T6
      20Os3rCJzVt2Y05QHZvJYEZzHXKxF3OwpIjX4aRIsxHu6Mem2FDtCm+/9TbHz7GJimXBoqVr
      ebKhmvrGYrzdKZSqohH3QZZllIEMO/J49u/3eYnFE3mt7z9ViAAwRtNb6olJCYq9xXRFR3Yz
      sj8VodwqJNkVRXIpdOzoZNHbK8e5p5eHl157j1v6r8Rb6GXJ1lUcPdaOYZoosjxhxcsmm517
      D+F/dQULb72KjAIHN+/njSVrSY1yg3XdMFi9ejPNvY3UzGoh6PCxXbGRGSZ991QBl5tt727M
      62B97503YSkyv39tscgKGyURAMbA6VC57vp5dKf7qHJ5SesjSwMNJ2K4fQ5efmkxvX0hccZy
      Ci2bZcny9Wd8Xwz++ZPVDd5fvZlV67YgSdIF3UfZtusA8XiSW6+9kn17DlFX5OeAETojtfnD
      vLrC7p37x9zu2Wzdvpsn/+QRBsIRVq3aNOqANpWJLKAxaK6vRi2y47Q7SGVHd8YRzSaYPbtZ
      DP7ChDEMMy830Y+2dfKXf/d9/u0//ofDa3dR7Pae83hZkjASWt4H6H2HWtm2cjsPf/Ierpo/
      O6/PPdmJADBKkiRx10euo0fvx626yIzw7P8Er+xm186D49Q7Qbh4DMMkGk9gWhb7Dh6lRHIi
      n7LZi3uw0KEEBD0+mnzFdO4/cxe2C2UBi5evozcbZeGdV3DbzVfz8Oc+jt0uJjjOR7xDo2RZ
      FrFoAp/kIamlcDuG351IkiScNhUkcNucqEmFla9spEdkPwiTzP7Dx3nnf9/m+tuvxVHmR7dL
      GK0RWhoqiCdSrHhhBe3HOxkIn7lvdj64XQ7iWpqoK8u0j83BHrMwJ3E13XwRAWAM2jt6mL9g
      Bk7VSWds+Lo9DtVOYczHpnXbaWvv4cjRNjE/KUxau/YeZtfew/g8bmZNb2Tbrv20NNbQOxAh
      FI6O2zaIqt3Gg5/+KO1aGBOLQtnN+0tWi/tHIyCmgEZJlmVmzmggpadw2J3nnAKyKzZWLN/I
      u++tZffeQ2LwF6aEWCKJYRj4vB527DlEf3+Yp7/0ID6vJ+9tSZKELMv89oW3qTC8WJLF3vX7
      2bRxR97bmozEFcAoOVQ7JVVFxNU0BU4fEtIZmQ/1hRXoaQPFkujuEvVqhKln++4DfP3pR+hN
      xSGVxVnkH5fEh9tvWsiNd13L4R1HUB12vAk7Ly1em/d2JisRAEbJbrNRUhCkyq3SZ8TOmvaW
      CKV467llHO/oJho7/wphQZhssrpBNBLBaAgQz2bwFdhwu1zEE8m8tVHg93L1LQs4Yg1Qf30z
      u1ftZe36bSRGsdfwVCemgEapurIUd4ELM2uRyJz9g+YKOvnWt76CzSbiqzA1WZbFju37KXF4
      sLBQEwYD4bMXTRwLWZa4/earCbt0bLLCpiVbeP7lRRxvn9iN7y83IgCMUmGBn2QkTW+y77SU
      t1Olkxn+9d//h4FQ/j7wgnC52bnvEEZnhJn+Mna8vzVvpZ89bicPPPBRqm9oJKwlCBoulolp
      nzERp6ijdLS9kx6tn6ScpMBWdMY9AEWW6Ts8wM7dItdfmNoSyTQ//fFvcTodRKL5KXZYXVHK
      A1/6OCG3Rn82TpHmZMOKzWR1UQJiLMQVwChIksTd912P5k2RNFN47E7sg9M8EhKqzUa5t5i9
      249McE8F4dKQ0bJ5G/xLigJ8/sv3060mSWoZitx+3ntpBSvXbEYsrB8bcQUwSlpCR9cNUuk0
      0XScrKGjSDIBtx89kuUX//ESnV29E91NQZh07r7jehJ+0BMGsiRhS8GxVrGpzIUQVwCjcPX8
      mSy8aSaxRJJCZyEBRwAZCcMyiWRixHoSdHX3ijo/gjAO9h88hqtHZ3phJVW2AK//zzvjtrhs
      qhBXAKNwpK2T7gMhnFVOFFmmK9k3tBOSrhv4mzx8408f4af/8cKU3d1LEMbLxq27qSgrIbVF
      Y/3m7SLFOg9EABiF0mCAkpYCjsc7cNgc9MROr+kTTSWorChBVVURAARhHLyxeAXmMNtZCqMn
      poBGoba6AtOpY5gm1f4qtA+ltRW5/Cx7cR3hyPgUvBIuPbIsUVxUgCoqT14UYvDPLxEARkFS
      ZDQ9i8fupjcVOS390+VwsH/VEdau2TqBPRQuNrfLyVNf+CRf+cy92GzKRHdHEEZFnLaMwoFD
      rdwiXYHP5eN4qBPDzG2qIcsyJbYAr29eOsE9FC62ZCrD868vJavredlkRRAuJnEFMAoDoSiK
      qRBJRZhWWofDpgJQ4g3w2x+/RZtYhj7lmKbJgaNtHG0TP3vh8iOuAEYhmUoTGoghuS0yRgKb
      YiOja8imzMDA8GUfaipKueXa+UTjCd5Zvp6sOFMUBOESIK4ARkHTsvR2hHGoKtFMlCp/EbPK
      6ykrKuKaq+cO+7jS4kKqK0oxDBNTrBEQBOESIa4ARsEwDI7u7aRsRgGWZNGX7sHlcCAZEgsW
      zuCtRSvO+rjNO/axa/8R0mLRiiAIlxBxBTBKu3YeRAsbOBwqLqcDRVFIpTMUFwdwOtRhHycG
      f0EQLjUiAIxSR0cPHyzei0d2DxWCS2c08Et89kv34nG7Lko/5s5o5O5brsbtcl6U9gRBmHxE
      ABiD95Zv4Bf/35uQVNCyWex2G7KkUDarmG//1WPcetPVzJzWhDTMfgH5cOBIG5IkccNVc8at
      DUEQJjcRAMbAsiz27D3Er37wFqkOnWJ/AEnJMt1fR8e+Hnbu2s/ho8fHtShcOqOxZNVm1m/Z
      PW5tCIIwuYmbwBfg0KHj/Of3fsfs2c1U1ZQyc2YjP/+flzGMi5PmaRgGsTzusSoIwtQiAsAF
      0g2Dbdv3sW37Pt5dtPaiDf6CIAgXSkwB5VG+9jwVBEG4GEQAEARBmKJEABAEQZiiRAAQBEGY
      okQAEARBmKJEABAEQZiiRAAQBEGYokQAEARBmKJEABAEQZiiRAC4SJwOlS9++m5qK0snuiuC
      IAiAKAVxUbQ0VJNIplm65gM6uvsnujuCIAiACAAXRXfvAFpWR8tmKSkqwON2YbfbOHD4OGKD
      SEEQJooIABdBNJ6kvKSIO29eSE1FKYlkmu17D3HgSBuIPYIFQZggIgCME5tNob66nHgixYJZ
      zbhcTipKguw+cJS3l61Dy4rCcYIgTCwRAMaB3abwqY/eTH11BaFIjNaObnweF9v3HkLXDbK6
      KBktCMLEEwFgHCiKgt/nIZ5Mcai1A5si8+vfL8Y0zYnumjDJOFQ7GS070d0QLlPjGgBuuX4h
      C+bMGM8mLkmyLNNSX00knuCumhpa27upqamZ6G4Jk1BFaZBQJE46k5norgiXGIeqcvhY27D/
      LpVXI82/5f5xuws5npuiC4IgCOc27L7kigIu9/heAYznpuiCIAjCGBkGxGNiJbAgCMJUJQKA
      IAjCFCUCgCAIwhQlAoAgCMIUJQKAIAjCFCUCgCAIwhQlAoAgCMIUJQKAIAjCFCUCgCAIwhQl
      AoAgCMIUNaEBwOV0oCjKRHZBEARhyprQAFBTVYHX45rILgiCIExZYgpIEARhihIBQBAEYYoS
      AUAQBGGKyvt+ALOmN/PQJ+9BAn7z8ptEojGefuzzmKbJD/7rVwyEI/luUhAEQRiDvAeAO26+
      jp/96gUURebjd9+GhMRPn30en9fDx+++jV89/2q+mxQEQRDGIO8BYPX6zfzdd7+JLMt87wc/
      4/577qCtowuf18Mdt1wHwBOPPoRDVSkKFBBPJEhntHx3QxAEQTiPvAeAj9x6A9/5m3/C0A2+
      +sWHyGZ13C4XbrcLPasD8NNnXwBgWlM93b19RKLxfHdDEARBOI+8B4C29i4e/oOPI0kSR461
      cbS1jW9//TFsNhu/eemNfDcnCIIgjFHeA8DvXnmLspIgAF09fQC0tndimiZ9/aF8NycIgiCM
      Ud4DgGVZQwP/CT29/fluRhAEQbhAYh2AIAjCFCUCgCAIwhQlAoAgCMIUJQKAIAjCFCUCgCAI
      whQlAoAgCMIUJQKAIAjCFCUCgCAIwhQlAoAgCMIUJQKAIAjCFCUCgCAIwhQlAoAgCMIUJQKA
      IAjCFCUCgCAIwhQlAoAgCMIUJQKAIAjCFCUCgCAIwhSV9x3B7r3rVma0NFLg99Hd08eiZat4
      6kufxQK+/5Nnae/szneTgiAIwhhI82+53xqPJ/7qIw+ybuNWPnLrDTz30uv4vB5uu/FafvHc
      S3g9biRJormxlp7eAaKx+Hh0QRAEQTiHvF8BAHg9bmqqKvj5r1/k/ns/Ql9/iExGw+N2AfCJ
      j96OardTHCwkGouTzmTGoxuCIAjCOYxLAPjUvXfy+jtLsYBUKk1hwI/P6yWVTgPwm5ffBGBa
      Uz3dvX1EouIKQBAE4WLLewBwqCr1tdX874uvA/DOeyv5s2eeRJLghz9/Lt/NCYIgCGM0bvcA
      TqXa7VhYZLP6ad8XVwCCIAgTZ1ymgD5My2YvRjOCIAjCKFyUACAIgiBcGiRFRnGpqMVeEQAE
      QRAmI9lhw17gxl7owRH0oga9OEr82AvdKE4VEFcAgiAIlz3F48BVVYirughHsQ97kRe7z4lk
      U5BkCcuyMDUdI5Eh1R5G64uS6Y2JACAIgnA5sgfceKdX4GkoxVVdiKzmhnMra6D1x4kf6EIb
      SJDpi6H1xtDjaYy0Bqek/YgAIAiCcDmQJZwVAbzNZXiaSnGWB5AkCT2ZIXm0j9i+TlJtA2TD
      idMG+XMRAUAQBGEcyaoNZ1Uhdp8LU8tipDTMjI6e1LB0A8swsQwLyzDOGLhlhw1XTRBPQwne
      aeXY/W4A9FiKyLZWYns7SB0fwNT0s7R8fiIACIIg5JsErqoi/LOrBwdu11kPs3QTM6tj6gZm
      RsfKGhgpDSOTRZIkXDVBbB4HlmWh9cfpX3uA+IEuMl0RLMO84G6KACAIgpAnarEX34xK/LOr
      UYNesCwy3VEG1h4g0xdDdthRXHYUhx3FpSI77ShOFdlpy32t2lA9PiSbjCRLZHqi9K/ZT3x/
      F9lwMu/9FQFAEAThAigeB75p5fhnV+OqKgJFQo+m6F99gOjuNrS+OFgjnJSXcnn6kiyDBGZm
      bFM7IyUCgCAIwihJioynqZSCuTV4GkuRVRtGJkt4+zFiuztItQ2MbYrGyk0LWVz49M5IiAAg
      CIJwHpIiYy/y4Kkrxl1XjKs2iOJSsXSTxOEeorvbSBzsGfPN2IkiAoAgCMKHyRJqkRd3bTA3
      4FcWYvM7QZIwNZ1MV4TYvk7i+zvJRlIT3dsxEwFAEARBArXQi6umKDfgVxdhD+R2LrQMk3RX
      mOiedhJHekl3hjHTk6PApQgAgiBMKbLDjs3nzNXGKfahFvtwVRViL3AhyXLuDL8vRnx/J8lj
      /SRb+8b9ZuxEEQFAEITJRwLJpqAG3KjFPhwluYHeUezD5nUiO+y5GjlmbgGWNpAgtPEwyWN9
      pDvD6InMiFfTXs5EABAEYdJw1QYpmFuTO6MPuJHtJ4c4M2uQDSdIHusj0xsl0x9H642hhRJY
      WWMCez1xRAAQBOGy56oNUnzTdNx1xUNn9IlDPbmBvjeG1hdHCyewdHPkOflTQN4DgNvl5OuP
      P4KiKCx5fw3H2zt5+rHPY5omP/ivXzEQjuS7SUEQpihXTRHBm6bjqS/BMgzCHxxhYP2hcVk1
      OxnlPQDcd/ftLH5/DVu27wbgDx/7PD999nl8Xg8fv/s2fvX8q/luUhCEKcZVG6T4xmm4G0qw
      srmBv3/tQfTo5ZuSORHyHgAa6qqZMa2RB+67m7ffW0GB30dbRxc+r4c7brkOgCcefQiHqlIU
      KCCeSJDOaPnuhiAIk4wkSTirCtlqhWjTY5hZAw4OcGNBNa6qOfDgnInu4mUn7wEgFk/w8+de
      IhSO8N0/+RrJZBq3y4Xb7ULP5lKpfvrsCwBMa6qnu7ePSDSe724IgjCJuGqKCN44HU82jmWY
      RLYdG5rq2TfRnbuM5T0ALF21jm888UXaOrrYe+Awh48e59tffwybzcZvXnoj380JgjDZSLkC
      a3a/G7XQTcG82lOmeo7Sv2Y/eiw90b2cFKT5t9yf91viRYECvF4Px9s7sSyL0pIgpmnS1x86
      7ThxBSAI40ACNejD7nOihRIYSe2SrFEjqwqK24Fa6EEt8aEGvaiFuc3LFacdya4gSRJGOkt0
      53Fxc3ccjEsa6EA4clq2T09v/3g0IwjCKRSPY7AWfRWuqkIkWcayLIyUhh5Lo/XFcimR/TEy
      fXG0gTiYozj/k6RcLXu3A5vHMVTPXpIG/12WkRTp5OGKAtKJh0qDZY4l7AVu1JLcgizFrSIN
      PoFlWRhJDa0vRiKcROuLovXFSXWEMJLiPuF4EOsABOEyJjtseBpK8c+txttUBrKEkdQIb20l
      3RFCLfKiFntRgz68Lbma9dZgHrxlmGQHEmT6B/PkQwkkWcoN7m4HNq8DxeNEcdmHBnzkUwZ4
      SRquW8OyLAsznUVPZEi1h9D6BgNSf5zs4NWKcPGIACAIlxlJkXFWBiiYX4e3uQybx4GRyRI/
      0EV0VxuJI71n1q6RJBSnHZvXiVriwxHMTbU4Svx4GkvxTa/IbUJCbpDO7VNrYukmRkoj0xdD
      j2cwkhmMpIaR1NATaYx0dmhhlWVap11RWLpxspqCYebKLpgWZiaLqRliQdYlQAQAQRglxevA
      UeLHcaLGTJE3N32RyKDHM+jJDHosjR5P576XyGAkMhfcrlrspWBeLb7pFbk2DZNUe4i+FXuJ
      H+g6943RwakgI6WR6Y0SO+WfJLuCvcCNvcCFZeReh5HJYqazl+S9AyF/RAAQhGHILjtqgRtH
      eQFq0Iez1I9a7MPmdYAkIUkSZlZHj2eQJAm5rADZYTvtTHrwL1iGmQsEydx8vKnpuWJjsoSk
      DM6PSxKSTQZyX58oaCZJINltqIUeALT+GH0r9hLd1YY2kLjg12lljdxUTF/s/AcLk4oIAMLU
      JOcGW8WpYvM6sPtd2HwubF4n9kIPjpITVSMHf0VMCyOdReuPEz/YRaY7SqYnmsuySeXmrWW7
      DdlhQ3Gr2DyOwZucDmw+J3afE2Xwe46gb+jmKJDbBpCT8/KYg1MwFliGARaYKY3wsV6iO9pI
      dYRGd/NWEIYhAoAwqTlK/TjKC3IDvMeJzZf7k8tkUU+rFnmCqeloA4ncQN8TI9MbReuLkY2m
      zjnwmpksZiaLHk1xrgkfSZFzZ/gMXiUMzo2LOXHhYhMBQJh0ZKcdb3MZgQV1uGqKhtIhLd3E
      1PRcFko0Sbp9gGwkhR5Pk42mME78P6lhmea41YM/cYNVECaaCADC5CBJuKoKKZhXg3d6BYpL
      xczoDKw7SLK1Hz2WHloQJW5sCkKOCADCZc3md1Ewpxr/nGrUYh9YFqmOMJEtu4nt75w0e7cK
      wngQAUC47MgOG576EgquqMddF0RSZLLhJAPrDhLZegwtlJgS2/kJwoUSAUC4cFIuA8Ze4B6c
      azeGplpyNzdhMNXlvM+DJCHJUq7MgMOO4spl6cgOOza3iq3AjW9aOYrHgZU1iO/vIrK9leSx
      vtxuT4IgjJgIAMLISVIupbHAhVrowVGSy4tXg17sBW4k+fTSACdWlJqajqUZmLqBmTUGv9Yx
      MjqSBIpbRXaquTozTntuw+5hygyYukGmJ0rfqn3E9nSI0gGCcAFEAJjkJLuCuzaIp6kMm1sd
      yoaBwZxzyxrMNzeHFiwBYFpINhm12I+jxIfisOcWJtkVJFnOpTvG02R6Y7kFSf0ni4vJqg1J
      taE4bEh2G7JdQVZtyOqJ/9uQbEqutgwWekLD6ItjpDTMlIae1Ab/ns2tXtVOmcc3GVxEJeZ4
      BOFCiQAwGckS7tog/llVeJrLsPtcJ1eljtKJnPhUeyhXtKs3htYfR4+lzqw3IwjCZUUEgMlC
      lnCWFeCbWYl/TnVu0DdM0l1hQusPEd3TkdsvVWJoEVKu3IA0VKoXGCxFkHs+K2ugx9Pihqog
      TFIiAFzOZAlH0IdvVhW+GRWoRR5AItMbJbTxCPH9nblpmVMHcIuTU0DipqkgTGkiAFxGJJuc
      q1fjc+KqLMQ/pxpHiR9JltDCCQbWHyK2t5N0Z1jMkQuCcF55DwAzWhr5yhceoLunj2Wr1hON
      xXnqS5/FAr7/k2dp7+zOd5OTgmRTUJz2wb1QXdgLXNj8rsG/u7H5Xdg8jtM25MiGk4Q2HSa2
      uz1XIEyM+YIgjELeA0BjfQ0vvbaIzdt2Yhgmzzz5KN/7wc/weT3cfftN/OK5l/B63EiShMfj
      wpv0YE7ByoaWZaHZwDurEm9LOWqRF9muDO2DCqBIEnZJgaxBNpIi2xpGj6bIRlJk+mKkO8NY
      uoEN8Hk8E/uCBEG47OQ9AITCEW645gruv+cOXnx9ER6Pi77+EJmMhsftAuATH70d1W6nOFhI
      NBYnnbnwzTIuFza3A8+0ctqUNAdjfeiWSTaWItU+kNvQI6FRYHdS7PDgtzvx2x04FBvgyP1x
      F4IbqADmTuxrEQTh8pb3ALBp6y7WbtxKoMDP4488SCqVpjDgx+f1kkrndiz6zctvAjCtqZ7u
      3j4i0Xi+u3FJkR123HXF+GdX4S0pQ060oiczJI/0EtnZRuJwz2llhruB/RPXXUEQpoi8B4B7
      77yFmdOa8HrdvPb2UqKxOH/2zJNIEvzw58/lu7lLlqRIOCsKKZhfi7elHJvHgakbJI/1Edl+
      nMThHlGoTBCECSXNv+X+vE/A2+02sCCr5xYKqXY7FhbZ7OkLhybbFYBkk3GWB/BNr8A7vQK1
      0DO0b2tsTzuxfZ3n3rdVEAThIhqXNNAPD/RadpKe6UoS9kI3nvoS3HXFeBpKkJ12MC20gTh9
      K/cS3dV+Zi6+IAjCJUCsAxgl2WHDXRPE01yGuzaIWuTNrZo1TFJtAySP9hE/1E2mJyr2bRUE
      4ZImAsB5SIqMo9SPp6EET2MpzooAsmrDMi20/hjhD46SONJLsrVP1MYRBOGyIgLAh0lg87mG
      pnTc9SW5BVgSGIkMiSO9xA92kzzWR7Q/sRkAABUjSURBVDacFCtuBUG4bIkAwODN24oA3qYy
      PI2lqCW+XHE00yLdFSay9RiJwz1keiKYmjHR3RUEQciLqRkAJFALvbgbSvDUF+OuL0Fx2rEs
      Cz2aIrqzjeTRXuKHRKqmIAiT15QKAJIiU3zrjFzphUIPyBJmRifdGSZxuIfE4R60gbiokikI
      wpQwpQKAo8xP4cIG9Fhm8OZtD8njA+IsXxCEKWlKBYB0R5gD//IOli7m8QVBEOSJ7sDFJgZ/
      QRCEnCkXAARBEIScCZ8CqqmqIFCQmOhuCIIgTDkTGgC6e/u45fqFAHg9HrweN109vSN6rMPh
      oCRYRFtH54jba6ir4djxDkxz5NNAzQ11HDxybMTHFxUGsCyLUDgyouP9Ph8Oh0pvX/+49Wks
      j6koKyUSi5NMJkd0fEkwiJbViERj49YnVVUpLymmtb1j3NoY7fF2u52KslJa29pH/Ji6mio6
      OnvI6iNPPhjv1zHa37+xtDGWx4z2+GBhIaZljvj3byxt2Gw2qivKOXq8bYSPkGhuqB1VG5Xl
      pYQjMZKp1IgfM9rX4XG7JzYARKJxXl+0HICmhlpaGut4572VI3psWUmQW65fOPT4kXj8kQdZ
      tHTVqDag+frjXxhVG9deNR/DMNi0deeIjp89o5nS4iKWrdowbn0ay2Puu/s2du49wNHWkQ1s
      t95wNQOhMDv2HBi3PgULA9x9+42jesxo2xjt8YECPx+/69ZRPeaLn/kkS1asJRobeRXc8X4d
      zY11NNXXsGjpqnFrYyyPGe3x1y9cgJbNsnnbrnFrw+tx88An7h7X1/GJj97O9l37ONY28pOd
      0bZRX1sl7gEIgiBMVUp53fS/nuhOABiGQTQWH/FZkWmaxBJJQuHoiNtIptL09g9gjaJ+TzKZ
      pqdvYMTHZ7P6qC7ddF0nEo0Ti4/8Psho+zSWx6QzGgOhCJo2smkKTcsSCkdJpUd+dTXaPpmW
      STyRZGAUl/ejbWMsfUokkgyERt6ndDpDX38Iwxz5gsPxfh2GPrrfv7G0MZbHjP73L0soEiWZ
      Gvm+G6Ntw7Is4okk/aHwiB+TSKbpHUUbmYxGfyg8qlL6o/6ZG+b4bAgjCIIgXPrEFJAgCMIU
      dclMAVVXlpNMpjAti8KAnyvnzSISjZHRsjgcKtdcORenQ2UgHKGqoozZM5rp6RvAMM68jHao
      KqXFRcQTSSRJYsGcmQQK/PQNhKiqKKOmqpyS4iLsdjuxeILCgB+HqpLJaCPur8vlJFgYIJFM
      IksSV8yfjdfjZiAUoaaqnOrKMkqKi1AUBUmSuGLuLFwu56imCrweN36/l2QqjaIoXDV/Ng6H
      SjgSpa6mkqqKUkqKi5AkGbvdTmN9NSXFRURi8bO+L2fj93nxeFyk0hnsNhsLF8xBURQi0RgN
      ddVUlpdQUlyEZUFtdSWlJUWUFBeRzmgjnh4qLPDjcOTeX1W1s3DBXCQJorEETQ21VJQVU1Jc
      hGGY2Ab7EE+kSI9iOilYFMCmKGhaFqdD5eor52IYBvFEkmBRgAVzZpBMpkilM0iSRF1N5agy
      lgDqa6oIDz6mrCTIvNkz6B8IoesGpcVFzJs1nVg8gaZlmdZUT0tTHQOhyNDWqOcjSbkMoRP9
      qiwvZc7MFnr7+jEMk/LSEubMnEYkGkPTskxvbqCsJDj0OR5ZG9JpbdRUVTBrehPdPf2Ypjn0
      uxUKRynw+6ivraKkuAivx0M4MrLp1g+/v/W1VbQ01tPT249pWdRWVzCjpYn+UBhdN5g9o5ny
      kmJ6RpEJJ8syNVUVQ2001dfSWFdNT18/lmXR3FhHQ10NXd25rKbcmBAknhj5VKuiKFRXlg9N
      i01rqqe2uoKevtw08vSWRmqqyunu7cNutzF/zgzKSoL09o18mtlms1FZXjrUxsxpTVSVlw5N
      5cya3kx5WTE9vf04HCrTm+spKS5Cy+ojHq9Uu53yspKhz8icmS2UlgTp6Ru4NALA4198iKe+
      /DBLV67H0A3+6jtf50hrO1/9woMsX72B//PNp+js7iVYFCCjZXny0c8wEI7wyY99hNXrPzjt
      uZob6/jW01+hqaGWtRu38PkH7qOoMMCV82Zht+WSnmqqK5g/ZyZzZ03H5XLyzBNfJJVKjziF
      avaMFr75tS9RWV7Kxi07+MoXHsChqtx43VVkMhoOh0p1ZTlXXzGPhrpqqipKMQyTj9xyPbqh
      097Zfd42rpw3iz9+6lH8Ph/bdu7la19+GAu467Yb6Q+F8fu8VJaXctN1CykJFjJnZgtFhQGc
      DgfdvX2kR/DhuG7hAp556lFsisLufQf5xhNfJJ3JcP/H7qC1rYOS4iDlpcV85JbrcThUHA4H
      RYUFPPzp+zhyrI3u3vP/wt564zV848nc8x44fIw//cPHiERjfOaT97Jn/yGqK8spLQly7523
      YlkWX/jM/Rw73sFXH3mQ91dvxDDOn7J79+038Y0nHqFvIExrWwd/9syT9PQN8LlP38e6TVv5
      v9/+Iw4daeWJRz/Dxi07+PNvPsldt93IW4vfP+9zn/DtP3qMr3zhAV549R2Kiwr55te+REdX
      N5974BNs3raLv/zTP+TQ0Vae+vJn2X/wKNctnE82q/PFz36KpSvXjaiNv/jW1/jsH9zLy28s
      pqqijKe+/DA9fQM8eP9H2bP/EN/++lc52trGE49+hrUbt/LMk18kFIkiSTKd3edP31QUhb/8
      06f55D138No7S2msq+bRz36KSCTGJ+65g9a2Tv7wq1+grb2Lr3z+AXbs3kdTQy3VleX8wX13
      8e6y1edtw+lw8H//9Gnuvv0m3lz8PjNaGnnokx9Dy2rccfP1hMIRvvTwH9DV3cujn/kkLqeT
      GS2N1FVXUlleyv5DR8/bhs/r4S++9TS33ngNi5au5Iq5M/nYXbdiU2xcc9U8VLudO26+DtVu
      5+or5xGLJ/jWH36F5sY61mzYMpIfBUWBAr77rae4fuEClry/hhuuuZKbr1+I3+dl9owWgoUB
      rrliLkUBPzOnNVPg81ISLKKmqoIr5s5k2869522jtCTI//nmU1wxbxbLVq3nzltvYMHcmVSU
      lVBXU0V9bRWzpjdTXVlOdVUFfq+XW264Bl3XSSSSQycj51JdWc53nnmC2TOaWbF2E/ffcweN
      9bU0N9RSHCy8NKaAnnvx9aEPV2HAz/H2TpatXMeBw8e4Yu6s3I0QCfbsP0x9bRWrN2zhrcXv
      43I6zniu1rYO/uofvz8Ugetqq3h90VJ+9usXuOaqeezce4B33luJz+vh+VffZv2mrfzoF78Z
      VX8PHj7G3/3zD4e+rq4s5413l/HL517i2qvms23nXt55byUFfi8vvvYOr7z1HoeOHse0LKKx
      kZ2B7Np3kO/94GdDX5eWBHl7yfs8+7tXuPaqeWzetotFS1fhcbt47Z2llJeW0NHZw9adewlH
      RnZmu3XHHv79x78c+row4GfR0pX87wuvc81V81m/eRuLlq5CVVUWL1/N0hVrWbFmI9FojB17
      9o+ojQ2bt/Gj/35u6GuPx83i5Wv47e/f5Nqr5rNmwwe8u2wVsiyzbvNWotE4y1atZ92mbbQ0
      1Y2ojZVrN/Lfv34RAEWRURSZ91as5eU33iVQ4CeZSpNMpUkkc1cV//CvP+Zo60hzuHN++PPn
      2LB5OwAVZSVs37WPxcvXEI3F8XrcJ9tIpDjW1sGbi98no2mjykf/1x/9cmjgqK4sZ+OWHSxa
      upJsVsfpcJBMpYZeR3lpMeFIjOPtXezYs29Ez28YBv/0g5+x98BhAOprq1m9/gPeXPw+drsN
      m6KQOqWNo63tvPPeSlRV5bmX3hhRGxlN4x/+7b84ciz3/jY31rF05TpeeXMJhQE/pmWRSqVJ
      pXNttDTV8+pb7/Gr519l1ozmEbWRSKb4+3/5ER2DJ1ItjfUsXr6a5199m+rKcloa63h7yfv8
      7pW3qKuu4Hh7J3/1j9/HHMVN92gszt/+0w/p7Q/lXkdDLe8sXcn/vvg6zQ21TG9u4LV3lvLc
      S2/Q3FDLqvWb2bR1J5LEiK/yQ6EIf/29HwxdxTTW1/D2khX88jcvM2fmNKY3N/DKW0v49fOv
      MWtaE/W1VbR1dLL/0NERp4d29/bzV//4/aHkjIa6at5avJyfPvs8CxfMnfiVwMBpd+x7+vqx
      gD/74yeZ0dLAsePt+DweotE433jiEf7lh7/gq488xII5M5je0ogkSaddbmlaFlk+GdfefHc5
      33nmCTIZDZtNAaCivBTLsoYuD0eTFQS5D/mJ5wJ4e8kK/uJbT6MbBqnB19JYX0MoHCEcieHz
      evjYR26msryUZHJk2UGZjHZalsh7K9byF996GkmS6Bk88541vZnjbZ3EE0leeWsJ5aXFfP2r
      X+B/X3ydPfsPnbeNdCaDecprX7l2E9/9k6dxqHYOHmkF4KoFc9i7/9DQz+iej9zComWrRvye
      pdKZ045dv3kb3/2Tr+HxuNiyfTcAN157FZu27iAcidLbP8Cf//GT1NVUjviK7NQ2dN1gx+79
      fPdPvobP6+Env/wtkJuGkMhl7Yxmqu+EUz+j+w8d5Z47b+Y7zzzOrGnNvPjaImRJor62CtOy
      kIAr5s7klhuupq2ja0xt7Ni9j2eeepRZ05qYOa0JRZGx2RTqa6owDIOunj5Wrd/MrOlN3H/P
      HfzDv/1kRG2cmqW1ccsOnnnyURYumENzQx1IuamS+ppK9MFpK7fbxYzmBp578bURPb9lWaet
      s1m1bhPPPPkot9xwNfU1VVimhdvlpK6mCi2b5c3Fy3nmqUdJpdIU+L0jasM0T/8ZLlu1nj96
      /At89I6bqaoo4ye//B1PffmzpFJpSoqDZ4wJI6EbxmlXn++tWMsTj36GRDJFaUmQXzz3Mk8+
      +lmSqRRFhQFkWeH2m67lirmz+P2bi0fURlbXkSRp6OvFy1bz1UceJJFMURjw89yLr/HMk4+S
      TKUJFPhZ9cJrNNbX8PG7bqO1vYNX33rv/G1ks8intPHOeyv5o8cfIZFM4fW4L40rgFNZFvz3
      r1/kn//zv2lr72Lbzr0kUyk2b9tJe2cPpmXxzz/8OT/+5W/Zd/DIeQei/QeP8jff+w+Wr97A
      3gNHAPjcH3yc3738Zt76vHPPfv76//2AtRu2sHd/7uzqoU9+jBdefQfIzbP/+Je/5dnfvsJN
      1181pjY2b93J33zvP/hg266hwf3T993Fy4MfNtM0//927u0pyvOA4/iXM8vuCgjUapBQGpWW
      RhNiqtSBVLARRBFRg4eJse1VL/snJCadjiW2M54ythgTwUEOyionCSoGSxAsEEURWGBhEURR
      JIC4UKEXxsz0RpCL2pn39/kDnmffd2fe77PPvM9yqbqO6toG5s8LmdUc1bUN7Mk4SFNzGzdb
      7ACkrH26XQDg4+PNW8uiqK6tf94wz3Wx6goff3qItnYHN1vsuLu7k5gQS/FXl5iaghMFRezd
      /w9u9/Xj6HqxVfozZReq+NO+w7Q7uvH09KT/7gB5tjLuDw4RFBgw68/+zPjEBPuPZLH/yHGc
      vXfwn2Oho8tJnq0Ml2ucsIULqK2/xp6Mg/wkLBQvrxdfZz1+7OKvh49xMDMb5+0+5oUEc6PZ
      Tq6tFHd3d0KC5nKjuY0zpRcw+5lmdR2jj8bIOJDJZ8dy6O7pIzwslLrGJnJtZZhMvvj4eLP+
      3V//8N3MxvDII/78tyN8nl1Au8NJ5OIIqmr+Re7pEgL859B/d4AP9x6gqLySto4XO1X8zODQ
      EJ/sO0x23hla2x0MPBjkk32fcTzXRpdz5ie0n+fuwH0+/vQQebZSWu0O+u8O8FHGQfJsZXR2
      OQkJmkuurYwP9x4gIS5mVnPc7utnT8YhbKXnabV30tPb//TenLuAvaMLb28vaq42Yiut4NXQ
      BbOaw9F9m4/+cpCyiq9pbe98+a+Benp48H56KvNCghh77KK4vJLVsSsIDgrkYlUNNVe/JSEu
      hpi336TF3klhSQV//MMHuLu5k2crpd3h/K/xopdFsWpFNFazH+0OJzea29iQFM/DoWGOZuUz
      NTXF+rWrOVVUDsC6Ne8QuTgCDw8P6uqvUfnP6U/krlz+Br+MXorZz0SLvQNH920SE+K4N/CA
      Yzmn8HD3IDEhlsKSCgC2pSUTFrqA8fEJjp8snNH7w3Exy4leGoWvrw9NzW0MPBgkPnYFvXfu
      kZVrw9vbi4R3fsXZ7x/OKYnx/HzJawx9N8zR7AJc49OvchPiYlgatQQvLy8arzfz2OVi1Ypo
      nD19nCgowuxnIjZm+Q975RHhCwkKDKCu4fq0Yz+TtCbu+xWsB1cbruPp6cHyN1+nw+Hk5OkS
      gucGsuz1SM5f+gaAnVtTCAudT01dIxcvX5nRHClJCSyKeBU3Nze+qWsgwH8OS6OWcKu1g8KS
      CnZsXk/ogh/T1dNL5eUrbN2YhNViZvDhEF+cLJz2V5mvrw+/3Z5GYIA/wyOjFJZUkLpuDRaL
      H7aS89xqbeeD7Zv4UXAQ9s5uGpuaSUv+DW5ubtRfu0nFpeppr8HsZ+J3OzdjtVgYHhnlVFE5
      WzcmYjL5kldYhsPZw+7taQQFBnCztZ36b2/wXmoSJl8fir+6NKM9Z/85Vnalp2K1mPlueISC
      s+fYsWUD3l5eZOefpf/eALu3pxEwx0pj0y3OXahiS0oip4vLZ/xSQUjwXLZtSn56f4eGKCyu
      YFd6KgDHc208HBpm945NWM1mauuv0eXsJT1tHaOjYxzNzmdkdPq/Hnll/jzS1r+L1WLm/oNB
      isoref+9jTx58oQvcgqZYorf79zCk8lJMrPyCV+4gFUr38Jq9qOjq4ecGSz+wsNeYcPaeKwW
      M3cH7lN+8TI7tmxgYuLffH6iAJOvL7vSU3GNj5OZlc+yX0QS8/YbTE5Ocab0PC32zmnnWPzT
      cNbGx2K1mOnrv0fl5StsS0vmsctFZlY+QYEBbNuczKNHY2RmF/CzRRGsjl3J1OQkx3JOz+hc
      QVTkIuJjV2K1mOnpvUN1bQNbNybyaGyMv3+Z+/IDICIiL8f/3RaQiIj8bygAIiIGpQCIiBiU
      AiAiYlAKgIiIQSkAIiIGpQCIiBiUAiAiYlAKgIiIQSkAIiIGpQCIiBiUAiAiYlAKgIiIQSkA
      IiIGpQCIiBiUAiAiYlAKgIiIQSkAIiIGpQCIiBiUAiAiYlAKgIiIQSkAIiIGpQCIiBiUAiAi
      YlAKgIiIQSkAIiIGpQCIiBiUAiAiYlAKgIiIQSkAIiIGpQCIiBjUfwB7GcCKmSwtqwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='54' name='Overview Enrol Ratio' width='192'>
      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
      Jg0glPYfQWtHrIeGJSsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='54' name='Overview GPI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA2CAYAAACRF5YDAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEcUlEQVR4nO3ca2hbZRgH8P+RrEuXulDT1UtHt5RhYbqegJ0RNcRZtdoPTacVWScsdEhQ
      6ShKM129QNY5rNMP1WFXsTroKOwCdqibH2TOYKVj03W1YMugW2VjbNKpy7Cuhfohc61NL+ft
      5Zxkz//3YZDDe8bzPOTPe056Em1kZGQERELdYnUBRFZiAEg0BoBEs40/4PEHrKiDyBLcAUg0
      BoBEYwBItGkD0H6o1Yw6Ulr0yxarS0h6yToj7gAkGgNAojEAJmipuYaWmmtWl0ETYABINAaA
      RGMASDQGgERjAEg0BoBEYwBINAaARGMASDQGgERjAEg0BoBEYwBItIQvxdPce/69NKtLoElw
      ByDRtPE/jTj+Z1H4lUi6mRm6BHrwqXXzXUdKaz/UyhlNI1lnxEsgEo0BINEYABKNASDRpv0U
      iOhmxh2ARGMASDQGgERjAEg05QBozmys8erw5ky/1rUiH096dbhnUlmSUelbKpUZac5seAty
      4XbOf11TUXoa1OUPoS1Sgozh+JndB7ZhfcOxCdcG63ai2rcU8aW/o7lqIxpOzUHFFlDpW3Pq
      eHvryyjTHWjeuB4Np82t1SpGZ6Q5ddTveBWP3z36zu//dhdKI1+bWO0owzuABh2fREowcHgH
      PEUBrH3/B9zzzGbUrEhc6yoOo9q3BHvDART6A/j4hB2V22tTcidQ6VvLKUP0YAT+xVdwGcBC
      06u1hsqM7l9XAd/iHrxWEYDHH0BReB9uKwpOuNYMhgOw/Nm1yMOveH17FADQd7Aee38Dnqjw
      JawtLytE7MTneKcj/rrplUZcytBRblGTs6HSN2I/4c2qCjwafBdnB4EFJtdqFZUZdTRuxgPP
      bcPhc/HXAx29uALrZmU4AItct2KwrwvdY479+PMFZOYtS1i70DaE872/jDlyFhcHh+BYNItK
      LaLS98if/Thy6iqATDFvfkBtRmNp0NHUVos7/ziOVosuFY3fBE/w8/ZnLscwPMlyG9LHHcjA
      ysJ845UlC8W+RZrBjNzFIUSPRrB66BhCgXr0zVtxUzN+E5x2458bPEuzJv0PEpofjuHk9z0K
      pSUJxb5FUpyRt7IOuzasQn/0Mzz8xhfzXd2UDO8AF/oGYHd7sGbMsdUFWTjf1ZWw9q+/gTxd
      Hz3gvBd32RdgaDaVWkSlb6lUZqR5K7Fzwyp07w6j1OI3P6AQgIFv9qMXyxB+6zEAgLu0FiVL
      /kG0rRMaHAhuCiHkdQAAdh84DtvKcmzxxs+t2hpEZqwTzSn4kaBK3/9jA9JS8J5nJlRmVFb8
      EGyXvsOm5h64chxwOR1w5WTDZVHtSk+DuopD+GpLCezXX//3Wa+GXLQc/RDprWE83Ri/zAnW
      NaHad/v1lSn+dwCDfQc/+BTV92UlnH+yqQrBPf3mFm0yozMKNezBi3pGwvntH72Al/ZdNLdo
      zOBxaM2Zi0c8dwDnunHk9NUp17oL8rE83Y4zHZ2W3eTMFZW+pUrFGfH7ACQaH4Yj0RgAEo0B
      INEYABLtX6O5jJIP3CFEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overview Map' width='192'>
      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
      /HAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='POP.for.Drill.Down' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter.Dash.Final' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXRc93Xn+Xmv9ipUFXagABT2hQBBcN9EcdNGa7O1xLLkJUknmaTjPu1J
      JvFMzmRO2t2ZmTM5p9NJ+ownThy77TiO7UiyLFmyTIqbSEriThAk9n0vVKGAKtS+vPfmD5AQ
      IbJIECyCAPE+5+hIR1X4vvt+9e77bffen6AoioKKyipFfNAGqKg8SFQHUFnVpHSAKdcILW29
      AAx1tzLimrorYUWK8/777/L+4WPIn/ksFA7ftaH3yrFDv+LgwYMMj3vu+N329lb6OlqJftbw
      2xAKfXpPHS0XcU0GADj30Snid6GjsrRoU30wPtTD6f5pmhqquNh6mUIHjPRcZXImzFMHDnDl
      7Cmmkxpqy0ro7+qgbl0j50+fo2rtZuqrSzh55AM27XgM/L2cOttOeaGZEkcOg8OT/OKX77Br
      9z4KrFqa2/vYu3cXH506RZGzhsJsI5evdiKgEInE2fvk5+i49DFhWcvjex+9yc6o381YQMAk
      +ZgMJpj2eimrrqesKHfe9xRZx4HPPQnIHHn/l4QlkccPHGCw7SpTkSQWbYLRCR+PPfUUY64x
      MjSQW17GwUMfYjToUJJxyuo2kqkNcqalm0f37Ke75TRub5j1G5p4571fsO/xZ2iqr2HY7aJn
      dJJnD+zl8KGj1O14hI8/OIQ2I4/GOienTp2mrHYtuQaJc5c72bFnN7FgiGyzSMSYjae3nalI
      kgxtgtHJEE899QRata++L6RsVgUozTTRNzSMyZyLgkKGxcCMq4/zF5rxhAzsf2Q7H508SNna
      TVw8e5GnP/8FejqaAYhqjBRkmSkoryc6NUF3bxdKPMCgJ8i2R7axbVMTLVe7ef65pzn/ySc8
      9tQzDA/2MNTXxdZ9j5NMKDz7+EYunDnJ+dZBvP2t9ExGbrLTaM9ltK+TnkE3WUaRpJREe4un
      ZbC3i6NHj+KemiIc1/Lo2mK6J0L86p3DbNu6jlFXgCf2buXDk+c+bYN4AFN2EUpS5omnn2V0
      oJVDR05Q4sjj6OEjeEMRPv/so4y4A2zdsp2m+prZvxP1iPEo7edPs3bLDsbbLjDol2k9/wlJ
      QURv0HPyxMdcaW8ls6AAu9VER0c3M64hXDPROZtOfnQBY9LLmZa+e/2dVVJw2/fKuh27+Od/
      +A7bH90OyLR29NBYVw6CHt/MFJOTXvId5ZQ7chEEiWm/j0gkDkCuUeBCez8XTh4lt7KaUCTC
      0MAAIBCc8hGORInEo3g9HgQFJqemCUfCoAjodVp0Bj2iRoug1WKyGFm7cTOZplt1WCImg4LO
      bEEQdGRl2unvu/mByStw0NjYiNVswWA0oTPMaq3btgWdqCEU8OOdnMBgNM16vwKKoqDX6RB1
      OrSigKARMOgNZOfm09i4BpPBgKDVoQF83mkikU8ddOPaUt45109lgQ2D2YJBb2Dzti2cOXGU
      dZu2YDXqaWjaTHGWjg+OnSEaDjI4NDLPJqPRiLO6kQqH/e5/WZUFIaRaBo0G/AhmK36Pm/yC
      PPyBKO7RPpKCjmJnBcHJUbxhGWdRHpl2O8l4hDPnLlLfuIFsuwWA1uYLKKZMGuuqGOjtIhBN
      4HRWIkenGfdGKCvMpLV7kM2bm7h49gzO6noseg0Wm52A34fdamImrDDjHWXSH2F9UyOicLOt
      iiyjCAKiIBCLxTEY9Dd9p6O1hVA0QXlVDVpBJsOoI4qBZDSI3Z7JxOggA+NTbNuyEb/fjwhY
      MswEQnGQE2RmZuLzzWDSK1xqaWdN43qQ4mTaMpgJRAn63ERkLVXlTmZ8PmyZNtwuDxazCYPV
      xmBXKxHFQI0zjwuX2ymvqsaoSdLR1cemrdsZ6m4lIWmoXLOGeDiA3Z6JxzVM38gkmzeuR6tR
      x0D3g5QOoKKyGkjra2VoeIRYLEYsFmPWqxRmAoG5z2OxGADBKQ/ToXg6L71kDA0NEosliEZn
      hzvJWJhwLDn3+fV7HBkeQ32zLH/S2gOcv3CeRDiBpIVHd+7EO9TDybZRtqyrRkQEQcbndeMo
      q6GvvYvN2zel69JLQiLkoXUoiHe4g4ysYrZvbaLlwnli6HAU5iIiokghRl1+GqoKGZzSsLam
      8EGbrXIb0toD6A06tm6uRKfLp6+nh7YBF5aEn+CMlw8vtOPzTxGKxpicmkJnWHlj2pjfi7Wg
      CK0goTPp6O7pY2Jyikm3m8GeKwxPBPBOugiH/UT02UihO+85qDxYUu4DLIZgMILWlENjfSYW
      i4GCgkLMZj2jEzM8s68MnUbD0EA/Fg1EDZnpvPSSkOGopuX0OdZvf+zaxNhGUUE+igIJRUYU
      FDTkkugextffiaOq/kGbrHIH1EmwyqomRQ8gcfT9gxRWrUGLRHFRPh6vn8KCfAD6R0bQJpPI
      koI1NweNLOEPBHEWFzI24aWqwsmJYx/iqKghz24gGldQNFoyLSYkSWagu5vswiw6r7rYvncL
      ZkNaO6KbOH/qBEmjnVpnPoGkgoEkgXCcnJw8PJMeysucTLo9FBbmkUBLd0sLOnsWRiFJTmER
      E+PjCIJIptVEUjQy5ZtEryiUV9egucWyrMrKIcWTpxCNROm/epXaxjLePn6JimwzgZAPjQDx
      pMTwyABj42a++NVqjvz8X6nftIFfHDlLXWkmipSFTpfNpHeCzg432VYriqgl4hohqhGIJPN4
      pqEMg9lPX1sXjRsb7utNRsIhzBm5nDl/Fkd5LTFfGBmJsaFePK4JekaKqC3K581fXGL9hlqm
      /EFKMs2c+ug8GsFAabkTyawnPONhyB2gKFfD+W43EcVEY23JfbVd5f6SwgFEtu3ag9Us8tG5
      VspzNWi0evQiRJNaCnMzmfHO8MiOEkbHJti8fQed/W4e2dqAWatB0NoxmeLobTlUlpURmvYQ
      TGixZ1oRJZHSolxGx6epqilDVBL3/Sbr128mtyAfT3EOMiJkgyAI+KddaLVGHDW1lOXl0N4z
      Tl1NHZkZ2RQ4cvC7vBgzC8nNsSFpFGYmXRQVWyjKyyYc0+MoWHnzGJX5LGgOICUlNFrNUtjz
      wJCSCWREdA/5farMR50Eq6xqVt5ivIpKGlEdQGVVozqAyqpGdQCVVY3qACqrmrQ5gCRJ6ZIi
      mUze+UtLrLUcbVquWsvRplRaag+gsqpRHUBlVaM6gMqqZtEOEI+EaG+7ypj77gpmqagsJxYd
      h6w3WdCKCplZmUiShCzLpCuqQpbltE1+0qW1HG1arlrL0aYbtTQaDYIwG8d+T4H4ot6MWfdp
      J6LRpCeQLJlMotWmJ0cgXVrL0abrWogiQ74pMo1mss3mB27Xcm6rz2rd0xygqrLqngxSuXcU
      4HhfD0lZ5srEOMN+34M2aUWhToJXOJFEAr1GQ21uPttKSumbmnzQJq0o7m8uosp9x6TTEZck
      uibduAIBKrNz7/xHKnOoPcAKRwD2VVajFUUaCxw47WqW2t2gOsAKJhgM8tZbbzE2MkLfxWbi
      MzO8+eabeL3eB23aikF1gBXMmTNneP7552ltbeXo0aOMjY1hs9nIycl50KatGNQ5wAqmtraW
      119/HZ/Px4svvkgoFCI7O/tBm7WiSFtOsCRJ6j7AA9KKxWJYLJa0aD3sbZXWfQCV5UE6Hv7V
      iuoAKqsa1QFUVjWqA6isatRVoBWIoihcGBthMhQix2RiS0npXHSjyt2h9gArkNEZP1pR5HO1
      axAFgbHAzIM2acWiOsDDgFrcctHckwMM9fcRitz/6s4q8ym22UnKMr/u6kBWFIpstgdt0opl
      0RthMd8oR8/38MiO7WSYdMiynLZxqCzLiGJ6Oqd0aS0nmxRFmWvr5WRXunXul1ZaMsJErQGb
      zcLY+Dj1NRWAmhG2FFqKovAnf/InPPvsswwNDSFJEg6Hg8997nP33P4PW1stRGvRyrqMXHZs
      yUIjqvX0l5Lm5mYcDgfNzc243W527tyJ0Wh80GatWO7JtdSHf+lxOp1885vfpKenh7KyMjo7
      O5mcVLPAFosaDLfEOqtBaznalEpLXQZVWdWoDqCyqlEdQGVVozqAyqpGdQCVVY3qACqrGtUB
      VFY1qgOorGpUB1BZ1agOoLKqSbnHPDQ0xOjoKGazmaamJjXlTuWhJGUPYDQaycnJwWQyEQqF
      ltImFZUlI6UDxGIxenp60Gq1ZGRkLKVNKipLRkoHaGtrI5lMpo41V+Kc/eQcoUj8ftmmonLf
      STkHyM3NJZlMMjQ0hM1mu6kXUCQJvUnL1LQfoz5bPSRP1Uq7zv3SWlBK5ObNm2+bjylLMhpR
      IMOaMZcHoOYDqFrp1FkKrZRDoHA4zI9+9CMuXbp0y881BgvrmjaQZTWlxTgVlQdBSgcIBoNo
      tVpMJvUBV3l4SekAiqKg1WrTVpJCRWU5kvLpHh0dRRAERkdHl9IeFZUlJaUDNDU1YTQaKSgo
      WEp7VFSWlJQOIEkSdrudSCSylPaoqCwpKR3A6/WSTCbJzVUPXlZ5eEnpAHl5ebhcLjUITuWh
      5rarQBqNhqmpqaW0R+UOKIpCPBxL2677aiflFlsymaSqqiptu7sqC+fgwYMUFBTg8XjYs2cP
      hw8fxuFwsKFpPd0nrqLRa5HiSWr2ND5oU1c8KR3A5XIxM6OePLLUBINBYrEYgUCAd999l/z8
      fGw2G263m6khD1nOPPJrinB3jzI17CHTqc7R7oWUQ6BEIoHVaqWpqWkp7Vn1mM1mAoEAoVCI
      l19+Gb/fT39/P4ODg5gyLcxMTBOPxPG7fGDRq4fD3CMpi+PKssyZM2eorKxc0F6AWhz3/mqF
      QiEsFgvTI5NM9I7Trg2TU5RLLJlgf1UtAb8fv99PXl4efr+feDzOwMAANTU1FBcX3ze77qfO
      UmilVI7FYrS1taHT6dTNsGXA9dPgs0pymTLDWlmmNjefNtc4Q75p3v2XH1NbW8v777+PIAg4
      nU50Oh0Oh+MBW768uW2gT2FhIXl5eUtli8oCyTKacQUCRBIJJkIBMo0mKisr8fl8jIyMkJ2d
      jdPpRKPRqLFcd+C2fUsgELjtHw/2dOGorEWvtvGSkm02U5GVzdmRQSqzcsg2m3nuuecAePXV
      Vx+wdSuLlA6g1+vRaDQps3HiIT/trd3YnFVotKgZYUus5ciw4siwLju70qlzv7QWlBEWjUax
      Wq0MDQ1RVVV18xc0esrKikjGomgMs+NTdRL8YLXiUpJLY7PRuxuLitFr7u4aq6mtrpNy8KLT
      6bBYLDidzlt+rjeaqN+wkTybJS3GrTbiySTxNLzZFBSuusaZDIX4aHCAquwcKrNz+Hhw4N6N
      XAWkdC1RFInFYmnrflQ+ZcA3xYBvGoDK7Fwqs3MWrfXR4ABVObmcHRlEkmVyzLMvpKj6uy2I
      lA7Q39+P1+tVawLdB3q8Xg7UrgHgYHfHPTnAjVTn5HGktxtQqM1VV+8WQkoHKC8vZ3R0VHWA
      +4BBq8UbDqEARq3unrR2lZXTOTnJtpJSci0ZVF1zJn2axs0PO7cdAul0OqLR6FLasyrYUVJK
      i9sFwCNl5fekJSDQWPjpZpf64N8dKSfBly5dIplMotfrl9Keh5pAIMDJkycJzsywNisHhyLg
      Gh1jZmYGSZIetHmrktuGQ9/4b5V75+jRozQ1NfGDH/yAhoYGjh07RlZWFg6Hgy996Utz4Q4q
      S0dKB9ixYwfhcDh1bdDP0NvbSzgcpra2FrPZnDYDHyY0Gg1nzpwhMzOT4eFhGhoasNvttLS0
      LEpPURSiySRGUUSrhjwsipTRoOFwmGPHjmG1WtmzZ88dhSRJYmpqio6ODiRJorS0lLKyskVt
      jt3N5od3YILM4hw0ult//0Ft7vR4PYBAdc78eP14PI4oigvWmpmZ4fLlyzQ0NNDV1YXdbieZ
      TLJu3TrOjQ4TikWJSRI7S8sZ7OrG7/dTVFQEzM7jZFm+9UZmGu7xfusshdZtQyEURaGhoWHB
      F8jLyyMvL49kMsnAwAAffvghRqORuro6cnLSs9T3WSY6RzFnZWCyL4/Jn3dgAlthFp0eN7dy
      AL1ef1fDytbWVsLhMN/+9rd59NFHOXfuHI8++ijRZJJwPM7uskqissSlsRHw+wkGg3zyySfI
      skxRURGKoizYAVYjt31qZFnG7/ffdWUIrVZLdXU11dXVBINBOjs7uXTpEg6Hg8rKyrSWW2w4
      sCltWunAO+DGkGGiLm/hIeSyJJOIxjFY5g83ZVkm4guRV5DHSy+9xHvvvUdGRsbsCp1GQzSZ
      IJyIMxYMkG2yELNYcLvdc79XJBJRV/HuQMohUCQSmZuk7dy5845Cd0qIURSF8fFxenp65rrl
      kpKSW1aduFO3d/r0aYaHh9Hr9fT29lJTU4Pf72f9+vWsW7furrQWykJ03G43WVlZdHd3Mzk5
      SXl5OaWlpQwNDeFyzS57ulwucnNzCQQCuN1uXnv1VdoPNWOymzFnZlDUWDanF50JM9LST/Wj
      a1EUBUVR5oU3+6IRLo+NkmuxUJ9fiHiPFTzUIdAN6HQ6QqEQ5eXlabm4IAgUFRVRVFREMpmk
      q6uLI0eOYLfbqampITMzc8FaiqLM2WcwGBBFkcuXL3PgwIEF/314KkhSK/P6669TXV3N9PQ0
      ZrOZqakpXnzxxQVP/m8kHo/zl3/5lzidTioqKjh06BBVVVVcvHgRk8mEoig4HA6Gh4ex2WyU
      l5cz5fZispup2L6G7hNX5jmAxmKgt0CDPRQkz5Jx08si02hiV2l52h6Q1YjmW9/61rdu9UEi
      kcDr9aLRaOYmVbfjs2+n2yGKInl5eVRWVmI2m+nu7qa9vZ1EIjHnCLfTstvtNDQ0kJubi1ar
      pba2lpdeeolAIIDVap333VudcRALRbny3lmqtq5hamqKQCDAF77wBQYGBqivr8fn89007Pus
      zujoKIcOHWJiYoLR0VG8Xu9c4GAymSQzMxObzcaHH37Itm3b2LhxIxUVFQCYTCZycnLweDxs
      2rKZ6EyE8bZBKnasQav/9GH2RSP0TU2hoFBks9+yLW53hsPdki6t5WhTKq2UQ6DDhw8zMTHB
      rl27FtQL3GtOsKIoDA0N0dvbOzeHWIjj3Yk7daF9fX1kZWVx/PhxioqKmJqa4nOf+9xNb9vP
      6hw+fJjdu3dz4sQJNBoNExMTvPbaa2mx6UZ8kQh2ozFlgbLlONxYjjal0krpACMjI7S3t1NQ
      UJCyMsSNHpXOpPhAIMDAwAATExNkZ2ezZs2aRe8t3K8fNRwOc/DgQSoqKmhoaOCTTz5h7969
      t/7beAKNVosgCvO0krEEGr32jtX3FEXh7bffprKykuHhYaqrq+np6cHhcNDU1IRWq0WWZEav
      DOBocPL3//AdAIqKinC73TQ2NiJJEvv27bure1wsK8kBUipbLBYaGhpuGlJcR5Elrlw4g624
      ltKCrLRmhBkMBurr66mvr0eSJIaGhhgYGMBgMNz1kur9yHKS4kkmrgzzzIGn0ei0BD1+du3a
      lfI6ncdbcDSUYivMmqfVdvgSZVtqsOTcuo1vxGq1zh1Y0tbWRlZWFuPj4zQ2Ns5eV1GIzISY
      6BlDq9USDAYxGo2YzWb8fj8Gg+GO7bAaM8Juuwp09OhRGhsbKSsru+nzWChAd283GlMu9TWl
      S1IWJRQK0d3djdvtxuFwUF1dfccl1du9QSa6RjHZLdgK7jwBv1Gn/0wnlhwrIW+A4qZyrvzy
      LBtf3oWoWdhY9bM23W6cGwvNLmOOe1w4nU5+9atfUVZWxvDwMIWFhaxfv35Oyz8+RTwSJ6+y
      8I42KIpCLBDBaDWDcGu7FstK6gFSOkAymeTw4cM0NDRQWlp6S8H7NQRayE2Pj4/T29tLPB6n
      qqoKp9N5y4fodlquzhHMdsvcm3mhNiWiCUYu91GyvhKdcTacOTg5w9DFHko3VfOvP/8pzz//
      PKdOnSIYDOJ0Ounv7+f555/HZDLxj//4j+zdu5e3336bl156iatXr/Jbv/Vbt7zu6JUBvP0T
      ND67BfEW7bvQB0RRFIYv9ZFdmkdGro14JMb5n55gx9ceQ9Rq7krrTqwkB0i5CuR2uwmFQths
      tpRLlDeOXe9mFehOLGTmb7VaKS0txel0Mjk5yeXLl5mYmCAjI4MZKYlFp0cQhNtqZeTaMGR8
      2oNEIhF++tOf4vF4uHTpEuPj47S0tBAOhwl1e+k/3YmtMAuTzUxWSS4a7acPpKtjBI1eSywY
      pX9iiIsXL5KXl8eJEyfYvXs3er2e9evXYzQaiUQi5OTkUF1dTWtrKy6Xi127ds21Z2gqgEar
      QdSIhKeDXOgboCc6Q0l+7k15vt/97ncpLi7m2LFjnDhxgrq6Ol5//XWys7Ox2Wxz3wt6/ISm
      Anj7J8ircqDRaXFurEK4oW3SvQqUiMQZbxvCZLeg0S3u5Xi/V4FSOoDRaGRwcJDMzMwFrdEv
      tQNcRxRFcnJyqKysxG638+4nH/HJhQu4Z3xUFRUjJ2W6jrWQXZY/p+nqHMFoM930RtVqtXR1
      dTE+Ps6LL77IO++8g9frxWw2E2r1IogCBrMBuyP7JjtshVlo9VryqhxkZWVht9txOp3s3buX
      UCiEw+EgO3v27+z22SVNt9vNrl272LZtGzqdDlEUCU0FGLrQw9TQJLmVhWAzEMjU8VhDA6cG
      +6jKnr88e/nyZS5evEh+fj7nzp1jZGSEbdu2UV1dPe97erOBgNtP4RonerPh07ZO+EDQIghi
      2h2g40gz+TVF9J/uIL96cSt699sBUvYtra2tTE5Ozq1drwRsNhsH9uzl/MgQTo2eU6dOIcsy
      WdqMeTfuH5sisygHrX5+NlY0GsVkMlFUVMSRI0d4+eWX5/YptvzOZuLB6C0ffpjtDa35sy+K
      ioqKee322WVku91OTk7OLedWRqsJQRTJcuYST0hEIkl8sSifDA1QmHHzZHnfvn1MTEygKAp/
      8Rd/wfj4OF1dXWRmZlJSUjLPvtJN82OC4lOnkGJu5LgHs/N3+fM//3O+9rWvcfLkSaLRKCUl
      JeTk5BAMBvn85z+fotVXNinnAKOjo/T09GCxWNiyZcsdhZZrbdBwOEx/fz+jo6NzS6p3m+YZ
      C0XpONKMrSCLiu1192zT9fuLhaJ0HmvBmme/pe5PjlxFkmVe3b+Wnotd1G6qnRuvK4pC39g0
      sixTXZKzqINMIqP/gtHxCtGJX2LIfYI33jpIe3s7GzduxGq14vV6GR8f57HHHmPt2rV3fX+J
      SJyJrlEKaovRmRaXWPVAl0EnJyfZsGFDWi6+FHz/+99HURS+/OUv853vfIdXXnmFgoIC1q5d
      y9q1a5mamqKlpYXgjIeqmtnVrXQ1rm/UiyLLZDkXl4w+0TnK9MgkNXvWzoV215Zk452JIAoC
      mqg0b5n52KUBtJrZYcuwJ8Bjm1L31IqiMPP2L1HCIcw7d6C/1jsZ8p8jOv5vaEzliDo7jz32
      GHv27EGn03H16lWef/55XC5XykWQVEQiEc6fP8/u3buRMkU805MMXBpg586dy+7EoZS/fkZG
      BvF4nOHh4bkx63LH6XTi9XqJxWLodPOHN+2HmymoLeaRnTvxd/zvTEqlc+HaNTU15Ofnp9Q1
      WIw0PFFMwnsEKZqBxnhzteVkPIkiy3dlr8FipOm5bQB0HLmMIstEAxEs2bNDnc11n46bP3sY
      xthkgK8+1UQymeSnR9tSXiNyqZnolatoC/KxfuF5fP/2+pwDiLpMTMVfnftuZmbm3Avh+qbe
      rYZpd+LgwYPk5eXR0dHBe++9R3FxMSMjIzQ2Ns6bmC8HbrsMevLkSXJychZ0RsByGAK1tLSQ
      nZ3N4OAgjY2NGI1GNBoNWq2WkHcGQ4YJrUEHigLX3kThcJju7m4mJiYoLCykpqbmpr0FfzDK
      T94/SHG2hqfWGzHkPjH32dDQEBMTE+Tk5JBMJsnLyyMra/6yajKenBfjc/3+uo5foXxbLXqz
      ASmRnPfwA7S1teH1emlra6OmpgaAsbExdu7cyaBfnOsBZIWUPYD/jTdRJAklHkfQaDDv3IGu
      vJzuE1dJRBMUrytjzDfB5OQkRqORy5cv8+qrr/L2229jNpvZu3fvXedyvPfee7hcLhKJxGzv
      MzOD1WrlhRdeuOvwlgc2BEokEkQiEeLxeFouvhRcd9QbJ3/XdxEtOTa+/e1vs3PnTmZmZkgk
      EgA8+eSTrF+/HphdlTl//jzJZHIulPm6Uwv6IjRGLYac+UPCc+fO0dbWxrZt24hEIsiyzEsv
      vTT3eTwS5/xPjrP9Nx+ft2w6a5N1bkyv0WnnPfwAfr+fsbEx9Ho9breb3bt3EwqFmJiYYP/O
      nfSNTSPJMjUlqR9Q2+efR/L50N7Qw0VnwugMOmr2NNJxuBl/RpTh4WGsViudnZ0cPXqU7u5u
      MjMzF5VPcODAAQRBWBHHa6V0AK1Wi6Io9/WYVFmSiYeiGG33P4d4cHCQK1euYDabKSgomHsz
      3Uh+fj75+fkkk0n6+/s5fvw4ZrOZNWvW8LvPbrzlm0gURSwWCx6Ph3A4PM/5APQmPVu/vP+m
      hx+geF35bW12Op0YDAYyMzMRBIGCggIEQSAnZ3bSW1WcTTKZnDeulhJJBFGc25UW9Pq5h390
      MkDX0CT7NpaTiCVoP3SJonVlWOUIa9as4cSJE/zFX/wFQ0NDOBwOFEVJGQpzJ1bCww93GAK9
      9dZbbNu2bUHjwMUMgfzjU/R90s7Gl3bddO10d3udnZ3U1NTwwQcf8OSTT9LS0sLIyMhcWfFb
      cfz48blQ7draWjIyMjCZTDz77LOLyhf4rE23Q1EUkmNjaIuKbpo4+oNRLCY9Wo04T8s36qXt
      0EUKaoup2nVzKuuPDraQm2mmsSIPZ/7N87rVuBOc0gGuXr2Kx+MhIyODrVu33lF8OcwB0q31
      xhtvkEgkkCSJjo4OnE4n0WiU8vJytmzZsuCjhxZjU/DECZRYHMFgIGP3oyjJGILOyEdXhhjs
      dxMWRX776Q2gyCCKDPqmmLowwOb9Gzn/sxNkbC5nQIgQDcqsLyyisiiLcW+QjhJThUwAAB55
      SURBVKFJ9m8sZ8QzQ/+4jz3rP325rUYHSLkTPDIyQjwex2azLeiIpIXuBF8PN4hGo3z88cf4
      /X4+/PBDenp6yM/Px2w2p333T5FkLv/iNHnVhbeMp0mFyWRi9+7d6HQ6CgsLWbt2Lclkkv37
      9+N2u2lubmZ6epqMjAwMBsOdBW+w6TqplgUFvZ5YewemTRsRhAjR97+Jrv55fn30CpssOqYl
      hfLSHHRakQ/7e7EZDAxHAoTcfgxJ6DEkkGcMTMwEkBIw2NlKfeQjKorzEK0FRONJonGJohsi
      UdWEmHtgoT2Aoii88cYbjI6O8vWvf51f/vKXtLS0kJmZySuvvEJxcXHavV6j0eAb9ZJZvLgN
      o+s6t7Jpenqazs5ORjoHsWsz2P+lA7e1/bvf/S7r1q2jubmZzZs309nZicVi4dGnnuTC6DCb
      i53kWT6zUacoKPEQgiGDgfYRDjUPsLaxlF3rSpmJRGh2jbGnoopIIsHHvT08VreGH33QwvGW
      fl46UMczpVZ+9Itj/OaXvkDi6ptoa55EtJfcZNtq7AFuGwrR0tJCXV0dmzalr/LC9XCDp556
      irfffpuNGzfidDrvacJ1JwRBIKvk/kzms7Ky2LFjB8nNW+jv6ePEiRMYjUYqKipueUCdRqNB
      p9Nhs9no7OzEarXyxBNP0OGbItNoYsg3fbMDCAItU35cgREKM638/muPIisKJwd6kWSZhCTT
      NenGFQhQe+2a5WO91Bg0mOIGTjT3UVxehWC0IebWIgfGb+kANxKaCmC0mpjwzK6MFRYW4vF4
      sFgsGAyGBRVKWAnctjr0hx9+iN/vT+sFTSbT3MTzbmoOpYt4JE7IO5M2h2hpacHv91NcXIzJ
      akYakaipqWF8fJyrV6+Sl5c3r1reli1bEEWRpqamudxgs9nMJrMZz7Xk91vhCgQ4ULuGg10d
      rHdA64SL8sxskpKEPxoh+t77mGSZ0cf2URgIsbHYxrrJSaYKM0G2Ujz6JvELXSiJCKLzOcJn
      z2LasmUuGlRRFI5fGqChogC7CEMXehBEEW2ZBb/fz969e5EkicuXLy+4UshKIKUDGI1GGhoa
      UkaCKskYV9s7yMotpsSxck4rj/pDeHpdaXMA/7ViVH19fVgsFkKhEHa7fe50TY/Hw4ULF+aq
      5a1dO1vi5Fbdev4tgt2uU2i1crCrg8JrvaTDauUHRy4x7J7hd80hSk1mRltbGT1zFu0XXyHy
      z/+MtqAAZ9yPvqICpeT3IRZAkbXM/OIdTNu2EXj/19iefQaAEc8MSRmOXOjjy4+tnQvIC2vi
      6PX6ufngtm3b0joieNCkdIDrpUfC4fAtPxdEDeFwhMosO5IkrZhD8sy5Vipz1yxIX5ZkWn91
      noYDmxC04i3/xmQy4XK5EMXZz3U6HbFYbG6ydf1tmUwmGRwc5NixY+j1euqqS7Cb/Git8+sY
      ocgke48i5tYiZn4ag7M2r4C114ptJZNJMg1GanPy0EVk7EM/g9IN5NjtlG/dTsLrxbBxI+zd
      Q+sPf4jw+edoLHCA1oISjSLLMpKURFE+bRtHtoWOQQ/7NpShCFC9dzb4LQfmql1c3+FeqtTK
      +6WVlpTIZNjHle5RKivLsVsty34Z9PTp04yOjhKJRJiammLNmjU89dRTt/1bRVGYGvKQ7cxD
      kqW7skmKjhLzfIAh78mbYof8fj9d7WfxDJ+mrOGledXy4hd+iKZ4E8nuD9Bv/wME/e0rRse9
      AyTP/ZjE4AhixUuYd2xHtFqZefsdhl3j1B44wGlkNhWXkKGfXalKjLtIDA/NGwLd2Fb3ykMx
      CdbpdPM85bNozZlsXL/wYlYPGkVRMBqNxONx3G439fX1Kb97veLD7t27udrfRuZ0JrFYjO3b
      ty/4eslgO6Ihj2Sw/SYHsFgsbN3xJMr2JxgfH+fcuXNz1fJuDMnz+XzozAqJRILp6WmSySS1
      tbUkwwPEp05iLvkaEyMyon0/gewA+SMj+H8+RvZv/xb2F77AkGuM05EI/mgE0w0n0egchegc
      n+YN+4NREMCs19Db28vIyAj5+fl0dXWxb9++FRMMuRhuGwsUCATSNqx50Kxdu5aLFy+yceNG
      nnnmmZvCIG7ko48+4tlnn+X48eO0tLRQXl6+oL2QG9HnPI4cHUY03vqUTTkSwfezf8Px1a/M
      q5bXNhLBfOH/Yc2ul2m+3EY0GiUajZKVlUUwGMThcJBhzkef9QgAAbePivICIv/jJ0RMWiyP
      frqrvq6wiGA8hkmrQyOKKIpC0OMnI88+92JTgJ8dawXgtw+s41vf+hbf+MY3aGtrw+Vy4fF4
      HmoHSLkRJooiLpeLZDK5oB3PB5USuVAtg8FAeXk5VqsVo9F42x/VaDRy+PBhBEGgvLwcs9nM
      rl27FmRTc3Mz586dY3Jykp5+N8PDw0iSNJcOOWeTVoto0KO9Ft9zvVpemUOL3hqhz2vm7IVO
      tmzZwvvvv092djZer5etW7ei0RoR9bN6llwb4//8MzJqq8l8Yj+Sz4fk8zP9ve+TGBvDtmHD
      nN3Dl/qY+uA48QsXsNRWIRoMCIDbF8ZuMVDpyCQ/P5+BgQEcDgdVVVVoNJq7jgd7KDbCfv3r
      X3P58mW+8Y1vLKia83KfAyyVzptvvklnZydf+9rX8Pv9HDp0CIvFwh/8wR/ctZaiKPT19dHf
      34/dbqe6upqsrCyU6Azxc/8EQLDuy4TeP4LztS8CMPhP3yNx5Qqmv/zPiP/l/6LgP/8nNNcm
      r4GBUcbfeBfHV34D+aPj2H/j5UXd451Yjr9fKq2UygcOHKCqqoqJiYm0FchdDeTk5FBaWjp3
      0PjevXs5f/783OcJScIXiZC3gE0/QRCoqqqiqqqK6elpuru7mZmZoTDaSc2259CKIm8cPIei
      L+HVX7wNQNf6RtZ7vUz8zd9RsnEDlz1Rzp48z5ObK6ksKSAvz4Ry7mOS09MosjxvErwauW00
      6PHjx6mtrV1QSpzaAyyMD3o6kSSJbc5yshdR7lFRFAb7uug69F10cpTevOcpLqvi8U0VTAUi
      tE+P097mxe8P8Mq+TfzLT49TqFfQFxbw717ZjRQMMvPmzzHveoRYZ9fcPsBC7jHa0QGAcc2a
      29q4HH+/VFoplSVJwuv13nayqHL3OO2ZDE1PY70heO5WLw8lESHR/K8oiQi6tS8i2mfnYYIg
      UF5VR/kf/lfC4TDZ3d243f3813+6SF5RGbvWVzKdleQPn9vO9//7v5Fnz2BKY6JkZBAluRNB
      o0G4li4a9gWxJJKEImEsFstcXNL09DSFhYXzQjmiHR0kx2fPOIhyZydYKaR0AFmW0ev1nD59
      moqKCvUEwzSxJq+A6qwctNce+IMHD6LRaPB4POh0urm8hRfqBbTVTyBYC4mf/UcMj/zHm7TM
      ZjNr166laW0dWtffcqK5k27NVvo8Ej+YibDZqrDuN3bjR4f2+GGUWAzRYsGyfz/+ljam86vx
      nWhl2hymqamJY8eOsX//fiYmJhgcHOSFF1749GIPx2LgTaQcABqNRvR6PevWrbspwVwlfYRC
      IR555BEKCgp49NFHCYfDbNy48a40lNAka0qyKK+uJ24pwZ5hoNzkZybPwsBPfoL2+GFEqxXx
      2pBL5ygk67E9CKKGLGcugiDw8ccfs2bNGs6cOcPAwACRSGTeNYz1a9A6CtE6Ch+atz/cpgcI
      h8N0dXVhNpvVw7LvIwcOHODSpUts3ryZjIwM/viP/5jc3FyURMkNQ6DZHGMl6keaaENT0AA6
      M0osAHobor2EM/JmDhSFMYeHOKjPYtuOzSAn6Gxvp3fchSM3h+prkbgwm4O85vHZXOgCZodX
      iURitmz7DWNlRVE4deoUtbW1dExMsHXrVgYHBxdVLWI5cttJ8NWrVyktLZ23hp0KdRJ8/7SU
      RIRE2y945/QQT+3bgcFzaTaq0+aADAf6ugOcOnwOTSLOmg21vPHjg/z2f3wFnWH2xaUoCi6X
      i+5LzUgGPZXV1ZSWlt7xEBCY/V3/6q/+CofDgSzL5OTk0NnZyauvvprSCZbj75dKK+UQSBAE
      uru78Xg8abm4yuJJNP8riFpsJfUIvn40zq0Illx0619DmeoBYF3Mg5Kdw4leL084DGiSibm/
      FwQB++AQG2SZxoFBwsEgR48e5cyZM0xPT9/x+mazGUVR8Hq9RCIR7HY7Fy9evG/3u5SkdK1Y
      LMbY2BhFRUXU1d17OUCVxaPEg+gbX2av/wfIU+NICR9iZhnxc99DbHwFAMuO7TR8cBjRbEYs
      ypsb718nMTyM7Qufh0MfUOt0Ur92LT6fj+7ubnzT02SPjVGelY1WUVDC4bkKchqNhj/6oz96
      ELe9JKR0AL1eT3FxsXrI8jJAU/YI8cs/QZElNCVb0dU8iRIL4Bm7xMnOdzEZbWy37cRrr0RP
      iPJKA0psBsH4abhHxoGnmHn7HXSlTjTXqrNlZmaydetWQmfOMmG2cLanG8HjoekrX4GTp+Yq
      yD3M3HYO8Mknn5Cdnb2gwqjqHOD+aimJ2byMU+2T9He1UcAQxhwvFeTRnb2V/ssn+d1XvsbJ
      H/83BrXVvFDmJmPH781zglQkxl2Ejh5DUmQSiQT9LhfTpU7y6+qor6+/6yXwB91Wd6OVUrmn
      pweXy3VToac5FIm29m4aGh6eJbHlQCSW4Pu/auZ/en4T+huKaQm62SHNoMvHq+Xj/Hi0lpA0
      RHvXMD7zD5icdtLz7i845cknlu9k1JBHtbsNbemdUxd1jkJsL72AJEnoMjK4Hig9NTXF5cuX
      iUQilJeXp7WY8HIh5d0YDAYMBsNtqiiI6K81xkrKCHvQOnfS0oqwd70TAeWW33HmWflpr4My
      cYB+r4mNujOEzDlcDljw1T1CeaCF7Y0xPmrupbrpNfzBCG+d7ATgpd11mI3z93QGBgYoKCjg
      8OHD7Nixg/azZ9mzZw/AXArk9YMKjx07NldM+HYRosvx97tRa0EZYXdCSkQ5d+4S9U1N2DOW
      f0bYctFJh1bS6yX0wVu0eCb4t2g5Wls2+QyytSqPc0NmavQT2ENGdlTmcjGvhgrHbOLSgGt+
      ISyYPe9YURT27t3LkSNHaG1t5U//9E9TXnshBxUup7a6k9ailTU6IzseeTgqA6wUlEQYJSkR
      /OAw1mdeIXGhhy3NP2HSb2eUTDpi2ezaXMnUWC6bk7Ml0zfXOXjzwzYU4It7b67CEQgEKCkp
      4e2330an07F582Z8Pl/KYggWi2XuzAiXy8X58+dJJBJUVlZSWlqattj9pWLJC2MthOX4Blkq
      m0ZHR/H5fBQXF6MoCv39/ZSXl2ML9yKNnEdJJEjOWMh49nfxj7v553/4IYHcLEga2ffMdrKH
      wxyfCPDvv/wog4ODlJSUMDAwQF5eHpIk0dfXR0lJyS0z3BZ7j9eLCQ8NDWE2m+84RLpb7WXZ
      A6jcHz755BOefvpp/v7v/57CwsK5Y1alwY/RP/INQCH5s/+NwLs/RfH085UKB75162g+1c7A
      6RHia8swDU4SC0X53ve+x549e+js7GT9+vVEIhGuXLnCa6+9llabtVotNTU11NTUEAgEaG9v
      5+LFi5SUlFBTU7OsY8lSpkTeLcs9JXK56NxJ6+LFiwiCQG5uLiaTiWAwSH19PYaZPkRzDkT9
      yO6zxHvbkSMKYqwNe/561r30NImkTLDfRU2mCUe9k3giztmzZ6mtraWnp2euEFd/f/8ti5Kl
      4x4NBgMFBQVUV1eTSCS4dOkSg4OD6PX6RVX+e+hqgy6E1TwEUhTlli8TJREh0fEuICC5Bwh3
      6rDsfZLox/+AsukrnE5ksbtSB1d/jlavRbfmaURb0VxZlXh8tsDV7X6n+9VW8Xic7u7uuYMK
      6+rqFuwMDywWSOXBcD1B/qb/rzOhX/dFhh3ruRAMoy+YRmPyosRCHDvThyPXypGf/xBj5TZ0
      NY8ReevfE/3gPyFPDwLMRfQ+iIMr9Ho9a9eu5amnnqKqqoorV67wwQcf0NPTk7YlzsWi9gBL
      rHMvWu7ABOeGPmFf0S7G/7//G4seNDgw/87vc+zIO2wb+Ud0CSf67Ek0eTUIWRXIEQP6Ta/O
      OyIp3XYtRkdRFAYGBujr68NkMlFVVZXWiflC7VJ7gBXEZMiDM6sMS1YeiS+9hl+Xj/W5pzEp
      HvYFfo5t/ZfQ2cdRojOIuXXEOvpAChM+c5ZYb++DNn8egiBQUVHB448/zoYNG3C5XBw6dGhu
      5/luSbrdRNvaUO6yR1F7gCXWuRethJTgl1d/jkFnJPP0EdYpPpTgGBqrEZCQZmQUTQlafQ+6
      7X9E9NxxMp7/PX5+RcLX2ctjL+7H5+rH5XJhtVpRFIV4PE59fT35+fmIovjA28rtdtPZ2Tl3
      UGFxcfEdE7JiPb3EOjrQOZ3Ee3qwvfjCLatdqMugKxydRscLTV8kFPQgf/g/EM0iiYQBEmUI
      8Q40FgFNmQNtxZdQAi6ErI1M9McQ2rv4zWe283rrCC/uWkM8Hp/L8xgZGaG5uZmvf/3rd3XK
      zf3ixoMKBwYGOH78OBkZGaxZsyZlYlasvZ2Mx/YjWiwkhoeRw2E0GbcuM/9ZVAdYYYiCiHG8
      mbhNR3JaJqYPMZRZhjOgw271ItpLkL296Df/FtrqINruEeTySn7WE2TXOicajQabzcbY2BiK
      otDY2Eh/f/+yO9VRq9VSXV1NeXk50WiUjo4OLly4QHFxMZWVlfMOKTTU1xM8dhyd0zmb+H8X
      5WbUIdAS69yNlhyLET55CpE+NMYQYl4d2sp9RA/9HySHzxGMCvwqtIFG3QBXpTpe3LuGrE0v
      g9ZE7NTfICf0JMYDyNoaMh7bj67w04K4s8cuBUBrQtDo0nqP96utFEVhfHyc7u5uFEWhpqaG
      omunaCbdbpKTkxhqaxFSXFsdAq0wgr8+iGn7NqJH3oPaL8Pkx8RnxtCt/zLS2GUGElbW5crU
      JyfRZDTQ09PLhoxfoy1/FNFaiCzVYdB+jODcSmJo+FMHUBQSrW8hR3wQD6Br+hKitfD2xiwD
      BEGgqKhorphwZ2cnb7/9NmVlZezatYtJvZ6ieJzYtaLOC8llV1eBljFyJIK2oABdSRHJi/8N
      MasM4iE0xZvQb/99KozTtGo30K5Uc3k0RlVJLvL0APFLP0awOdBIF0jEKol1dmHasnlOV4kF
      UKI+DFt/B93Gr5HsPvQA73JxaLVaKisrKSsrQxAELl26xF//9V/zd3/3d3N1bReC6gDLGGNT
      EzNvvUWsvRttUR2a4s1oynYSP/MdlOAEVnsmzwi/QhYNfL5smuz9/zOGPd9EnupDV/MUhp3/
      AevnXsD27DPzV0V0JpRYADk8hTzRimi7/YF5yxWdTsfw8DCKouB2u3n11VcZHR3l5MmTJBIJ
      xsfH76hxT3OAG2Mr1DnA/dGSo1FAgtj03MmOSiKMNHIeBA3kN4Dr8myCfOE6QEFAwLD3f729
      bsBFsusQgr0YbdV+BEFckW0lyzKCIJBIJOYtl4bDYXp6enC73eTk5FBXV4der1/4SfF3Ih7w
      cPZqHyUlFZQ781UHWAKtxPg4oQ9PYNm7B41ZItlzGFlvQ279Odrqx0F/rfJb/ecRdLNJKp8t
      aHu90FVNTQ2dnZ1UV1fT3d1NU1MTNpvtoWmrG/F4PHR2dhKLxaioqKCysnLus0Ury/EoBc5S
      IsEwkiSRTCaJxWLAbLyJJEmL/u94PI5Go7lnHUmSkCRpLghsOejA7GQuHo8v6Ps3/r94ezsJ
      i5nA1VYse3aj5Dchnf5/0e35JrHOD9Bs/xIajYZIQoJEmGR3N3inAIV4LI62phpJkujp6eHw
      4cOUlJQQCASQZRmDwUA8Hl+wXbf7byAtOul6Fmw2G5s2bSIej+NyubiRRTuAMceJtreHyrpq
      NNfShtO1kaLRaJbVGySdOnerpSQiJFp+ghIPkVGzE0WsQ3tt6Q/nJmLBl1H6P8RYtBZh8grS
      wEn05bvRlm4nqjeQFARAQGvQYzSbkSQJRVF4+eWXOXLkCMXFxXi9XiwWy7Jsq3Q+C3q9njWf
      qWuq7gMssU4qrYMHDyLLMv39/YiiSGFhIaIo8nStBk1BI0JmKfEzf49+879D0JlQ4iEAJNEw
      p5UcOoM0cBLNNQeAhdf0T+c9LsffL5WWug+wTBgbGyMSicwNQ0pLS68NI25eqJOnB4lf/iny
      dD/ajb9JIjqNtmL2ob/+4F/nYarkfD9Qe4Al1kmldb1GpyRJJBIJMjIyiMVi5NgtJJp/jBIP
      IZiyUCI+AJSgGzGniviFH2LY/cfI3l4Mu/+XGxQVYif/FgQwPPrHS3qPy/H3S6Wl9gDLhOun
      sN/I9awp/dbfAyB26m8w7Pojokf/T+SQBzG3Fk3148ieLhCXVyzPSkF1gJWE3jpbIzTqR8yp
      QsypQooFEUw2dA2f/8yXBQy7H96itulC3QleQeibvojsG0LX9ArEQyjxENo1z6Hf+FUEg+0W
      fyFc+0clFaoDrCCkiTa0VY8h2hwokWmkoU8QbEUP2qwVjToEWkFoChqIn/8BFG9CDnowrH2B
      ZPO/IAsCuo1f5XLLFYaHh6mqqmJwcJDCwkJGRkZ45plnll28/3JBdYAVgizLiEY7uvWvEjv5
      1+hqn0SJhxAdG9BoNCR7j9Hb66ezs5N4PE5GRgatra243W6i0ah6ymcK1CHQMuXIkSP4/X5e
      f/11jh8/zp/92Z8BkOx4F8PO/4C26jGkkfNIvUdIdn+AJrdm7pR6u93O+Pg4JSUlbN26dVFJ
      5qsFtQdYpiiKgtVqpaenh6ysLHJycmaHNfEQQmYpAII5G+2m30aj0SLoLezb93Cc3LiUqBth
      S6yzUK2hoSGCwSBFRUVIkkR2djbT09NzRXJBQVOyDQo3rPq2uhct1QGWWCcdWtePSxJ05mVl
      V7p1lkJLHQKtQK4fl6Ry76iTYJVVzeIdQJFoa+tIoykqKkvPooZAUjyCa2pGPSRP1bqvOvdL
      68ZD8hblABq9icIcgXN9feQVObBnzG6yqJNgVSudOkuhlbZVoGQyeZsjVe+O1XxCzMOgtRxt
      ulFLFMV76wFuhSAIaY03WY5ay9Gm5aq1HG26lVbaVoHSeTzmctRajjYtV63laFMqrbSpC4JC
      b08v9zKemvF5GR13M+Vx4ZsJ3bNNft90WrQmJ1xMTs0wNNBHPCnfg5JCX3cXCSlJb9/APdk0
      NTVNIhpiaNSFz+vGM+1flI4sJZj2B5n2TDDhmWJseIBwbHGTzlDATzQhEY+GCUVi9/Q8XNdy
      u0aZ8gcWpXVdY2Sgn2A4Sl9v300aaXOA8b4eLDYjfYPeRWuIWh0jw8NMePyMjg7ekz1DvZ10
      942lRau5+QLRmXFCCQM9vT2L1kkEJ2nr6ODYh2ew6pOMTEcXpRMPB2nr7KG7d4CI38ewy4Nn
      bGxRWjP+Gfr6+tBodQwN9jAdiDPQs7jTZLyDnYxMRelob+HiqXP39Dx4BzsZ8Ya4dP4yA+2t
      i9KatSdCR3sbJw4evKVG2hzAZDbQ1zuA0bz42kAtl85hy8omHPQTT0h3/oPbEE3IBIPTadGy
      ZWXh9k4zOT6IRrv4+4tHotjyCtCSoHdwDJN+cVMwGYUZ3yTxeAz3tJ9kJEgollicliwx4XbT
      fP4suQVF+L3jKJrF2ZWQk7jHh5EFkVgyek/PQ0JO4vFMkp1lZyYwvSithJzEMzGK1mDDkuL5
      TNsqEIAsSYhpmLDIsgyCgJiGVaV0aF2vPynL8j1PyK6vRKQndkpBlhQEYbYiqCimob3S9Bum
      S0uWJASNBuUetK63+a3sSasDqKisNNRYIJVVjeoAKqsa1QHSTLpGlDdWal4sM9OTxKRZe+RE
      FK9vJh2mPVSo+QBpZHLgKj/+4CpfeGIHCAIjPe3kFpXjDswQn/RQ37SR5ssXKausIhpXqC8Q
      +P7bF3ls9yYGB8eorynCM+3HE0hgFEIIMRFBpxCKSzTU1jAxFUST8KNoNJy/PMAf/sGX+c7f
      /nfKateAImDUSRjyyomMD7F17+OcPdtMMjLJjF9i6xNP0nf1Ek8eOPCgm2lZofYAaeTC5XaE
      6DRXOlrp7LnK2ctdnP3oOPkFBbgnhvnJz94gFPDxwcmPGbu2NyGKIoPdbjIzbLT3jDLlmcIQ
      9RGWNSAIyJ4xZmIKvz51juGxUfyxJP5IlMriAkTA5xknGIozPtTDdFggJ0Pkau8gwyNjmCwG
      amvrmJjy8tHpc4g6tTTKZ1FXgdLI9NQUZr2WqXAMk9GCZ7QPkzWb/MI8Oq5cwZ6Vxa9+dYgX
      /v9m6KeFYDAA4PBvae9Kc6OJLU22FAcHNyflE8g3dttJUsuFJF6zP7Y1cpjmY/B8hGe1JM0L
      XMtgs/Mx2j0aukYF1AXsDxKz24JKgfJNqaioNTjLBKvTBCC43HFGLvkj41lkhFGMPXC4hQmf
      V4rZH7L11ownU4QmkPLK8RSwmM9+m/RnvqLXUJ3umCxsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Time-chart' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd4DUd53/8ed3etnZ2d6X3nuHAAFCCOmJKWqi3nlRT+/O9rvT03ie5oz1
      it7pNfXsJkbTNCEkIY0Aofe+sHTY3vv07++PwU0QAsOw7Cw7r8cf4s5+y/s7kHnN9/P9FMM0
      TRMREUk7llQXICIiqaEAEBFJU7Z3/vCBj3+OxuaWVNUiIiL96JwAaGxqpr6xOVW1iIhIP1IT
      kIhImkpJACycOyMVpxURkXdISQBkZWWm4rQiIvIOagISEUlTCgARkTSlABARSVMKABGRNKUA
      EBFJUwoAEZE0pQAQEUlTCgARkTSlABARSVMKABGRNKUAEBFJUwoAEZE0pQAQEUlTCgARkTSl
      ABARSVMKABGRNKUAEBFJUwoAEZE0pQAQEUlTCgARkTSlABARSVMKABGRNGVLZienw8GD993B
      uNEjqK6t57fPvkB9YzP+TB8ffuA9lBQVsPKVN1m3aXtf1ysiIn0kqTuAB++7gyFlxfzwF0/Q
      0trGFz7zlwB85uN/Rjgc4fGnV/CJv3iQ4UPL+rRYERHpO0kFQHZWJrv2VXDiVBVbduzB5/Vi
      GAYTx47msaeeZ++Bw7z8+lrmz57e1/WKiEgfSaoJ6DdPr+An3/8Wty1bxNDyUh791/8my++j
      vbOLjs4uAI6eOM11s6cBMG/mVB764L29+2f7/dy+bHEflC8iIslKKgBuuXER6zZt49kVq5g5
      bRJ337qU/RWV2Kxv31DYbFYikSgAm7bvZtP23b2/u+PmJbyw6s0rq1xERK5IUk1A8+dM55nn
      V3Hk+CmeWbGKIWUlmKaJ0+mkMD8XgGmTxnPqTHWfFisiIn0nqTuAdRu38blPfoRX31zP1Enj
      OH7qDJ1d3by+dgMPf/bj7KuoZO7Mqfzm6RV9Xa+IiPQRwzRN848/LL/vIeobmxPacda0SYwc
      PoS6+kY2bN1JKBTGZrWyYO4MCvJz2bBlJ1U1dRfcV01AIiKpl9QdAMC2XfvYtmvfOa9FolHW
      bNh6xUWJiMjVp5HAIiJpSgEgIpKmFAAiImlKASAikqYUACIiaUoBICKSphQAIiJpSgEgIpKm
      FAAiImlKASAikqYUACIiaUoBICKSphQAIiJpSgEgIpKmFAAiImlKASAikqYUACIiaUoBICKS
      phQAIiJpSgEgIpKmFAAiImlKASAikqYUACIiaUoBICKSphQAIiJpSgEgIpKmFAAiImlKASAi
      kqYUACIiaUoBICKSphQAIiJpSgEgIpKmFAAiImlKASAikqYUACIiaUoBICKSphQAIiJpSgEg
      IpKmFAAiImlKASAikqYUACIiaUoBICKSphQAIiJpypbMTstvWEhJUX7vz51d3fxh5WuMGD6E
      +bOnAWCa8NqaDVTV1PVNpSIi0qeSugOorq3jVFUNp6pqcLvd3HHzDZiY3LhoHr4ML6eqajhd
      XUMoHO7rekVEpI8kdQew72AlHKzEMAxuWDiXx558nmg0RnlJMb/87e85dOR4X9cpIiJ9LKkA
      +KNh5aWUlxTz1ubtAOTnZvOpj32ItvYOduw5wPMvvU4kGmXezKk89MF7e/fL9vu5fdniK6tc
      RESuyBUFwAfuv5NnV75KIBAE4OGvfxeX00lOtp9P/MUDBINBVr66hk3bd7Np++7e/e64eQkv
      rHrzigoXEZErk3QvoGFDShk7ahir3ljX+1pXdw9VNXXsPXCYVa+vY+iQ0j4pUkRE+l7SdwD3
      33ULL6x6k2AwBIDL6eC//vmrrF63idb2Dj5w/518739+3meFiohI30r6DmDrzr2seGV178+B
      YIhHvvMDwpEoxYX5fPN7/8vWnXv7pEgREel7Sd8BrFm/5bzXqmrqePIPL15RQSIi0j80ElhE
      JE0pAERE0pQCQEQkTSkARETSlAJARCRNKQBERNKUAkBEJE0pAERE0pQCQEQkTSkARETSlAJA
      RCRNKQBERNKUAkBEJE0pAERE0pQCQEQkTSkARETSlAJARCRNKQBERNKUAkBEJE0pAERE0pQC
      QEQkTSkARETSlAJARCRNKQBERNKUAkBEJE0pAERE0pQCQEQkTSkARETSlAJARCRNKQBERNKU
      AkBEJE0pAERE0pQCQEQkTSkARETSkMVlVwCIiKSjnHmjFAAiIunGVZJFztyRCgARkXRicdoo
      vHkKFptVASAikk5y5o7CXZKNGTMVACIi6cJZ6Cdn7khM06Rt90kFgIhIOjDsVgpumoTFYSPS
      GaBhbYUCQEQkGYbVQu6CMTjyMlJdSkKyZw3HOzQPMxqj/tV9RDuDCgARkWTkLhhD3uJxlL1v
      HhanLdXlXJQj30fuvNEAtB+spuNQDaCBYCIil82wW8kYW4RhGNgz3TjyfKku6V0ZNgsFSydi
      9TiIdAWpf20fxEwAkootX4YXm+3tXWOxKG3tnQBkZ2XidrlobGohFA73QfkiIgOLq9CPIyfe
      9GNYLXiH5ROoaklxVReWPXM43pEFmNEYDW/sJ9oV7P1dUgHw/ntuY8LYUQB43G4yvG4+8pl/
      YNa0yXzyox+gvaOL1rZ2HvnODxQCIjLoZE4ux2Kz9v7sKskCAzBTV9OFeIbmkbdoHIZh0FFZ
      Q9u+M+f8PqkA+OljT2MYBgAP3HMbhQV5hEJhPvqh+/nWv/+QispjPPrwZ5k/Zzpvrt9y5Vch
      IjJAGDYLvjFFmKZJpL0Hu9+DuyQbi91GLBRJdXm9bD4XxXfNwOKwEWzsoHbVnt6mn95tkjmw
      aZqYponb5eK2mxbz8KPfxel04LDbqag8RjQaY82GrYwdPYI312+hvLSYWdMm9u4/ecIYbFbr
      Rc4gIjIw1VtDNHmcWAyDsZEMTmJChovrb11IdnhgfK4FY1GOFIM1043LYmNKJJupixaet90V
      Pbq+eekC9lcc4Ux1Lbk5WXT19BCNxgBoa+8gM8MLQDQapacn0LtfKBQ552cRkWuCYWCflIdh
      MYm1Beg52EZ0ejZ4HVjzMug5NgCeAxgGzCjB6gxixmIEt52kLeS84KZJB4Db5eTu25bx6L/+
      NwDtHZ1keD3Y7TbC4Qh5udm0tLUDUF1bT3Vt/dsntdtYtXp9sqcWEUkJi8vOsHGLceClae9J
      Dq2poCR3NpnjSzjc2cCZ1ZtTXSKZk8sptmWDadC68yR1r+zloHnhhxNJdwNdsnAup87UcPxk
      /KFCOByhra2D2dOn4HQ4uPmGhezZfyjZw4uIDDju4iwc2V7MaIzOs33pu080AOAqysLqcaSy
      PFwlWRTeNAnDaiFQ00rDGwfgXT78Ick7AMOA62ZP57Ennzvn9f/56eP8/Wc+hvWhB9m19wDb
      d+1L5vAiIgOSb0IpAMGGdoINHQB0n2zENE0sLjv2bC/R7lBKarN6nRTdNg2r20GopYua53Zc
      8qF0kg+B4avf/v55r+8/dIS//Ow/4nI56ejsSubQIiIDkmG34h1ZCEDnkTrMs887Ix2B3t5A
      niG5KRkPYNisFN0yBVehHzMWo+6l3YSaOy+5X5+PBA5HIvrwF5FBxzssD5vXiRkz6aio6X09
      ForQc6b57Db5Kaktd/5oMsYWY8ZMGlYfpOt4Q0L7aSoIEZEEZIwpxrAYhJo7CTa0n/O77lNN
      mKaJs8gPFqOf6yoiZ158YG7n4Rpath5NeF8FgIjIJVic9t7mn/b9VecNqApUt2BGY9g8Ttwl
      2f1Wlz3bS/Ed07HYrQTr26l9aTdmNPHhyAoAEZFLcJdlY/e5iIWjdB2pPe/3gbr23oe/nqF5
      /VKTxWWn+M7pWN0OIt1Bal/YedkPoBUAIiKXkDk+3vsn1NRJoL79/A1Ms/c5gHtI7lWtxeKy
      45tQSuk9s/CU5xKLRKlbtZdAbdtlH2tgT2ItIpJiFpcdz/D4w92OQzXnNf/8UfepJjInlOLK
      z8TqdZ4z6+YV1+C04Sr045tQim9cCVa3A8NiEAtGaN56lI4DVUkdVwEgInIR7rIcbBkuzFiM
      zsM177pd96lGzJiJ1evEkZtBz5UGgGHgLs3GN76EjFGF2LO8GGcfMJuxGD1VLTRvOkLH4fOb
      pBKlABARuYjM8SUYFoOemjZCTe/etz7S3kO4tQtHTgae8lx6TjUldT5nkR//pDIyxhZjz/Sc
      86EfbOigo6KG9v1n4v38r3D6aQWAiMi7MGxWvKMKMU2TzsM1vYO/LiQWjBCoa48HwLA8mtYf
      vuzzeYblUXzHdOx+DwBmzCTU2kXnoRo6DtcSqG7FjESTvp4/pQAQEXkX3hH52DxOYuFo79w/
      F9N9ogHfuGJchX4sjstbH8CwWylcPhm730O4rZvOylraD1bHHy6/y3OHK6UAEBF5F75xJQCE
      mjoINnZccvueM81gxscNOAv99JxOvBnIN7YYR64PMxqjZuUuuhMczXsl1A1UROQCrB5Hb5/+
      joqahNrbg/XtRHtCGBYDz7DLGA9gGOTMG4VhMeg+1ZT084PLpQAQEbkAd1kONp+LWCRKZ2Xi
      PW26TzTG9y/Njk+dnADviHycBZmYMZOW7ccv+qyhLykAREQuwDeuBMMwCNa3X7T3z5/qqYoP
      CHMWZGJ12S+5vWG1kD17xNlztV1W2FwpBYCIyJ+wuOxkjIz3/umouHjvnz/VfbIxPi9Qhgtn
      QeYlt3eVZOEZmodpmjRtPHLVHvheiAJARORPeIflYXHb4Wz3z8sRbu0m3NaNcXYg16XkzBuF
      xWYl2NBO15G6ZEtOigJAROSdDMgYG2/+CdRefPDXhcRCEYJn5wvyXGJ9AFdxFt4RBQC0bDl2
      Wd1G+4ICQETkHWxeF56huZimSfu+M0kd448LsjgLMuN3EhdiQPacEVhsVsLtPbTvT+5cV0IB
      ICLyDt6RBdh9bmLBSNIPZLvPduO0uh24i7MuuI0jJwPfuBJM06Rl6zHMSP/0/HknBYCIyFkW
      p43Mswu/B6pbCLd2J3WccEsX4Y4eDIuBu+zC00PnzBmJxWYl0hlIybd/UACIiABgy3BScvdM
      PMPziYUitGw/nvSxzGiMntNn1wcozzlvPIA920vGuGIA2vacJtIRSL7wK6AAEJG05yrJovwD
      C8gYXQSmSdvuU1fcH7/71NkBYcXZWJznzrrjn1KO1e0gGgjTsvXYFZ3nSmguIBFJaxmji3qX
      VoxFojSuraB589Ernmo5UNVCLBLF4rThLMjsnd7B6nGQNWMYAG17TvXpwjGXSwEgIunJgLzr
      x5IzbzQWe7wtvuaFXXQd7Zu++MHGDqKdQSxZHrzD83sDIGv6MGweJ9GeEC1bUvftHxQAIpKG
      rF4nBcsmkjmhDAwI1LZR/dx2QgnM+JkoMxIjUNuKPcuDZ0h8Yjirx4F/2hAAOitrCbcl95C5
      rygARCStOPJ8lNw1A1dx1tmFXmqpeX7HVRmE1XWiAd+4Ehw5XqxeJ/7J5TiyvPGHzNuSf8jc
      VxQAIpI2PMPzKb5zBvazs3w2ra+keVPlVeuD332yCdOMrxPsLs0ma9pQID5QLFDXdlXOeTkU
      ACKSFrJnjyB/yXgsDhvRQJj6V/fStuf0VT1npL2HSHsPdr+HvOvHYc/xYkZjNG/u30nf3o0C
      QEQGPd+4EvIWjcOwxyddq1m5i0BVy1U/bywUoedMM3a/B1eRH4CuUw29YwRSTeMARGRQs/vd
      FNw0CavLTs/pJk7/ZmO/fPj/UffpeDMQgBmL0bzpaL+d+1IUACIyeBmQt3g89kw30Z4Qda/s
      JdLZv6NuA9WtvesJdJ9qouvE1V/rN1EKABEZtLzDC8icUIppmjRvPkKwrr3fawjUttFRUU2o
      pYvGNRUDou3/j/QMQEQGJYvLTsGyiRhWC4G6ttQ1vZgmtSt3YXU7Ujbnz7vRHYCIDEq5C8bg
      zM8kFopQ/+q+flto/ULMSGzAffiDAkBEBiFnQSZZ0+N97tsPVPXOzy/nUgCIyKBiWC0U3jwF
      q9NOuK2bhjcOgDlw2t0HEgWAiAwq/mlD8AzJxYzGaHjzINGeUKpLGrAUACIyaNhzvOQtHAtA
      55E62g9UpbiigU0BICKDRt7147BluIh2h2h488CA6nI5ECkARGRQ8I4qJHNivM9/08ZKQo2d
      qS5pwFMAiMiAY3HYsGW4Et7e6nFQcONEDMMgUNOa0mUWryUaCCYiA4qrOIuCZZNw5GUQqGqh
      ff8ZOivrLjpff87cUTjzfMRCERreOJDSPv/XEgWAiAwYhs1C4fLJuMtygPh6vd5RhcQCYTor
      a+k4VEP3qSZigXDvPq6SLLLnjACgZccJuk82pqT2a1HSAWAYBi6nE4vFIBAIEo3FsFgs2GzW
      3m3C4UjvLHgiIpeSMaoIV0k2ZixG686TOPN8uEqzsbod+KcMIXNyOeG2brpPNNK+7wzB+nYK
      lk3CYrMSbuumaf3hVF/CNSWpADAMg09+9IPMmjaJaDTKxq27+MljT3HnLUt5z6030tnVjWma
      /PhXv2Pfwcq+rllEBiHDbiVv0VgMi0HXiUbqXtkLMRO730Pm5DJ8Y4tx5mXiyPLimOYla9pQ
      ooEQVpcDMxqj/o0D59wZyKUlFQCzpk1i1IihfOqLjxIIhnA5HQCMGz2Cnzz2FNt37wcgFNJf
      hogkJnNiKY5cH2bMpOmtw71dOMNt3TS9dZjmTUdx5GbgG1eCb0wRjtyM3g//9oPVdFRUp/gK
      rj1JBcDCeTN5Y90mxo8ZSTAYYn9F/Ft+WXEhLqeT/NwcqmvricXiD2IKC/KYMGZk7/7jRo+g
      s7O7D8oXkcEgRIy66dkYFoOcgIXi8hFQNuLCG0fAqOjGVeIkY3Qh4a4e2tudjL1udv8WPQgk
      FQCF+XlMmzyePfsPMay8lIamZr7+b//DvopKFsydwd233Yjf5+PL3/weZ6rrcDudFObn9u6f
      mZFBwTt+FpH0FhyWSbM3gBmK4DzSTX5eAp8PQWBfPQ4gz++/2iUOSkkFQFtHB08//zLbdu3D
      6XDwk+9/k+wsPz/6xW+B+DOCv3jwXm5dtpj/+9WTnDhdxYnTbw/JvuPmJbyw6s0+uQARubZZ
      vU6GfWQxdty0H67h0HM7Ul1S2khqINjOPQe4+7Zl2G02PB43sViMSCTC9dfNwul0YDEMvB43
      3T0Db/5rERlYcuaMxOZzEQ2E423/0m+SugN4fe1GFl03m//97tdw2O08//IbdPcEWL5kAR//
      8/cTCoXoDgR45Ns/6Ot6RWQQsWW6yZp2dt7+vacJNWn6hv6UVACEwxH+4RvfIyfbTygUobOr
      C4CvfPv7OBx2PC4Xre0dfVqoiAw+udeNxupxEOkO0rTpSKrLSTtXNBK4uaXtvNdCobC6f4rI
      JTkL/finlGOaJm07TxJp70l1SWlHk8GJSErkXjcKi8NGpK2Hlu3HU11OWlIAiEi/c5Vk4RtX
      gmmatGw/PiAXTE8HCgAR6VeG1ULugjEYVgvh1m5adujbf6ooAESkX3mG5pExojC+cMtbhzFD
      0VSXlLYUACLSb3q//dssBGvbaD+oNXtTSQEgIv0mY2wx7rIczFiMpg2VmGF9+08lBYCI9AvD
      biV3/mgMi0HPmRY6KmtSXVLaUwCISL/IHF+Cq9CPGY3RtLESolosKtUUACJy1TlyM8hbMh7T
      NOk4XEvXkbpUlyQoAETkKjOsFopunYrd5yYWCNO4riLVJclZCgARuXoMyF86Ac/QPGKRKPVv
      HCDUoHnCBgoFgIhcNb5xJWRNH4ZpmrTvPUPb7pOpLkneQQEgIleFI89H4c1TsNitBKpaqH9j
      P+i574CiABCRPmdx2ii6dQo2r5NoT4jqFTuIBTRL8ECjABCRvmVA3qLxeIbkYUZj1L26j3Bz
      V6qrkgtQAIhIn8qcUErWjPgqXy07jtO+93SKK5J3owAQkT7jyPNRsHwKhtVCT1ULjWvU5XMg
      UwCISJ+wuOwU3zkdm8dBtDNI9XPbiQUjqS5LLkIBICJ9omDpBFzFWcQiUepe3Uu4Re3+A50C
      QESumH9KOVnThwHQsu04HRXVqS1IEqIAEJEr4irOomDZJAC6TzTSuLZC/f2vEQoAEUma1euk
      6PZpWN0Owu091L60W3P8X0NsqS5ARK5NjnwfpffOxpGbQSwcoeaFnWr3v8YoAETksnmG5VN8
      1/T4DJ/hCPWv7qP7eEOqy5LLpAAQkcvinzaUghsnYnXZiXQFqXt5jx76XqMUACKSGItB/uJx
      ZM8ZicVmJdzWTdWz2whUt6S6MkmSAkBELsnitJO/dAJZ0+NTPPRUt1D1zFYi7T0prkyuhAJA
      RC7Klumm+I7peIblAdB5qIaaF3ZqlO8goAAQkXflzM+k+O4ZvYu5N285SuOaCsxoLNWlSR9Q
      AIjIBXlH5FN810xsXiexUISG1Qdo2XY81WVJH1IAiMh5XMVZlN4/F8NmIdodomblTjoP16a6
      LOljCgAROYfFZafknllY7FaCDe3UvLBLPX0GKQWAiJzDMzQPe5YHMxqj5vmdBGpbU12SXCWa
      C0hEzuGfUo5hGATq2gg2tqe6HLmKFAAi0svmc5ExqhDTNGndeRIzot4+g5kCQER6ZU4sA8Mg
      ForQebgm1eXIVaYAEBEADLsV/+R480/noRqi3aFUlyRXmQJARIB4109Hng8zZtK293Sqy5F+
      oAAQEQCypg3FsBiEmjoI1KjnTzpQAIgIVreDjNGFALTtPa15ftKEAkBE8I0vweK0Y8ZitB+o
      SnU50k8UACJpzrBaevv+dx6pI9KmKZ7ThQJAJM05cjNwFWVhmibt+86kuhzpR0lPBWG32Sgr
      KcJut1FVU0dXd/xbQ3FhPr4ML6eraugJBPusUBG5OvzThmJYLYRbu+k6oXV900lSAWCxWPjq
      Fz5Fpi+Drq5uTp6p5ke/+C1Lr5/HQx+4j4amZgzgS1//LoGg+hKLDFQWhw3fmCIA2g+cIdYT
      TnFF0p+SCoAlC+YQi8X4uy9/i2js7aHif/7+9/Dov/4XlcdO8k9f/DQL5s3k9TUb+6xYEelb
      3lGF2HxuzJhJ+wEt7J5ukgqAmdMmUlF5jDtvWUpPIMhbm7YRjcWwWCwcPREfQPLWpu2MGTGM
      19dsZMTQMhbMndG7//jRI8nK9PXNFYhIUmKmyf6CCEGLQZHpYvaSxRAzU12W9KOkAiAvJ5uy
      4iI2btvFlAljuWXpQr79Hz+mJxAgdvaOoKOzC6/XA0BnVzfHT779cCkvN/ucn0Wk/1n9bqLj
      CjFjUep2HCXcHE11SdLPkgqAxuZWNmzZwfrNO7BYLPzsB9/CarWQ4fXicNgJhcIUFeTR3NIG
      QH1jM/WNzb37Z2Vlsn7Lzr65AhFJSt7iceSZ+US7ghx9ax+RzkCqS5J+llQ30M3bdvG+u2/F
      5XRSVJCHxWKhpbWdpuYW5s+ejtvl5Oal17Nr38G+rldE+oBht+IbWwxAZ2WtPvzTVFJ3AOs2
      bWfyhLH86HuPEovF+L9fP0kgGOT7P/4VD3/24/zln7+PdRu3sXPPgb6uV0T6gKc8B0dOhkb+
      prmkAsA0Tf77p4/z8988SzQaJRiKd/U8evwUf/W5R3A67HT36BuFyEDlnxLv+99T3ULPmeZL
      7yCD0hWtCdzdc/6Q8Wg0SnePHiaJDFRWr5OM0fFVvzoOVmvVrzSmqSBE0ox/UhmG3UosFKF9
      v3rjpTMFgEgaMawWfONKMAyD7uMNRDrUVJvOFAAiacRVnIWrOD7xm1b9EgWASBrJnFiGYbUQ
      auyg+0RjqsuRFFMAiKQJq9f5dt//I3XEQlr1K91dUS8gEbk2OPJ9lNw9E2uGk2gwTOuOE6ku
      SQYABYDIIOcbV0zh8inYfC5ikSh1q/YSbu1OdVkyACgARAYpw2ohe84I8hePx7BaiAbC1L64
      i46KmlSXJgOEAkBkELK47BTdOhXf+HiXz0BdG7UrdxGoaU11aTKAKABErpBhs5A5sQybz0Xr
      jpNEu1O7FKoj30fRrVNxl+WACR2Ha6h7eY8mfJPzKABErlD2zBHk3zgBwzDwjS2m+rkdhBo7
      UlKLd3g+xXfNwJbhwoyZNG+qpPGtw5hhTc8i51M3UJErYPU6yZk3EsMwAHAVZTHkQwvwDM/v
      1zoMm4Xc+aMpe/88bBkuIp0Bqv+wjYbVB/XhL+9KdwAiVyBn9ghsGS6igRBNG4+Qe91obF4n
      pffOpv71/bTtOnllJzDO/o9Bb8hggGG1YrFbsbjsWOxWsmcNJ3NSGRgGwYZ2albuIlDVcqWX
      J4OcAkAkSfZsL/7pwwBo23Oa5g2VdB9voOTumThyMyi6bSrO3AzqVx+4vLV2LQbu0mwyRhXh
      KvJjcdiwOG1YHDYMmzX+/23W83YzTZPOw7XUvrSbaFdqn0PItUEBIJKknDkjsHkcRLqDtGw7
      DkCgppVTj6+n9L7ZuEqyyZ4zEnu2h5qVu4j1hC96PMNuxTssn5y5I3GVZl/wQ/6PTNME08SM
      mRAzCXf00LG/iqaNRzAjavKRxCgARJLgLMjEP3UIpmnSsvU44Zau3t9FOgKcfmIjhTdPwT+5
      HN/YEuyZHqqe2Uq47fwBWBaXHf/kcvxTh+Aq9Pe+Hm7rpvNoPbFgmFgoSiwQIhaOEguGiQYj
      mJEYsXD8z0hngFjg4gEj8qcUACKXyzDIXTAGw2Yl2hWkZdux8zaJBSPUvLCTUFMnuQvH4CrO
      YsifL6RmxY74JGwG2LO8+KeU458yBJvPhWEYmJEYPTUttG4/Tmel5uuRq0sBIHKZ3KXZZIwu
      wjAMmjcdefdv3jGTpvWHCbd1U3jLFOyZbkrvn0PT+sM4C/xkjCzA6nYAYEZjdBytpWXbcbpP
      Nl7eMwORJCkARC5T3vVjsditBBvaadtz6Tn12/edIdzSRcl7ZmHP8pB/w4TeHj2R7iDt+6to
      3XEiZWMHJH0pAEQug3dEAZ6heZimSfOmI0R7Qgnt11PVwqnH11N8x3RcpdmEOwO07TpF+77T
      hNvOX1tbpD8oAEQSZNis5M4fjWG1EKhru+wVtcKt3Zx6bD12v4dIV1C9dSTlFPKf7HwAACAA
      SURBVAAiCfKNLcJdnosZi9G4tgKSbKa/UE8gkVTQVBAiCbA4bOTMH41hMeg500zX0fpUlyRy
      xRQAIgnInFKOMz8TM2bSuPYQZjSW6pJErpgCQAYFi8uOb3wJjjxfnx/bsFnImTsKwzDoOlpH
      9+mmPj+HSCroGYBc81zFWZTeNxtbphuAjgNVNG8+SqC2Nel2+nfKmTMSR5aHWCgSb/tXH30Z
      JBQAcu2yGBTcMAH/tKFYnDZCjR1YvU4yJ5aRMbqodyqF5k1Hkp4czV2WQ868UZimSePaCgK1
      bX18ESKpowCQa5LFZafgxolkTRsanwXzUA01K3dhWAxy5o7EP2UIzvxMnPmZZE0bSsv247Ru
      P06k4zJWxTIgb/E4rG4HwaYOWq90ameRAUYBINcci9NG6b2z8AzLxzRNOg5UUbNyV+/CJw2r
      D9Ky7ThZM4aRNX0YNq+TvAVjyJ4xjJbtJ2jdcZxIZwDDYsGwWsBqYLHbsLrsWF12bJlurC47
      jjwfniFnB31tqCQW1Lw8MrgoAOSaYvO5KL5rBp6heWBC85YjNKw+eF67fKQjQOOaClp3nCBr
      xnCyZgzF5nGStzAeBIG6Nqwue3xufZcdq9vx9oIr72CaJsH6dtr3V/XXJYr0GwWAXDMcOV5K
      3zsXZ56PWDhK88ZKGt86dNEHvfEgOEjr9mNngyB+R+D9kyUbTdOMT68ciRILRTCjMWKBMD3V
      LTSuOahunzIoKQDkmuAqzqL4rhk483yY0Rh1q/bEp2JIsENOpDNI49oKWnedxDuiAFehn1g4
      QqQjQKQrSLQ7RLQnRCwUIRYIEwtHNVWDDHoKABnwPMPyKL13Nla3g2gwTO2Lu+k4kFyTTKS9
      h7ZdJ1FfHhEFgAxkBmSMKqL4rhlYXXYinQGqn9tB94mGVFcmMigoAGRAchZkkjNvFJkTSjGs
      FsJt3VQ9u41AdUuqSxMZNBQAMqDYMt3kLRyDb3wpVpc93sf/SB0Naw4S1CAskT6lAJABweK0
      4Z86hNx5o7H5XEB82uSmTUdo232qt4+/iPQdBYCklGG1kDmpjLzrx2LLdGMYBtGeEO37q2hc
      V0G0O7EVt0Tk8ikAJGXcQ3LJXzQOd3kuhsXAjMVo3XOa5g2HCTV3pbo8kUFPASD9z2JQet9s
      MkYXYRjxD/6u4400rjtEj6ZaFuk3CgDpd74xxWSMLASg50wzTRsq6TpWr9G2Iv1MASD9yrBb
      yZk3EiwGTesP07jukObXF0mRpALAYrFwy43X88eps05X17Jn/yHKS4uZMmEMEJ9bZcuOvTQ2
      q9+2vM03phhXcTahxg6aNlTqw18khZJaErIwP5cPP3APGRleMjK8+H3xZfhuXbaI6VMnkpHh
      xefLwOVy9mmxcm0z7Fay547EsBg0bzqqrp0iKZbUHcDwoWVs2b6b3/3+xXNeLy8t5jdPr+Dg
      4aN9UpwMLpnjS3AV+jFjMTqP1Ka6HJG0Z5im2XsPvvy+h6hvbL7kTg/ccxt33HwDBw8f49jJ
      06x4+Q06u7r51f/8C/WNTdTWN7J5+27WbdwGwLyZU3nog/f27p/t99OkpqG0Ejaj/KJpH902
      k9HeXG51lmPoma9ISiUVAL4ML4UFeXjcbm5eupCCvBz+/pF/oaSoAK/HQ1FBHh/50P08/tTz
      vLZmw3n733HzEl5Y9WafXogMbJmTyym5awZmNMbp326k+0RjqksSSXtJNQF19/Rw5Fh8fdTj
      J0/zw+8+itVqpa6+kWgsRuWxE2RmZjB29PALBoCkF4vLTu51owDoPt1E90l9+IsMBEkFwCc+
      /AAdnV0cPHyURdfN5uiJU9hsVr79lc/x8utr6ejs4r47l/Ozx5/p63rlGpQ5qQxnfiZmNEbT
      +sMJL+IiIldXUr2Afnv24e+yJfNpbG7hX//zJwSDIX75xO8ZPWIYi66bza9++wc2bN7Rp8XK
      tcewW8mdNyo+q2dlLd0a6SsyYCR1B9Dc0sqvn3zuvNd3769g9/6KKy5KBg//lCHYMt2Y0RjN
      m49CVF//RQaKpO4ARBJhcdnJmTMCwzDorKyj58ylOxiISP9RAMhV459UjiMng1g4QssWjQ0R
      GWgUAHJVWFx2cs72/Ok8XEtPlb79iww0CgC5KvxThmDzuYhFovE5f9T0LzLgKACkz1ndDnLm
      joy3/R+qIVjfnuqSROQCFADS5/zThmDPdBMNhOP9/kVkQFIASJ+yehxkzxgOQEdFNcGGjhRX
      JCLvRgEgfco/bSg2v5tYKELTxspUlyMiF6EAkD5jcdnJmT0CgPb9VYS1sLvIgKYlIeWKWRw2
      vCMLyJo2FFuGi2gwQtMmffsXGegUAGnK4rThGZqHGYnSc6aFWCR6ecszWgzsmW6yZg7HN7oI
      e7YXw2LEu32uP6xv/yLXAAVAGnKX5VB853QcORkARANhgnVt9Jxppvt0E8H6diIdgQvua3HZ
      yRhdhH9yOe7yHCw2KwBmLEbPmRZad56kbc+pfrsWEUmeAiCdGJA5oZTCW6ZiddmJhSJggtVl
      xzM0D8/QPHJiJrFQhHBLF92nmug+3USgugWb10nWjGF4RxViy3BhGAamaRJq7aKzso72PacI
      NnRgRrXMl8i1QgGQLgzIu34cOfNGYrHbiHQFqf79NiKdAVwl2XiG5uIuycaR58PqsmMtzsJV
      nEXO3JHEQhEMqwXDGu8zYMZMuk400Lb3NJ1Haon1hFN8cSKSDAVAGrA4bRTfMZ2MscUYhkFP
      VQvVz20n3BJvpw81ddK+93S8Xd/nxlWajWdILu6yHBzZXgy7FUyTUFMnHYeqadt3hlBjJ5ia
      30HkWqYAGORsPhcl75mFZ0gupmnScaiGmhd2Egtc4Ft7zCTc1k24rZuOA1VgGDiyvdizPJiR
      KIG6NmLBSP9fhIhcFQqAQcxdlkPp/XOweZ3EIlFath6jYfXBxL+5myah5k5CzZ1Xt1ARSQkF
      wGBkgG98KUW3TMHqdhANhKl/fR9tu09pVk4R6aUAuBYYBlkzhmF12Yn2hIh2B4kGI8QCYWKh
      CNFAmFggjBmNYVgt5C4YQ+6CMRgWg1BrF7Urd9F9ojHVVyEiA4wCYIAzrAbFd8/EN7YEw2L0
      vm6aZrzLZSz+pxkziYWjEI1hz/aAAT3VLVT/4e2HvSIi76QAGOC8IwvxjSkGA0ItXVjsVqxu
      R7xb5tlBWBfSfrCKupf2EO0J9WO1InItUQAMYIbdSt714zCsFrrPNHPmiY3xb/0GGDYrtgwn
      VpcDq9uB1RP/0+Kw0XW8np6qlsub2kFE0o4CYADzTy7HWZiJGY3RtO5QfOTuWWYkRuhCXTlF
      RBKk6aAHKKvbQe780fFlFY/W0XW8PtUlicggowAYoLJnj8Du9xANhmlcd0jdN0WkzykABiBH
      TgbZs+PLKrbvryJY25biikRkMFIADEC5C0ZjdTmIdAZo3qCFVUTk6lAADDCu4iwyJ5ZhmiYt
      248TbutOdUkiMkgpAAYQw2ohb3G822e4tZuWLcdSXZKIDGIKgAHEO6IA7/B8zFiMpg2Hz+n2
      KSLS1xQAA0Tvt3+LhZ7qVtr3V6W6JBEZ5BQAA4R/yhCcBZmYMZPGtRWY4WiqSxKRQU4BMABY
      PQ5yF47BMAy6jtXTfbwh1SWJSBpQAAwA2bNHYs90Ew2EaFxbkepyRCRNKABSzJ7jJWvGUAA6
      DlQTqGlNcUUiki4UAKlkQO78MfFVu3pC8SkfRET6iQIghVyFWfgnlQHQvOUYkc5AiisSkXSi
      AEgRq9dJ/tIJGFYLoaZOWrZp0JeI9C+tB9DPDKuFjDFF5C8ejz3HSywcpWn9YWKa219E+pkC
      oB85CzPJWziWjLHFGIZBLBKl/rV9tO87k+rSRCQNKQD6gdXjwD9tKHnzx2Bx2jBNk64TDTSs
      PkCgWr1+RCQ1FABXkwHeYfkU3DwZZ64PgEh3kIbVB2nff0ajfUUkpRQAV4k9y0PBjRPJGF2E
      YbUQi0Rp23WSpg2VRDrU20dEUk8B0NcsBtkzh5O7YAw2rxPTNOmpaqFxbQVdxxvA1NqOIjIw
      JBUANquVj/3Ze3t/rjx2ktfXbsSX4eWBe2+npKiAl19by+Yde/qs0GtF9oxh5N8wAYvdGl/R
      a8tRWrYcw4zGUl2aiMg5khoHUFJcwJwZU9hz4BB7DhyiqqYOgE9+9IN4PW5eem0tn/nEhxlS
      VtKnxQ509mwveYvHY9gsdFbWcvLXb9G88Yg+/EVkQErqDmDYkDJ27atgw5adva8ZhsG0yeP5
      +N9+hfaOTla9sY6Fc2fwmzPVfVbsgGZA7vzRWF12wh091L64WyN7RWRASyoA8nKymTNjMv/2
      6Bepa2jiN0+voKu7h47OLto7OgE4cvwkc2dOBWDezKk89MF7e/fP9vu5fdniPih/4KgnwJMt
      h4hisiBnKJ9/5IupLklE5KKSCoAXX13D+s3bcTgcLFkwh4f/38f58jf+HYvl7RYli8VCLBZv
      +ti0fTebtu/u/d0dNy/hhVVvXlnlA4lhUPbeOWSMLiLc1s1j//dzfhXUco4iMrAl9QzAarVQ
      19DE6aoann/5DXKy/HR39+B2OcnPywFgyoSxnK6q6dNiByrvsDy8owrPruVbSUwf/iJyDUjq
      DuAv/+x9uD0u9h+sZP6cGezaV0EkGmXthq18/pMfZfe+g1x/3Sw+8/A3+rreAcewWshdEF/N
      K9DQTtve06kuSUQkIUkFwH//7HEWzJ3JkNJiXln9Fms3bgXgJ489zdLr51FUkMvDX/s3Gpqa
      +7TYgcg3vhR3eQ5mzKThjYMa3Ssi14ykAiAcjvDmW5vPez0SifDK6reuuKhrhWGzkrtgNIbF
      QteJBrpPaC1fEbl2aD2AK5A1bQiO3AxikShNbx1Wf38RuaYoAJJk9TjJnjMSwzDoPFxL98nG
      VJckInJZFABJyp41HEe2l1gwQtOGylSXIyJy2RQASbBneciePRyAtn2nCda1pbgiEZHLpwBI
      Qs68UVhdDmKhCE3rD6e6HBGRpCgALpMzPxP/lHJM06R5y1HN7S8i1ywFwOUwIHfhGCx2G5G2
      Hlp3nEh1RSIiSVMAXAZPeR4Zo4sA9O1fRK55CoBEWYyz3/6tBOvbad11MtUViYhckZQsCel0
      OLht2aJUnDpp9iwPeXPHAdDeVMX4xQtSXJGIyJVJSQDsPXCY8WNGAjCsvISTZ6ovuVRuWXEh
      dQ1NhCOXnmlz2JBSTpyquuR25SVF1NQ1EIlefP4ew4BJC6ZxuraOSGeQ0Mlm7Hb7BbcdUlpM
      VU0d0dilRwUnWufQshJOV9UQS2A94USPOay8hJOnq0lkheKEj5ngdgBZfh+tbR0X3cbtcuLP
      9FFbf+lBdpk+L3abjaaWi3fJ9bhd+DK81DU0XfKY/swMLBYLLa3tF93O63Hj9bipb7z03FdZ
      fh/AJa89w+vB5XLS2NRyyWNmZ2USi8Voa++86Ha+DC8Oh52m5tZLHjMn208kEu1d3+PdZPq8
      2Gw2mi/xvgPk5mQRCoXp6Oy66HaX8757PG4aBt37HqG94+LvUaYvA5vNmtD7npeTRTAUoqOz
      +7zfpSQADh89weGjJwD4n399hP/8yeO9awe8m69/6TM89fzLCf1H9qPvfY3v/+hXl9zuO1/9
      HI8/vYKWtov/QwO4ddkivvHtn19yu+8++kV+/sSzdHad/2YnW+cPvv1lfvjL3xIKhfvsmP/7
      b//ED/7vMcwEQiXRYya6HSS2JsT4MSO4eelCnnvp9Use74aFcynIz73ktlMmjOX662YmdMzl
      Nywgw+u55LYzp05k5tSJCR3zjuVLMAyDFatWX3S7ebOmMn70iISOec/ty+gJBHn59XUX3e76
      62YxtKw4oWO+7+5baGpp5fW1my663dLr55GXm53QMT94/52crqph7cZtF93ulqULcbtdlzzm
      rGmTmD55fELnvvPmGzBNkxdeefOi2103expjRw5P6Jj33nETXd09rHrj4vOfLZo/i7KSooSO
      +f733EpDUzNvrDt/rrV3unHRdeRk+xM65ofeexcnT1ezbtP2836nZwAiImlKASAikqZS0gT0
      Trv2HkyoGeLAoaMEQ6GEjrlzz4GEttt3sJJQ+NLNKpdzzD0HDhFJ4DnF5Rxz976KSzaRXe4x
      d+5NbLvLOmaC2wHU1l166uz2ji6OHDuV0PEampoT+rts6+jg6InEFu2pb2ii/RLtuwAtbe0c
      P3UmoWPW1DVgGMYlt2tuaePE6eqEjlldU5/QtTc2tXDpM8edqam7ZFs9QENjM4FgMKFjnq6q
      SahtvbahCafjws/Y3qml9fLe90Q+Z5pbWjl5JrHnWFU19QQTuPbGphbMWCJP2+BMdR1tHRd/
      TgHQ0NhET09i3dBPVVXT2Hzh990w3/GuLL/voYTa2EVE5NqnJiARkTSlABARSVMKABGRNJXy
      h8BXiz8zg9uX38Dmbbt6H/qNGFrO/XffgudsH+Odew4wY8oErps9/Zx9n3zuJTDh9uVLGDGs
      nGMnTvHkcy/T3d2T0LkthsG0yeMZM2o4v312JQB2u517bl/GtMnjqTx6kseffh7TNHnowfuw
      29/+a6g8dpJX31zPB++/E39mfPBKQ2MzTz3/ckIPsSA+mOTOW5by6ur1VNfWA/E+9ffcsRyb
      1cpTz73MwcNHmT9nOtMnT+jdz8Tk1797jix/Ju97z61k+jLYumMvL72+luglBsv9kdViYe6s
      qeTn5vT2UXa7nNx3581MHDeaPfsrePr5VUSjURbNn82SBXMIBEP84cXXqKg8BsDwoWXcsvR6
      fviL3yZ8zQAWi8G0SRMYPXIYv/t9/H132O28p/d9P8HjT68gFApTWJDHe++6hcL8XHbvr2DF
      y6t7OxlkZfr48wfew4uvreXIscSn/MjJ9nPXLUtZtXo9Nb3v+0juveMmLBYrTz33EhWVx7Ba
      Ldy0eAHXzZlOe0cnv1/5Kk3NrTx47+1Yrdbe4+3ae5D1W3YkdO74+z6NvNxsnu99313cf9fN
      TBg7it37K3jm+VWEIxGGlpfw4H134HI6e/87AFg8fzY3LVnAidNVPPHMC3Ql+O8doCAvh7tv
      XcbTK17uHcA1bdJ47r7tRsKRCL95egUnTlVht9t4z23LmD5lAocqj/PkH14kFAqzaMEc5s+e
      jt1uY+uOvbz42pqE/+5tViuLFszGarHy6pvrgfiArgfuuZ0Rw8vZsn03K1a9STQaZeyo4bz3
      7lswDINnVrzCgUNHgPjf03tuX4bX7eal19eyfnNi7ztAWUkRty9fwi9/+3sCgfhD4XmzpnLb
      ssV0dHbxm2deoKqmDqfDwfvuuZUJY0aye/8hnl3xCqFwmBlTJnDnLUsJhkL87tkXE36wbbFY
      mDdzKguvm4XTYWflq2vYsXs/FouF9959C1MnjmXz9j288MpqotEYhfm5fOh9d+P1uHn6+Zc5
      cOjo4LwDGDd6BP/9L49wz+3LGDakDACHw84jX/wU23ft46XX1vKFT3+M4sJ8TlXVsG3XPrbt
      2se+ikruunUpTrud//fXHyYajfLsilcYVl7G+99za8Ln/8rnP8kn/uIBblu2uPe1++5czqRx
      o/nZY89QVlLIRz5wH9FojC079/Sef9iQUkYMK8ef6eOmJQt6X684cgwSGrMbHxzzg+98hbtv
      vZGiwnwgPhLxHz/3N6xZv4U339rMP37ub8jNzuL4yTO95zh+6gx3LL8Bp9PBow9/hgOHjvDE
      My9w67JFLFkwJ6FzG4bBd776eR76wH3cuPi63tc//MA9lBYX8tPHnmLqpPHcf/ctTBw/mo98
      6H6eeeEVNmzdySNf+BT+TB/vv+c2/umLn+b+u2/BYrm8f55f/fwn+cRfvP+caUbuuysePD97
      7BnKS4t56MF7sVqt/MP/+wRNLa386nd/YPb0ydx924291/CXf/4+blq8gCGlxQmfe/b0yWff
      92UUFeQB8dGa//i5v2b1W1tYs34zX/n835CTncW8WdO4987l/O73KzlQcYSvffHTRKNRtuzc
      G//72L2PqZPGUXj2OJdisRh855HP89AH7uXGRfN6X/+LB++huDCfnz72FNMnj+e+u24mw+vh
      a1/8DJu27mLlK2/y8Gf+ktLiQsaOGs5H/+y9PPX8y+Rk+fnYn70v4Wu/YeFc/v2b/8Cdty4l
      y58JQElRAZ//1EdY8fJqtu7Yy6MPf5YMr4d771jO5Alj+dljT1NeWsRDH7wfl8vJpHGjWPXG
      Op5ZsYp771zO7OmTEzq32+3iu19/mA+99y4WzpsJgAF88mMfxG638fPHn2HZ4gUsv2EBOdl+
      vvx3f83razeydsPWs//mMsjPzeGRL3yKdRu38dhTzyfc4w7gzpuX8u2vfI57br8Jt8sJwJiR
      w/irhx7kyede5uiJU3z17z+Fw27nww/eQ0lRAT97/BmmThzHe+++hZKiAv7ubx5ixcur2bv/
      EF/70mdwJNADCuKDGh+47w7e2riNDVt28sVPf4xMXwZ3LF/C3BlT+PVTz7P8hoXcsHAehmHw
      D3/3V1TX1rNm/RYe+cKn8XjcgzMAWtva+ftH/uWckZHlJUU0t7Ty+tqNbN6+mzfWbWL+nBk0
      NrWweftuNm/fTW62nzfWbqKqtp5//v7/8esnn2PXvoNs372P7Cx/wud/duWrfPZL3+CdH9rT
      Jo3niWdXcuT4Sf7jh79k4byZOOw2du09yObtu9l74BClxYU89+Jr5OVkUVvf0FvXnv2HLjlV
      xh/V1jfyt1/+1jnfYEYMLefYidOs37yDtRu3sXvfQaZNHk9N3dvnKMrP47mXXicYDOF0Oli3
      cRsVlcfYV1FJTqLXbpr8+snn+PI3/v2clyeNH8MTz7zAkeOn+K+f/JolC+aQk53FyVNV7D1w
      mM3bdxMOR3rfj0/+/dc4U1WT2Dnf4dkXXuWzX/rmOa9NmzSOJ5594R3v+yw8bhder4e3Nm2j
      8thJtu/eT052FgAzpkxgSFkJq1ZffHTnn6qpa+Bv/+Fb53xjHzG0nKPHT7FhS/x937P/ENMm
      jSPLn8mhI8c5cOgoG7ftwmq1EolE2bF7P5u37+bYidNkeD2932YvxTTh1797jn/85p++76PP
      Xvsp/usnj7FkwRwK83NpaWvjzfVb2LpzL6+8uZ75c6azaP5s/rDyVXbvq+Cnjz/N7OmTEr72
      46fO8Kkvfp09+w/1vjZm5DC2797Pjj37efXN9ZyprmXMqOHMnj6ZX/zmWY4cP8WPf/kk182a
      Sld3D//5f4+xbdc+Dh46Sl19Y0LdQAGikSg/+uXv+M5//Lj3NZvNxujhQ/nt71dSeewk//vz
      J1i2eD5lJUUcO3majVt3sWbDVrbs2MOcGVO5ffkSfr/yVd7atJ2KymNs3Lor4Ws/ePgIn/zC
      1865U5wwdhRr1m9l38HD/OHF1wmHw5SXFjNnxhR+/MsnqTx2kh/+4gkWL5jDuDEj2LRtNzv2
      7Gflq2s4XVXD5PFjEjp3xZFjfP4r32HD1p2s37yDYDiMw2HnphsW8t8/fZyDh47y08ee5oaF
      cykpKsDldPK737/Img1b2bX3ILOmThqcTUAXmjumsbmVksICJo4bTWNzC1aLheLCt79heT1u
      7rn9Jh5+9LuYpkl7Ryd2m43bly/hvXffype/+b2Ez7/3wCFs77iVj9fUwOIFc2hqbiUry4fN
      ZsPtdhMIxpsd7rr1Rrbu3EtNXQMzpkxgxLAhfO8bX6K9o5Onn3+ZfQcTW3f4THXtea/VNTYx
      asRQRo8Y2tu3u/js3QHE50lZumgef/vlb9PR2cXTz7/Mb378PapqasnwevjUF7+e0LlN4uMg
      cnOyznm9oamZ6+fP5pU33iI/Lxevx82e/Ye4/86b+en3v4nPl8Gbb22msbmVhqaWhPrJX8ie
      A4ew2f70fW9k8fw5NDe3kp3lx263YbNZeeKZF/iff/0nTpyuoig/j09/6Rv4Mrz81UMP8s/f
      /zFLr5/3Lme5sIu976NGDKXz7PteVJjPipff4N7bb+JH33uUvNxsfr/ytXP60j9wz228+Nra
      hPrhA5imyZ4Dh8jLzT7n9YamFq6/bjavrl5Pfm4OGV4PwVCI4sICxo0eQUtrG1arleLCfPyZ
      PjZv3w3ExyDEYjFcLmdvk8bFXGj+p9r6RqZMHMuQshLCkTAxM0ZRQR5nqmu5eelCnlmxirzc
      bPyZPqxWK7k5WTz04L1MnjCGoydOJ/whHAqHOXDoCKNHDO19LRqL0tbRycK5M9m0fTc5WZnk
      ZmfR0trOqOFDGTl8SG9zblFhHsOGlFKQn8vS66/DarXwm6dX8Ma6i0+B8UdHjp8/TqWmroHl
      NyzkldVvYRgGkWiUwoJczlTXctuyRbzy5nqy/JnkZPlpbGph+uTxDC0vIRKJYsZMCvJyEjr3
      H/9uSosL+fynPsrW/9/emYdFcZ9x/DMssMst930JrKyAHCKioCIeEM961RgTo9Go8UgeqyZP
      mhpztI02Jn1yGGOepomapGpso6khXqiIiIiCyiGXIiI3y3It17JD/9h9Nmp9ysb0L7Of/2Z2
      dn477+z83nmP+U5eAZ3qLmytrbhb26D/LY3Y2dng5DiEmroGQ3Rzq6oaN1fnx9MBPIy29g4+
      3bOflc8uRNuvxcHelguX8g2fJyWMpqLyDjV1OsNJLS15dcMqHB3s+d2Wd2gwQpDsf7H3wGHW
      PPcUWzatobW9AwsLc0Ne3cbaipkpyWx6fRugm8jWbHoDc3MJ4YoQXt+8jsUrNxolhPcw6hua
      2HfwCC+uXEKfRoOri9N9f9xpU5LIzS+kSdmCtZWMyRMS2Pn5V1TX1PPcU/OIjQon/Vz2Ix/7
      7j37eWHZIkaPHIG6qxtBMEMe5I+5uYQPPtuLg70dy56ah8M/j9JqhC7Tz2HP/u/0dl9LW3sH
      FubmCAikJI9j74HDXC8uY9Hc6YyPj8XF2ZG7NfX0a7UMGeKAh7srdrY2ezB8swAACRBJREFU
      Rk/ED1Jf38jXh/7NS3q7u7k4UXbzNlHhobR3qvnbvm/x8XRn/uxUvj38I719fbg6OzFmVDSr
      N279xce++8v9rF62iPjYSLq6uhEEgaZmFZ98/g1rly9Go+nH1taa3LwCbG1skJjpnKcg6FJh
      otb4VMiDlN28zQ8nzvLy+hX09Pbi4+VBeka2/nwsZsvmtajVXUgkEkRRS3t7J+dzrtDcomLC
      2DgC/HyoqHw0yXVRHODDz/ayaumTTE5KoE+jQavVUl1Tx1ffHmHD6qX09Pbi4uTI0RNnMTMz
      I+1kBpkXcvHx8uC1jS9w8co1o2t+D3LlWiHyoAB+v2EV6q5u/H286O7uYefnX7P++WeIj42i
      s6uLAQYoLC7jxJksNq9bQXdPD96eHpz6GddaVLiC1zau5ptDR/n+x/Sf0qb6eygzMzNEcQBR
      FO9LqUrMzOjr0/x6HADAmcwczmTmIAgCr29eS7k+bDM3l7BwzjTeevdjw7arlj5Jf7+WTVu3
      o9E82sR7Ly2qNv743i4AggP92Lh2OWq9YNzUiYkUFJdSp3861sLcAqWqFVEUUapaWbpoLlKp
      5SM7AIC0kxmkncxAEATeffNlblXpCuM65zORDa/9GQAXZ0dkMkuDwNWRY+kkxo/8RQ6gvqGZ
      rds+AnQ1Cl2BKpSMrEuGtMG0KRPw8/H8vzuAe+0eMtSfDWuWoRVFfLzc2brtDN09vRw8/CMr
      np5PSUUl4oDI0wtmo5AHEejnTXFJBVcLbzzS2APADyfO8sOJswiCwI63XuFWVTVTkhI4lp5J
      UUk5xaUVzJ4+GXc3F+7crWXuzKmkZ2QPqsJpDHUNTWzd9iGgq1HMm5lCn0bDuexczmXn6q6D
      TWspvVlJd08PUeGh5BcU4+XhjlYrGv2U/MMQRZFD3x/n0PfHkUgk7NJHW6rWdv70vu58KORB
      rFvxNCDQ29dHVk4eWTl5qFrbmZI09pEdAEBVdS2/f1sXtU9JSiBWn9I6lp7JsfRMJBIz/rL1
      ZcpuVmJvZ4ODvR1tHZ10lN+kp6cXK5n0kR1Af7+WfQePsO/gEaytZOza8SbVNfU0t6h4/Z0P
      AIiLGcHcGVMRBwY4cDiNA4fTsLSw4KPtW7hdZVwR2N3NhT9seoE3t39MwQ3du8m1okiTUkXY
      sGDyrhcTHOiHsqWVxqZmAvy8kUot6evTED5czndHTz6eDiAyLBR5cADhCjle7m7Y2dpwKuMC
      C2Y/QWOzkqAAXzzdXLl4RRdmJiXEcaemztAtJJVaMn5MLGezLrFwznQAyioquZR3fdCxbayt
      SElOxMLCAidHRxbMTqW0ohJRFBkVPQJli4r5s1LYvecAWlFEamnJ7Ccm8faOTwz7SJ08jvjY
      KC5duY48KIAmZQtdRj72PSomggBfb+RBAQB4e7hxOjOHxfNncLeugeHDghGAIn1KKSV5HPkF
      NwwRTrNShagVWbt8MdW19cybOZV9B48YNba9nS0pyYnYWFvj6e7GgtmpFBSXYW9ny7DgQDrU
      aubPTOG9nTpV1Vdeep4+TT8O9nYE+HpTV9/IlKQEHB3scXZyZP6sFJ0y4iCKlA/a3dlpyD12
      H2BUdITe7qns/nI/6q4uGpqUrF+5hKKScmalJnM68yIHvksz7G/lkt9SUXnH6Mk/LmYE/r5e
      yIMCEEURH093Tp/PYfE8nd3DhgUzIA5QVFKBg70dzz+zAJlMipeHG7Y21jQ2K7G2kpE8Lp71
      RqbcDHa3tyVlYiK2NtZ46e1+vaiUIQ52hAQFolZ3MW/mVHbs/Lu+82wujcoW/H298XB34XJ+
      ARW3qnj/7Vfp1WgYPTKSkxnG1R8AEuNH4unuir+PF6nJ46iqruV8zhUWzZvBnepaRkaFUdvQ
      yJ3qWsJCQ4iLGUFTcwvzZqWw5x//IjjQjzXLF3PhUh6a/n7mTJ/Mp1/sN2psVxcnkhLicHNx
      JsDPmwWzU7mcr2uocHd1oV/bz9wZU3lj+0cIgsDKJQuprqlFMSwYwUyguLSC+oYmdr77BqJW
      i7OTI0pVq1Eyy6BTQ3V2GoKHuwuzUifpa3fXeXLONG5X1zAuPpbrRaUoVa3ExYxAHhRAh7qL
      BbNS+OuuLxEEgRdXPkNpRSWjR0ZSW9/I7WrjpCiiIxRoNP1ERiiIjFAgiiJH0tI5nHaKl1Y/
      y9HjZ/jNtMm8/8kXNClV3K6qYfO65bp0uIcb+QU3Hk8piJCgAAL9vA3LGk0/2ZevEhoylOgI
      BS2tbaSfy6ZTr48dGjIUVVu7YRKUSCQkxEUj01f1QXc3VVBcNujYMqmUhNExSCQ/hVu3bt+l
      SdnCpPFjsLezITe/kKIS3QRsbW3F8GFBXM4vNGxvZmZGdIQCeVAAqrZ2Mi7kGq37ERYajLen
      u2G5p7ePnMvXiAwPJSw0hCZlC6fOXjDknMMVcurqG1GqftIqt7WxZuK4eOxtbbhWVErhjcGP
      G3STcMLomPvWlZZXou7uZmLiaKxkMrIvX6VcLwUeHOhHbHQEvb19nMvORdXaRlxMJPZ2Nobv
      q1rbyc0vGHTsh9u9muYWFcnj/tvuVjIp48fG4ersyI2ym+RdL76v7XBogC+dnV00Ng/+3gCA
      sNAQvD3dDMs6u18lKkJB2LAQGpUtnDqbZaj5KORBRI8YTkenmszsXFrbOnCwtyXQ35erBT8v
      4niY3UvKK+nu7iYpMR4rmZTs3HxDxBsZFkpM5HBUre2cOpdtqE8E+vswNi6Gu7X1nL94Ga2R
      KaDoCAWu9+St1V3d5OYVMComgmHBQ6mtb+RURhb9+tTrpPFjdS3G+QUUlZQjCAJhocG6mxNB
      oPBGueE8DcYQB3viYu7vGCooLgNBIGnsKCQSCZkXL1Ol11UaFRNBhEJOQ5OSM5kXDTdWPl7u
      TBgbR3dPL8dPZxrdAhsXE2HofAKdftWVq4Ukxo9kaIAvlVV3ybhwCa1WxMlxCJMnjEEmld53
      HUwYO4rgof5UVddy7kKu0ZGXr7cnCvnQ+9Zl5eSh7uomNiochTyIa0UlhihbJpMyNSkBqVTK
      mcyLNLeoHk8HYMKECRMmBuexbAM1YcKECRODY3IAJkyYMPErxeQATJgwYeJXyn8AKb9R82Gp
      m0IAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
