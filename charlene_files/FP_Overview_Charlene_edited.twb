<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <DashboardGridOverlay />
    <DashboardGridSize />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='W209_WorldEduStats_Overview' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
        <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        <members>
          <member value='&quot;GPI-Composite&quot;' />
          <member value='&quot;GPI-Primary&quot;' />
          <member value='&quot;GPI-Secondary&quot;' />
          <member value='&quot;GPI-Tertiary&quot;' />
        </members>
      </column>
      <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
        <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        <members>
          <member value='&quot;Population Growth&quot;' />
          <member value='&quot;GDP per Capita Growth&quot;' />
        </members>
      </column>
      <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
        <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        <members>
          <member value='&quot;Composite-All&quot;' />
          <member value='&quot;Composite-Female&quot;' />
          <member value='&quot;Primary-All&quot;' />
          <member value='&quot;Primary-Female&quot;' />
          <member value='&quot;Secondary-All&quot;' />
          <member value='&quot;Secondary-Female&quot;' />
          <member value='&quot;Tertiary-All&quot;' />
          <member value='&quot;Tertiary-Female&quot;' />
        </members>
      </column>
      <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
        <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        <members>
          <member value='&quot;Composite Enrollment-All&quot;' />
          <member value='&quot;Composite Enrollment-Female&quot;' />
          <member value='&quot;Composite-GPI&quot;' />
          <member value='&quot;Primary Female Enrollment&quot;' />
        </members>
      </column>
      <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
        <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
        <members>
          <member value='&quot;Gender Parity Indexï¼ˆGPI)&quot;' />
          <member value='&quot;Enrollment Rate of Female&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Filter On (copy)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Composite-All&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tertiary-All&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='R_Munged_Final_B_Sunday+' inline='true' name='federated.1y9ncyu0j61v2319xoh3217e9wty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='R_Munged_Final_B_Sunday' name='textscan.1l5u1ps12oi0mw14zwktj1peh4jz'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='EdStatsCountry_Modified_KeyCols.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='EdStatsCountry_Modified_KeyCols' name='textscan.0vymfro1seivzv1fk6u2i0wqp6u2'>
            <connection class='textscan' directory='/Users/chenyingcharlene/Desktop/w209-datavis-project/final_tableau_folder' filename='EdStatsCountry_Modified_KeyCols.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[R_Munged_Final_B_Sunday.csv].[Country.Code]' />
              <expression op='[EdStatsCountry_Modified_KeyCols.csv].[Country Code]' />
            </expression>
          </clause>
          <relation connection='textscan.1l5u1ps12oi0mw14zwktj1peh4jz' name='R_Munged_Final_B_Sunday.csv' table='[R_Munged_Final_B_Sunday#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country.Name' ordinal='0' />
              <column datatype='string' name='Country.Code' ordinal='1' />
              <column datatype='string' name='Indicator.Name' ordinal='2' />
              <column datatype='string' name='Indicator.Code' ordinal='3' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
              <column datatype='real' name='Indicator.Value' ordinal='5' />
              <column datatype='real' name='GDP.Capita.Constant' ordinal='6' />
              <column datatype='real' name='GDP.Capita.PPP' ordinal='7' />
              <column datatype='real' name='GPI.Primary' ordinal='8' />
              <column datatype='real' name='GPI.Secondary' ordinal='9' />
              <column datatype='real' name='GPI.Tertiary' ordinal='10' />
              <column datatype='real' name='Primary.Enrollment.All' ordinal='11' />
              <column datatype='real' name='Primary.Enrollment.Female' ordinal='12' />
              <column datatype='real' name='Primary.Enrollment.Male' ordinal='13' />
              <column datatype='real' name='Secondary.Enrollment.All' ordinal='14' />
              <column datatype='real' name='Secondary.Enrollment.Female' ordinal='15' />
              <column datatype='real' name='Secondary.Enrollment.Male' ordinal='16' />
              <column datatype='real' name='Tertiary.Enrollment.All' ordinal='17' />
              <column datatype='real' name='Tertiary.Enrollment.Female' ordinal='18' />
              <column datatype='real' name='Tertiary.Enrollment.Male' ordinal='19' />
              <column datatype='real' name='Population.Growth' ordinal='20' />
              <column datatype='real' name='Total.Population' ordinal='21' />
              <column datatype='real' name='Pct.Growth' ordinal='22' />
              <column datatype='string' name='Indicator' ordinal='23' />
              <column datatype='string' name='Education.Indicators' ordinal='24' />
              <column datatype='string' name='Macro.Indicators' ordinal='25' />
              <column datatype='date' date-parse-format='yyyy' name='Year.X' ordinal='26' />
              <column datatype='date' date-parse-format='yyyy' name='Year.Y' ordinal='27' />
              <column datatype='real' name='Indicator.Value.X' ordinal='28' />
              <column datatype='real' name='Indicator.Value.Y' ordinal='29' />
              <column datatype='string' name='Indicator.Code.X' ordinal='30' />
              <column datatype='string' name='Indicator.Code.Y' ordinal='31' />
              <column datatype='string' name='Indicator.X' ordinal='32' />
              <column datatype='string' name='Indicator.Y' ordinal='33' />
            </columns>
          </relation>
          <relation connection='textscan.0vymfro1seivzv1fk6u2i0wqp6u2' name='EdStatsCountry_Modified_KeyCols.csv' table='[EdStatsCountry_Modified_KeyCols#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country Code' ordinal='0' />
              <column datatype='string' name='Short Name' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
              <column datatype='string' name='Income_Group' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Country.Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Name]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.Constant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.Constant]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.Constant</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP.Capita.PPP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP.Capita.PPP]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GDP.Capita.PPP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Primary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Primary</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Secondary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Secondary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Secondary</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GPI.Tertiary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GPI.Tertiary]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>GPI.Tertiary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.All</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Female</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Primary.Enrollment.Male</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.All</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Female</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Secondary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Secondary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Secondary.Enrollment.Male</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.All</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.All]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.All</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Female</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Female]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Female</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tertiary.Enrollment.Male</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tertiary.Enrollment.Male]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Tertiary.Enrollment.Male</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Population.Growth</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Population]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Total.Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pct.Growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pct.Growth]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Pct.Growth</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Education.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Education.Indicators</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Macro.Indicators</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Macro.Indicators]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Macro.Indicators</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.X</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.X</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year.Y</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Year.Y</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.X</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Value.Y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator.Value.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Value.Y</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.X</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Code.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Code.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Code.Y</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.X</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.X]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.X</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator.Y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Indicator.Y]</local-name>
            <parent-name>[R_Munged_Final_B_Sunday.csv]</parent-name>
            <remote-alias>Indicator.Y</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Short Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Short Name]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Short Name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income_Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income_Group]</local-name>
            <parent-name>[EdStatsCountry_Modified_KeyCols.csv]</parent-name>
            <remote-alias>Income_Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;' value='Pop. Growth' />
          <alias key='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' value='Enrollment Ratio of Female' />
        </aliases>
      </column>
      <column caption='Filter On' datatype='real' name='[Calculation_145592933528252417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Composite Enrollment-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite Enrollment-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Composite-GPI&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Primary Female Enrollment&quot; THEN [Primary.Enrollment.Female]&#10;END' />
      </column>
      <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
      </column>
      <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
      </column>
      <column caption='GPI.Composite*100' datatype='real' name='[Calculation_4658762711690080257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_146648464326504452]*100' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
      </column>
      <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
      </column>
      <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
      </column>
      <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
      </column>
      <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
      </column>
      <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;High income&quot;' value='High' />
          <alias key='&quot;Low income&quot;' value='Low' />
          <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
          <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year.X]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_146648464326504452]' derivation='Sum' name='[sum:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4658762711683104768]' derivation='Sum' name='[sum:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country.Code,Income Group)' hidden='true' name='[Action (Country.Code,Income Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Code]' />
          <groupfilter function='level-members' level='[Income_Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Country.Name)' hidden='true' name='[Action (Country.Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country.Name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group name='[Income ex Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Region ex. Null]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <aliases>
          <alias key='(&quot;East Asia &amp; Pacific&quot;)' value='East Asia' />
          <alias key='(&quot;Europe &amp; Central Asia&quot;)' value='Europe' />
          <alias key='(&quot;Latin America &amp; Caribbean&quot;)' value='Latin America' />
          <alias key='(&quot;Middle East &amp; North Africa&quot;)' value='MENA' />
        </aliases>
      </group>
      <group caption='Years.Cont.80' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Years80]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='1980' function='range' level='[yr:Year:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ds639c/Desktop/UCB_DataScience/w209 - Data Viz/w209-datavis-project/final_tableau_folder/R_Munged_Final_B_Sunday+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2018 09:36:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='170976' timestamp-start='2018-12-10 21:36:35.683' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Name</remote-alias>
              <ordinal>0</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Code</remote-alias>
              <ordinal>1</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Name</remote-alias>
              <ordinal>2</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code</remote-alias>
              <ordinal>3</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value</remote-alias>
              <ordinal>5</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.Constant</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.Constant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.Constant</remote-alias>
              <ordinal>6</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP.Capita.PPP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP.Capita.PPP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP.Capita.PPP</remote-alias>
              <ordinal>7</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Primary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Primary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Primary</remote-alias>
              <ordinal>8</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Secondary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Secondary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Secondary</remote-alias>
              <ordinal>9</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GPI.Tertiary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GPI.Tertiary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GPI.Tertiary</remote-alias>
              <ordinal>10</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.All</remote-alias>
              <ordinal>11</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Female</remote-alias>
              <ordinal>12</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Primary.Enrollment.Male</remote-alias>
              <ordinal>13</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.All</remote-alias>
              <ordinal>14</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Female</remote-alias>
              <ordinal>15</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Secondary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Secondary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Secondary.Enrollment.Male</remote-alias>
              <ordinal>16</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.All</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.All]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.All</remote-alias>
              <ordinal>17</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Female</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Female</remote-alias>
              <ordinal>18</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tertiary.Enrollment.Male</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tertiary.Enrollment.Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tertiary.Enrollment.Male</remote-alias>
              <ordinal>19</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population.Growth</remote-alias>
              <ordinal>20</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total.Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Population</remote-alias>
              <ordinal>21</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pct.Growth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pct.Growth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pct.Growth</remote-alias>
              <ordinal>22</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>467</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator</remote-alias>
              <ordinal>23</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Education.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Education.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Education.Indicators</remote-alias>
              <ordinal>24</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Macro.Indicators</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Macro.Indicators]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Macro.Indicators</remote-alias>
              <ordinal>25</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.X</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.X</remote-alias>
              <ordinal>26</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year.Y</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year.Y</remote-alias>
              <ordinal>27</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.X</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.X</remote-alias>
              <ordinal>28</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Value.Y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator.Value.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Value.Y</remote-alias>
              <ordinal>29</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.X</remote-alias>
              <ordinal>30</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Code.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Code.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Code.Y</remote-alias>
              <ordinal>31</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.X</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.X</remote-alias>
              <ordinal>32</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator.Y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator.Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator.Y</remote-alias>
              <ordinal>33</ordinal>
              <family>R_Munged_Final_B_Sunday.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>34</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Short Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Short Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Short Name</remote-alias>
              <ordinal>35</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>36</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Income_Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Income_Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income_Group</remote-alias>
              <ordinal>37</ordinal>
              <family>EdStatsCountry_Modified_KeyCols.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.419003' group-percentage='0.0669782' measure-ordering='alphabetic' measure-percentage='0.429907' parameter-percentage='0.0841122' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country.Code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DNK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GNQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ISR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OMN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TJK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XKX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BHR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HRV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HTI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MDG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NGA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PYF&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;URY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GHA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MIC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TCA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VNM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EMU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GTM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LTU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SMR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TTO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ITA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MNG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TKM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZAF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DEU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GIB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LDC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MLI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NRU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VUT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BFA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HPC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KNA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NCL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SVN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UKR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BIH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CUB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GAB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HUN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LBN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QAT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SXM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BEL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CMR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HKG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KHM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NAC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PRI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TZA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IRQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MLT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NZL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TGO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WLD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AUT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ERI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MUS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AZE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GUY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LVA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MWI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PNG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EUU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KIR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SVK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UGA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CPV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FJI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KWT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PSE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UMC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CAF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DZA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LMY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MNP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZMB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DMA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GNB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LIE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MMR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OED&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;THA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WSM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CYM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LBR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NLD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SYC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UZB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BDI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HIC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KGZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;POL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SSD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TUV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ECU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JOR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LSO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MOZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SLV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZWE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AGO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IMN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LBY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NOR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RWA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VCT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country.Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, Dem. Peopleâ€™s Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464326504452:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_4658762711683104768:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
          <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
        </column>
        <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
          <calculation class='tableau' formula='&quot;Population Growth&quot;' />
        </column>
        <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
          <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
        </column>
        <column caption='Filter On' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Composite-GPI&quot;'>
          <calculation class='tableau' formula='&quot;Composite-GPI&quot;' />
        </column>
        <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
          <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter5' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter6' name='[Action11]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter2' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter3' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight6' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight7' name='[Action15]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter7' name='[Action16]'>
      <activation auto-clear='true' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight7 1 1 1 1 1 1 1' name='[Action17]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight4 1 1 1 1 1 1 1' name='[Action18]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter7 1 1 1 1 1 1 1' name='[Action19]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region ex. Null' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Filter1 1 1 1 1 1 1 1' name='[Action20]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight3 1 1 1 1 1 1 1' name='[Action21]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight1 1 1 1 1 1 1 1' name='[Action22]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter6 1 1 1 1 1 1 1' name='[Action23]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter3 1 1 1 1 1 1 1' name='[Action24]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight2 1 1 1 1 1 1 1' name='[Action25]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter2 1 1 1 1 1 1 1' name='[Action26]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight6 1 1 1 1 1 1 1' name='[Action27]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Highlight5 1 1 1 1 1 1 1' name='[Action28]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter5 1 1 1 1 1 1 1' name='[Action29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Scatter.Filter.Problems' type='sheet' worksheet='Enroll.FE.v.POP.Scatter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash-Scatter.Filter.Problems' />
      </command>
    </action>
    <action caption='Filter4 1 1 1 1 1 1 1' name='[Action30]'>
      <activation type='on-hover' />
      <source dashboard='Overview (8)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (8)' />
      </command>
    </action>
    <action caption='Filter4 1 1 1 1 1 1' name='[Action31]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight1 1 1 1 1 1 1' name='[Action32]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight4 1 1 1 1 1 1' name='[Action33]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter1 1 1 1 1 1 1' name='[Action34]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter6 1 1 1 1 1 1' name='[Action35]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight5 1 1 1 1 1 1' name='[Action36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight6 1 1 1 1 1 1' name='[Action37]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter2 1 1 1 1 1 1' name='[Action38]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Overview Enrol Ratio' />
        <exclude-sheet name='Overview GPI' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight3 1 1 1 1 1 1' name='[Action39]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter5 1 1 1 1 1 1' name='[Action40]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight7 1 1 1 1 1 1' name='[Action41]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight2 1 1 1 1 1 1' name='[Action42]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter3 1 1 1 1 1 1' name='[Action43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (7)' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Filter7 1 1 1 1 1 1' name='[Action44]'>
      <activation auto-clear='true' />
      <source dashboard='Overview (7)' type='sheet' worksheet='Overview Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (7)' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview GPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Overview Enrol Ratio' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter1' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Enroll Female' />
        <exclude-sheet name='GPI' />
        <exclude-sheet name='Time-chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight4' name='[Action7]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI,Overview Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight5' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:brush'>
        <param name='exclude' value='Enroll Female,GPI,Overview Enrol Ratio,Overview GPI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter4' name='[Action9]'>
      <activation type='on-hover' />
      <source dashboard='Overview' type='sheet' worksheet='Time-chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Time-chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Charlene_generaldistrib'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]'>
            <groupfilter from='&quot;High income&quot;' function='range' level='[none:Income_Group:nk]' to='&quot;Upper middle income&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' field-type='quantitative' max='18111580.128675207' min='-11778625.686535265' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' field-type='quantitative' max='11995195.326984644' min='-6492450.4920529462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#f5f5f5' />
            <format attr='color' data-class='total' value='#333333' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2b3e50' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk] * [federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Composite II PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Composite PoC'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Short Name1' datatype='string' name='[Short Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Short Name]' derivation='None' name='[none:Short Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]'>
            <groupfilter function='member' level='[none:Short Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1980' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1981' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1982' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1983' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1984' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1985' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1987' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1988' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1989' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1991' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1992' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1993' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1994' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1995' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1996' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1997' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1998' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Short Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dual.Axis.Test'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' included-values='in-range'>
            <min>#1970-01-01 00:00:00#</min>
            <max>#2015-07-06 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll Female'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Rate of Female</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='18' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='22' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#57b99d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
            <format attr='color' value='#4ea68d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' value='54' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rates-All:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.All.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' scope='cols' value='Average Composite Enrollment Rate' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country.Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country.Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run fontalignment='1'>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' value='Income Group'>
              <formatted-text>
                <run fontalignment='1'>Income Group</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enroll.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Composite Female Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='Average Composite Female Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Composite Female Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='rows' value='Enrollment Rate (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure'>
              <formatted-text>
                <run>Enrollment Measure</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Enrollment.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.GDP.Dual'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Sum' name='[sum:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Calculation_146648464322281472:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Composite Enrollment Rate (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capital Growth (%)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#a0cbe8'>Population Growth</run>
            <run fontalignment='1'> | </run>
            <run fontalignment='1' fontcolor='#f9a655'>Enrollment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='level-members' level='[none:Country.Code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='58' />
            <format attr='width' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' value='58' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1994-12-25 12:24:08.520#' major-spacing='2.0' major-units='years' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='FE.Comp.POP.Dual.Line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Sum' name='[sum:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Sum' name='[sum:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Enrollment.All.Composite (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter from='&quot;Bahrain&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Brazil&quot;' />
              <groupfilter from='&quot;Bulgaria&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Gabon&quot;' />
              <groupfilter from='&quot;Georgia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Indonesia&quot;' />
              <groupfilter from='&quot;Iraq&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Kiribati&quot;' />
              <groupfilter from='&quot;Kosovo&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Lao PDR&quot;' />
              <groupfilter from='&quot;Latvia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Macao SAR, China&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Mexico&quot;' />
              <groupfilter from='&quot;Middle income&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Romania&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;San Marino&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter from='&quot;Sudan&quot;' function='range' level='[none:Country.Name:nk]' to='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1989</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='rows' value='Female Enroll (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]' scope='rows' value='Pop. Growth (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Composite Enrollment Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk] * ([federated.1y9ncyu0j61v2319xoh3217e9wty].[sum:Population.Growth:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]))</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GDP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>GDP per Capital Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='GDP per Capita Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GDP per Capita YoY Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='line-interpolation' value='step' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GPI&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d3b348' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Enroll.TEST'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1991</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk] + [federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk])</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Comp.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run fontalignment='1'>&gt; Composite Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' filter-group='3' included-values='in-range'>
            <min>1970</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='rows' value='Composite Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs GDP Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Composite.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Enrollment Gender Parity Index vs Annual Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year.Y]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year.Y]' derivation='Year' name='[yr:Year.Y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]'>
            <groupfilter function='member' level='[yr:Year.Y:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year.Y:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' field-type='quantitative' max='1.8' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' scope='cols' value='Average Enrollment GPI' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP.Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Dropdown.Indiv'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='GPI Indicators' datatype='string' name='[Enrollment Indicators (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;GPI-Composite&quot;'>
              <calculation class='tableau' formula='&quot;GPI-Composite&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='GPI.Values' datatype='real' name='[Enrollment.Values (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Enrollment Indicators (copy)]&#10;WHEN &quot;GPI-Composite&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;GPI-Primary&quot; THEN [GPI.Primary]&#10;WHEN &quot;GPI-Secondary&quot; THEN [GPI.Secondary]&#10;WHEN &quot;GPI-Tertiary&quot; THEN [GPI.Tertiary]&#10;END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrollment.Values (copy)]' derivation='Avg' name='[avg:Enrollment.Values (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country.Code]' />
              <groupfilter function='level-members' level='[Income_Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Code,Income Group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]' scope='rows' value='Gender Parity Index' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontname='Tableau Light' fontsize='18'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Enrollment Indicators (copy)]' value='Gender Parity Index'>
              <formatted-text>
                <run fontalignment='1'>Gender Parity Index</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Values (copy):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Primary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Primary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]' scope='rows' value='Primary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Second.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Secondary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]' scope='rows' value='Secondary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GPI.Tertiary.Indiv.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]</run>
            <run>&gt; Tertiary Education Enrollment Gender Parity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]'>
            <groupfilter function='member' level='[none:Country.Code:nk]' member='&quot;FRA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]' scope='rows' value='Tertiary Education Enrollment Gender Parity Index' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Composite Gender Parity Index:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='477' />
                <format attr='maxheight' value='477' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Macro.PullDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GDP.Constant.Growth' datatype='real' name='[Calculation_146648464323334145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='Pop.Pct.Growth.Calculated' datatype='real' name='[Calculation_146648464324702210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.MA.Composite.Labels' datatype='string' name='[Enrollment.FE.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.MA&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.MA&quot;&#10;THEN &quot;Enrollment-Male&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.Male.Composite' datatype='real' name='[Enrollment.Female.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.FE.Composite.Labels (copy)] = &quot;Enrollment-Male&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column datatype='real' name='[GDP.Capita.Constant]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP.Capita.PPP]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='real' name='[GPI.Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Secondary]' role='measure' type='quantitative' />
            <column datatype='real' name='[GPI.Tertiary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value.X]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value.Y]' role='measure' type='quantitative' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464323334145]' derivation='Avg' name='[avg:Calculation_146648464323334145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464324702210]' derivation='Avg' name='[avg:Calculation_146648464324702210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.Female.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.Female.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.Constant]' derivation='Avg' name='[avg:GDP.Capita.Constant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP.Capita.PPP]' derivation='Avg' name='[avg:GDP.Capita.PPP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Primary]' derivation='Avg' name='[avg:GPI.Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Secondary]' derivation='Avg' name='[avg:GPI.Secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Tertiary]' derivation='Avg' name='[avg:GPI.Tertiary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.X]' derivation='Avg' name='[avg:Indicator.Value.X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value.Y]' derivation='Avg' name='[avg:Indicator.Value.Y:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator.Value]' derivation='Avg' name='[avg:Indicator.Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pct.Growth]' derivation='Avg' name='[avg:Pct.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.All]' derivation='Avg' name='[avg:Primary.Enrollment.All:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.Female.Composite (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.Constant:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GDP.Capita.PPP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464323334145:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Secondary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Tertiary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.X:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Indicator.Value.Y:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Pct.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464324702210:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.All:qk]&quot;</bucket>
              <bucket>&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' />
              <tooltip column='[Parameters].[Filter On (copy)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Main.Scatter'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Macro Outcomes' datatype='string' name='[Filter On (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Population Growth&quot;'>
              <calculation class='tableau' formula='&quot;Population Growth&quot;' />
            </column>
            <column caption='Enrollment Indicators' datatype='string' name='[Filter On (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Primary-Female&quot;'>
              <calculation class='tableau' formula='&quot;Primary-Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Macro.Values' datatype='real' name='[Filter On (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy 2)]&#10;WHEN &quot;Population Growth&quot; THEN [Population.Growth]&#10;WHEN &quot;GDP per Capita Growth&quot; THEN [Calculation_146648464322281472]&#10;END' />
            </column>
            <column caption='Enrollment.Values' datatype='real' name='[Filter On (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Filter On (copy)]&#10;WHEN &quot;Composite-All&quot; THEN [GPI.Composite (copy)]&#10;WHEN &quot;Composite-Female&quot; THEN [Enrollment.All.Composite (copy)]&#10;WHEN &quot;Primary-All&quot; THEN [Primary.Enrollment.All]&#10;WHEN &quot;Primary-Female&quot; THEN [Primary.Enrollment.Female]&#10;WHEN &quot;Secondary-All&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Secondary-Female&quot; THEN [Secondary.Enrollment.All]&#10;WHEN &quot;Tertiary-All&quot; THEN [Tertiary.Enrollment.All]&#10;WHEN &quot;Tertiary-Female&quot; THEN [Tertiary.Enrollment.Female]&#10;END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.All]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter On (copy 2)]' derivation='Avg' name='[avg:Filter On (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Filter On (copy)]' derivation='Avg' name='[avg:Filter On (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]' scope='rows' value='Average Annual Growth in Macro Outcome Variable (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' scope='cols' value='Average Enrollment Rate (%)' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' value='53' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Filter On (copy 2)]' value='Macro Outcome (Y-Axis)'>
              <formatted-text>
                <run>Macro Outcome (Y-Axis)</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Filter On (copy)]' value='Enrollment Measure (X-Axis)'>
              <formatted-text>
                <run>Enrollment Measure (X-Axis)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' value='Highlight Country'>
              <formatted-text>
                <run>Highlight Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Macro Outcome Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate Value:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy 2):qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Enrol Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Enrollment Rate Female (%)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action31]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='22' />
            <format attr='tick-color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' value='#2f3e4e' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview GPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Gender Parity Index (GPI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action31]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='#f5f5f5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
            <format attr='band-color' scope='rows' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview GPI (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff'>Gender Parity Index (GPI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action34]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' scope='cols' value='' />
            <format attr='height' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='28' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#2f3e4e' />
            <format attr='band-color' scope='rows' value='#2f3e4e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[tyr:Year:ok]' user:ui-action-filter='[Action9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#8cd17d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='false' />
            <format attr='background-color' value='#2f3e4e' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Highlight Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
              <geometry column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;% </run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#212f3e' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Latitude (generated)]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='POP.for.Drill.Down'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Population Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='Attribute' name='[attr:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Country.Name:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Population Growth (%)' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Selected Country(ies)'>
              <formatted-text>
                <run>Selected Country(ies)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group' />
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Female Primary Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Primary.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Primary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary.Enrollment.Female]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary.Enrollment.Female]' derivation='Avg' name='[avg:Primary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]' scope='cols' value='Average Female Primary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Primary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Primary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sec.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Secondary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Secondary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Secondary.Enrollment.Female]' derivation='Avg' name='[avg:Secondary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]' scope='cols' value='Average Female Secondary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Secondary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Secondary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.GDP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs GDP per Capita Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GDP.Capita.PPP.Growth' datatype='real' name='[Calculation_146648464322281472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;NY.GDP.PCAP.PP.KD&quot;&#10;THEN [Pct.Growth]&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pct.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_146648464322281472]' derivation='Avg' name='[avg:Calculation_146648464322281472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='Average per Capita GDP Growth (%)' />
            <format attr='auto-subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. GDP per Capita Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464322281472:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ter.FE.v.POP.Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Female Tertiary Education Enrollment Rate vs Population Growth&#10;</run>
            <run fontsize='12'>(1980-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
          </datasources>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[Income_Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower Middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper Middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Population.Growth]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Tertiary.Enrollment.Female]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='Attribute' name='[attr:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='Attribute' name='[attr:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population.Growth]' derivation='Avg' name='[avg:Population.Growth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tertiary.Enrollment.Female]' derivation='Avg' name='[avg:Tertiary.Enrollment.Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Code]' derivation='None' name='[none:Country.Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Group]' derivation='None' name='[none:Income_Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]'>
            <groupfilter function='level-members' level='[none:Income_Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]' />
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Years80]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]' scope='rows' value='Avg. Annual Population.Growth (%)' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]' scope='cols' value='Average Female Tertiary Education Enrollment Rate (%)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' field-type='nominal' max-size='1' min-size='0.2' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' value='Geographic Region'>
              <formatted-text>
                <run>Geographic Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' value='Income Group'>
              <formatted-text>
                <run>Income Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' value='Select Country'>
              <formatted-text>
                <run>Select Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' />
              <size column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Income_Group:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]' />
              <text column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
              <lod column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Code:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Code:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Region:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Income Group:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Annual Population Growth (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Avg. Female Tertiary Education Enrollment Rate (%):&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='minheight' value='620' />
                <format attr='maxheight' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Population.Growth:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Tertiary.Enrollment.Female:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Time-chart'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Overview Index' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Enrollment Rate of Female&quot;'>
              <calculation class='tableau' formula='&quot;Enrollment Rate of Female&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
            <column caption='GPI.Composite.Labels' datatype='string' name='[Calculation_146648464325611523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.ENR.PRIM.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.SECO.FM.ZS&quot;&#10;OR [Indicator.Code] = &quot;SE.ENR.TERT.FM.ZS&quot;&#10;THEN &quot;GPI&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='GPI.Composite' datatype='real' name='[Calculation_146648464326504452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_146648464325611523] = &quot;GPI&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Overview Index' datatype='real' name='[Calculation_4658762711683104768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Gender Parity Indexï¼ˆGPI)&quot; THEN [Calculation_146648464326504452]&#10;WHEN &quot;Enrollment Rate of Female&quot; THEN [GPI.Composite (copy)]&#10;END' />
            </column>
            <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Enrollment.Female.Composite' datatype='real' name='[Enrollment.All.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Enrollment.All.Composite.Labels (copy)] = &quot;Enrollment-Female&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.FE.Composite.Labels' datatype='string' name='[Enrollment.All.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR.FE&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR.FE&quot;&#10;THEN &quot;Enrollment-Female&quot;&#10;ELSE NULL END' />
            </column>
            <column aggregation='Avg' caption='Enrollment.All.Composite' datatype='real' name='[GPI.Composite (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [GPI.Composite.Labels (copy)] = &quot;Enrollment-All&quot;&#10;THEN [Indicator.Value]&#10;ELSE NULL END' />
            </column>
            <column caption='Enrollment.All.Composite.Labels' datatype='string' name='[GPI.Composite.Labels (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Indicator.Code] = &quot;SE.PRM.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.SEC.ENRR&quot;&#10;OR [Indicator.Code] = &quot;SE.TER.ENRR&quot;&#10;THEN &quot;Enrollment-All&quot;&#10;ELSE NULL END' />
            </column>
            <column datatype='string' name='[Indicator.Code]' role='dimension' type='nominal' />
            <column datatype='real' name='[Indicator.Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_146648464326504452]' derivation='Avg' name='[avg:Calculation_146648464326504452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4658762711683104768]' derivation='Avg' name='[avg:Calculation_4658762711683104768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Enrollment.All.Composite (copy)]' derivation='Avg' name='[avg:Enrollment.All.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GPI.Composite (copy)]' derivation='Avg' name='[avg:GPI.Composite (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]'>
            <groupfilter function='level-members' level='[Country.Name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]'>
            <groupfilter function='level-members' level='[none:Country.Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' filter-group='6' included-values='in-range-or-null'>
            <min>#1970-07-19 00:00:00#</min>
            <max>#2015-08-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]</column>
            <column>[federated.1y9ncyu0j61v2319xoh3217e9wty].[Action (Country.Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' field-type='quantitative' major-origin='#1980-01-01 00:00:00#' major-spacing='1.0' major-units='years' range-type='uniform' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' scope='cols' value='Years' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#2f3e4e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' value='Years' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]' />
              <tooltip column='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]&gt;</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>Enrollment Rate:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:GPI.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>ER of Female:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Enrollment.All.Composite (copy):qk]&gt;%</run>
                <run>Ã†&#10;</run>
                <run fontcolor='#787878'>GPI:&#9;</run>
                <run bold='true'>&lt;[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_146648464326504452:qk]&gt;</run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#57b99d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='879' />
                <format attr='maxwidth' value='879' />
                <format attr='minheight' value='525' />
                <format attr='maxheight' value='525' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]</rows>
        <cols>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dash-Scatter.Filter.Problems'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='54625' id='1' name='Enroll.FE.v.POP.Scatter' w='82700' x='600' y='625' />
        <zone h='5500' id='2' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='12800' x='84300' y='875' />
        <zone h='5375' id='3' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='12800' x='84300' y='7125' />
        <zone h='5500' id='4' mode='checkdropdown' name='Enroll.FE.v.POP.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='12500' x='84200' y='13375' />
        <zone h='20125' id='5' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14600' x='84300' y='19125' />
        <zone h='12750' id='6' name='Enroll.FE.v.POP.Scatter' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='84100' y='40000' />
        <zone h='44875' id='7' name='GPI.Dropdown.Indiv' w='47000' x='600' y='56500' />
        <zone h='44750' id='9' name='FE.Comp.POP.Dual.Bar' w='51100' x='48600' y='57000' />
        <zone h='6875' id='10' name='FE.Comp.POP.Dual.Bar' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='13200' x='43800' y='55250' />
      </zones>
    </dashboard>
    <dashboard name='DrillDown.Dash'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Annual Level Details for </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty'>
        <column datatype='string' name='[Country.Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country.Name]' derivation='None' name='[none:Country.Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37250' id='1' name='GDP.for.Drill.Down' w='44000' x='44700' y='60000' />
        <zone h='56500' id='4' name='GDP.for.Drill.Down' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' w='11800' x='88100' y='2500' />
        <zone h='37500' id='5' name='POP.for.Drill.Down' w='44200' x='0' y='60125' />
        <zone h='36625' id='8' name='Enrollment.Dropdown.Indiv' w='43800' x='100' y='18500' />
        <zone h='9500' id='9' mode='checkdropdown' name='Enrollment.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' w='25100' x='100' y='1500' />
        <zone custom-title='true' h='9250' id='11' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='43800' x='0' y='10625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Enrollment Measure</run>
          </formatted-text>
        </zone>
        <zone h='37500' id='12' name='GPI.Dropdown.Indiv' w='43700' x='44700' y='17500' />
        <zone h='5875' id='14' name='GPI.Dropdown.Indiv' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='27000' x='52000' y='2375' />
        <zone custom-title='true' h='7250' id='15' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='paramctrl' w='44000' x='44200' y='10500'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='14'>Gender Parity Index</run>
          </formatted-text>
        </zone>
        <zone h='4250' id='20' type='text' w='27300' x='24500' y='1625'>
          <formatted-text>
            <run fontname='Tableau Light' fontsize='18'>Annual Level Details for</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Maps_basicdistribution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='83000' id='1' name='Charlene_generaldistrib' w='96400' x='600' y='8750' />
        <zone h='9500' id='7' name='Charlene_generaldistrib' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' w='14000' x='85700' y='1125' />
        <zone custom-title='true' fixed-size='44' h='7000' id='8' is-fixed='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='83300' x='600' y='1500'>
          <formatted-text>
            <run fontcolor='#1b1b1b' fontname='Tableau Light' fontsize='15'>Enrollment based on income group</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='21125' id='11' name='Time-chart' show-title='false' w='95667' x='3500' y='62625' />
        <zone h='15625' id='28' type='empty' w='18500' x='78833' y='9500'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#3493af' />
          </zone-style>
        </zone>
        <zone h='15625' id='26' type='empty' w='19167' x='58333' y='9500'>
          <zone-style>
            <format attr='border-color' value='#72c0c7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#72c0c7' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2375'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='13875' id='10' name='Overview Enrol Ratio' w='37167' x='59333' y='36875' />
        <zone h='13000' id='8' name='Overview GPI' w='37000' x='59333' y='52125' />
        <zone h='7500' id='14' name='GPI' show-title='false' w='13083' x='81500' y='28125' />
        <zone h='5000' id='12' name='Enroll Female' show-title='false' w='18100' x='60600' y='28250' />
        <zone forceUpdate='true' h='9125' id='15' type='text' w='17000' x='82750' y='11000'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12125' id='16' type='text' w='16667' x='61167' y='17375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Ratio</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10800' x='70400' y='27750'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13200' x='61300' y='27875'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='125' id='31' type='empty' w='10750' x='82250' y='28125'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='41500' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9625' />
        <zone h='3875' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='14000' x='42167' y='46250' />
        <zone h='5875' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2625' />
        <zone h='13500' id='25' type='empty' w='39000' x='58417' y='51000'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='14000' id='24' type='empty' w='38917' x='58417' y='35750'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview (7)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='15857' id='25' type='empty' w='39000' x='58167' y='44857'>
          <zone-style>
            <format attr='border-color' value='#12827f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='15000' id='24' type='empty' w='39000' x='58083' y='27286'>
          <zone-style>
            <format attr='border-color' value='#12827f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29000' id='11' name='Time-chart' show-title='false' w='94500' x='2750' y='65143' />
        <zone h='15714' id='28' type='empty' w='18750' x='78333' y='9429'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#d3b348' />
          </zone-style>
        </zone>
        <zone h='15571' id='26' type='empty' w='19333' x='58167' y='9571'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#57b99d' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2125'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='12857' id='8' name='Overview GPI' w='37583' x='58833' y='46714' />
        <zone h='14429' id='10' name='Overview Enrol Ratio' w='37167' x='58833' y='27857' />
        <zone h='7429' id='14' name='GPI' show-title='false' w='13083' x='81750' y='19143' />
        <zone h='6143' id='12' name='Enroll Female' show-title='false' w='8750' x='61667' y='19000' />
        <zone forceUpdate='true' h='9143' id='15' type='text' w='10333' x='82917' y='10143'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12000' id='16' type='text' w='13417' x='62083' y='8714'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Rate</run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10750' x='70417' y='18625'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13167' x='60667' y='19000'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='143' id='31' type='empty' w='10750' x='81667' y='19143'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='51286' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9571' />
        <zone h='3143' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='38750' x='58333' y='5286' />
        <zone h='6571' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2714' />
      </zones>
    </dashboard>
    <dashboard name='Overview (8)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='color' value='#ffffff' />
          <format attr='background-color' value='#2f3e4e' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='15857' id='25' type='empty' w='39000' x='58167' y='44857'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='15000' id='24' type='empty' w='39000' x='58083' y='27286'>
          <zone-style>
            <format attr='border-color' value='#3493af' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='29000' id='11' name='Time-chart' show-title='false' w='94500' x='2750' y='65143' />
        <zone h='15714' id='28' type='empty' w='18750' x='78333' y='9429'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#d3b348' />
          </zone-style>
        </zone>
        <zone h='15571' id='26' type='empty' w='19333' x='58167' y='9571'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#57b99d' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='7' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='27750' x='29583' y='2125'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='11'>Overview Index</run>
          </formatted-text>
        </zone>
        <zone h='12857' id='8' name='Overview GPI' w='37583' x='58833' y='46714' />
        <zone h='14429' id='10' name='Overview Enrol Ratio' w='37167' x='58833' y='27857' />
        <zone h='7429' id='14' name='GPI' show-title='false' w='13083' x='81750' y='19143' />
        <zone h='6143' id='12' name='Enroll Female' show-title='false' w='8750' x='61667' y='19000' />
        <zone forceUpdate='true' h='9143' id='15' type='text' w='10333' x='82917' y='10143'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Female / Male </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='20'>    GPI</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12000' id='16' type='text' w='13417' x='62083' y='8714'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>Enrollment Rate</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Ã† </run>
            <run>Ã†&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>    Female</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6000' id='17' type='text' w='10750' x='70417' y='18625'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='22'>%</run>
          </formatted-text>
        </zone>
        <zone h='125' id='30' type='empty' w='13167' x='60667' y='19000'>
          <zone-style>
            <format attr='border-color' value='#f5f5f5' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='143' id='31' type='empty' w='10750' x='81667' y='19143'>
          <zone-style>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='51286' id='32' name='Overview Map' show-title='false' w='53833' x='3500' y='9571' />
        <zone h='3143' id='33' name='Overview Map' pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' show-title='false' type='color' w='38750' x='58333' y='5286' />
        <zone h='6571' id='34' name='Overview Map' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlighter' w='25000' x='3417' y='2714' />
      </zones>
    </dashboard>
    <dashboard name='Scatter.Dash.Final'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='R_Munged_Final_B_Sunday+' name='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      </datasources>
      <datasource-dependencies datasource='federated.1y9ncyu0j61v2319xoh3217e9wty' />
      <zones>
        <zone h='86125' id='1' name='Main.Scatter' w='80000' x='1400' y='10125' />
        <zone h='5500' id='2' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' w='16000' x='82200' y='10125' />
        <zone h='5500' id='3' mode='checkdropdown' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' w='16000' x='82200' y='42250' />
        <zone h='19750' id='4' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' w='14000' x='82300' y='17625' />
        <zone h='12250' id='5' name='Main.Scatter' pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' w='14000' x='82400' y='50000' />
        <zone h='7250' id='6' name='Main.Scatter' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' w='16000' x='82000' y='67500' />
        <zone custom-title='true' h='11625' id='7' mode='compact' param='[Parameters].[Filter On (copy)]' type='paramctrl' w='20100' x='22600' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Enrollment Measure </run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(X-Axis)</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='9625' id='8' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='paramctrl' w='15700' x='2100' y='750'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>Macro Outcome</run>
            <run fontalignment='1'>Ã†&#10;</run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='10'>(Y-Axis)</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3750' id='9' type='text' w='5000' x='18000' y='625'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Light' fontsize='15'>vs</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Scatter.Dash.Final'>
      <viewpoints>
        <viewpoint name='Main.Scatter' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{471F94DA-871C-4999-9627-40F5EC7BBACF}' />
    </window>
    <window class='worksheet' name='Main.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='204'>
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='2' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[attr:Country.Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{49DEDFA5-E2D8-43A3-89AD-E765F3122434}' />
    </window>
    <window class='dashboard' name='DrillDown.Dash'>
      <viewpoints>
        <viewpoint name='Enrollment.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='POP.for.Drill.Down'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <grid grid-size='40' />
      <simple-id uuid='{81118CBE-7221-4F54-8F8E-DF73E42F4AED}' />
    </window>
    <window class='worksheet' name='GPI.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Enrollment Indicators (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{9753E190-40AD-4B47-B4AF-A228A536EC7F}' />
    </window>
    <window class='worksheet' name='Enrollment.Dropdown.Indiv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{C2B651C3-3DCB-4FC8-814C-4956DC245808}' />
    </window>
    <window class='worksheet' name='GDP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{310BF565-3CAA-47B4-AEA4-33E491C30F3C}' />
    </window>
    <window class='worksheet' name='POP.for.Drill.Down'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{59068638-233E-4D91-BE89-D2B49CF65D29}' />
    </window>
    <window class='dashboard' name='Dash-Scatter.Filter.Problems'>
      <viewpoints>
        <viewpoint name='Enroll.FE.v.POP.Scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='FE.Comp.POP.Dual.Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GPI.Dropdown.Indiv'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{302C0DD8-C9BA-4281-8EAD-B79DB47F67E3}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2A45457C-F6CC-4745-8C7B-296A40804B56}' />
    </window>
    <window class='worksheet' name='Composite PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{564FFA84-11FC-4D19-A462-54425D0D6D57}' />
    </window>
    <window class='worksheet' name='Composite II PoC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{87A04373-E075-4EEA-94DF-406203428BDE}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F66F5775-AC3F-4637-8437-2C1EB6343D4C}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{596A9832-F609-4062-8FB4-2C42C9C3FE6C}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{92CCA1FA-55A3-4DB2-958A-9BD4D807784B}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4F941176-87BB-4365-A3DC-545252B39C6D}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{DEC10AD2-8036-4E22-AA02-15428E9629A5}' />
    </window>
    <window class='worksheet' name='Enroll.All.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4AF9CA13-6C78-436D-A7C8-92EA149DBADA}' />
    </window>
    <window class='worksheet' name='Enroll.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D7B0680A-8B96-403E-92F0-52816E19867F}' />
    </window>
    <window class='worksheet' name='Primary.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6C4C6375-2EF4-46D2-BCDA-540F577D5FD6}' />
    </window>
    <window class='worksheet' name='Sec.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8F596492-121C-4D8F-98B8-16D9D71604DA}' />
    </window>
    <window class='worksheet' name='Ter.FE.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6495488D-0FBF-47B2-A22C-6C678361511B}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.GDP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{091B3F07-1B44-4B68-BEAA-352735E7C559}' />
    </window>
    <window class='worksheet' name='GPI.Composite.v.POP.Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='189'>
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Region ex. Null]' type='color' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[Income ex Null]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Income_Group:nk]' type='size' />
            <card mode='checkdropdown' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B60F8BCE-D4D3-4E4D-9BF8-A0CDC3A29F31}' />
    </window>
    <window class='worksheet' name='GPI.Comp.Enroll.TEST'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{882A2F0C-0A08-4041-AF18-103132868572}' />
    </window>
    <window class='worksheet' name='GPI.Primary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{15EAE7B1-6A07-4961-83E2-5C34678AD406}' />
    </window>
    <window class='worksheet' name='GPI.Second.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{3B6ED21F-6EE9-4ECB-A7EF-185EAE0DB3D4}' />
    </window>
    <window class='worksheet' name='GPI.Tertiary.Indiv.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{D7B19EC8-12C1-4B04-A6ED-281319EA7873}' />
    </window>
    <window class='worksheet' name='FE.Comp.GDP.Dual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9AB43CDC-23E5-4543-9299-550274440713}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC08BB23-6A7C-4ADA-9B5A-A1FCD2A962AD}' />
    </window>
    <window class='worksheet' name='FE.Comp.POP.Dual.Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[yr:Year:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6CCC8E50-C914-4C57-9CAB-CC4ED29627EB}' />
    </window>
    <window class='worksheet' name='Dual.Axis.Test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F6B221B2-BDAF-4BA4-9A75-22EBE4589A49}' />
    </window>
    <window class='worksheet' name='Enrollment.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA62A126-7625-4288-B120-AA7627846722}' />
    </window>
    <window class='worksheet' name='Macro.PullDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F31A5A8F-0925-4793-B01C-8804F3440FDF}' />
    </window>
    <window class='worksheet' name='Charlene_generaldistrib'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Filter On (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Filter On (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0A6BC0F7-B042-479B-8187-862A397D8859}' />
    </window>
    <window class='dashboard' name='Maps_basicdistribution'>
      <viewpoints>
        <viewpoint name='Charlene_generaldistrib'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{955B0529-45BB-45E1-A5CC-439E8C2A554F}' />
    </window>
    <window class='worksheet' name='Time-chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1y9ncyu0j61v2319xoh3217e9wty].[tyr:Year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2329FCAF-E229-4183-8CBA-58F6B362AD85}' />
    </window>
    <window class='worksheet' name='Overview Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1y9ncyu0j61v2319xoh3217e9wty].[avg:Calculation_4658762711683104768:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A3087891-D206-46BB-84B4-9BF49C0DD244}' />
    </window>
    <window class='worksheet' name='Overview GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{703C04DF-3741-4B93-93B7-72391EF94E64}' />
    </window>
    <window class='worksheet' name='Overview GPI (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C342667-6351-425F-A702-E5D1425F6ECE}' />
    </window>
    <window class='worksheet' name='Overview Enrol Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{44FE06C4-88F6-4C26-9198-AFFFD4D1C7E5}' />
    </window>
    <window class='worksheet' name='Enroll Female'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5205D116-341F-458B-ACF7-B8C45CD1AE3E}' />
    </window>
    <window class='worksheet' name='GPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DAC4E88-14C6-4015-9C17-8DCFE2698F2B}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI' />
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F2596251-84AA-4867-AB8F-6DEFA5338D67}' />
    </window>
    <window class='dashboard' maximized='true' name='Overview (7)'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7EBF7B8E-AFF0-4948-86A3-2CB847098B4A}' />
    </window>
    <window class='dashboard' name='Overview (8)'>
      <viewpoints>
        <viewpoint name='Enroll Female' />
        <viewpoint name='GPI' />
        <viewpoint name='Overview Enrol Ratio' />
        <viewpoint name='Overview GPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overview Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y9ncyu0j61v2319xoh3217e9wty].[none:Country.Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Time-chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{3D00DB6E-7698-4A15-BD8D-656C9D34A8E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Composite II PoC' width='119'>
      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
    </thumbnail>
    <thumbnail height='192' name='Composite PoC' width='192'>
      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
      JliWxf8HHxWP0f7DXSwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dash-Scatter.Filter.Problems' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3hU1daH35lkJslk0ntCOoQaSuhNihSBT0Avil4b4L2iV+woXKXEgg3B
      LlxFiigWVJpYkCotdEJLA9J7nWQmyWTK+f6IGROSkEQSEsh+nwcYzpzZ53faXnuvvdbeMkmS
      JAQCgUDQ7pC3tgCBQCAQtA7CAAgEAkE7RRgAgUAgaKcIAyAQCATtFGEABAKBoJ0iDIBAIBC0
      U4QBEAgEgnaKMADNgGQ2odWVtaqGCn05+gpDrc+ClkVbom1tCdcNnbYEs8gauqmwvnJDubaQ
      jz/6kJTsIiSTkXtnPc7g3p1bQ5uFNe+/yYh/PkmIh4q05Ms4ewegtqklvU6++Phtjl5Ipuq5
      /fec+fTu6t+s+nRZCSz9ehcvP/d4g/tG7dzCFz/+hkwmA8DOrQPvvPLfa9ZweMcPaBxCmTxy
      UI3PzY1k1BOfkkXnkMBa333x8dtEnU9GJpPw9gvmgRkzCfJ1r7csTWEupUZrfDxcml1nXZo8
      fYOZMWsmgT71a2oqkS+/yDvvfFDv97XP0cTCBa/x6muLr+m4OWkX+fDjzygzmCjX6xk5/nam
      /d+4ayrzSq581/73zmKmz30LP7WiWY8jaD2uqEUlliz8L/0nz+C5UYOoKNeRllXUOsqqcdes
      /2CjsgVg24/rGTn9Obr6qhv126SLabzxwcc4WLWcPplMzp/1eYMUZKVz94wnGDmga4tpaIqe
      pmLWF7Dyix94N/LZWt8lXUzjrQ8/Ri2XSDh3jIULXmbd6g/r7WbGnT1CvMaB+28f0TJiq2ly
      kEvEnj3Ciy9G8uWaj2iuyyNr4ELXPkcrnpv71DUd06DL59n5i5kX+SbhHf0xVpRx9Pi5ayqz
      Lq5812QyebNdN0HboIYBKEqNpVDpx+RRlS1Hpa09IUH2GMpLeHPJEgq0egxGM48+OZcenfz5
      ds1HXM7UUlhUQKFGy7CBvYm+kICmsJCn5i+m55/7JKQXUVJcjEZbzvMvLSLUz50TB35j1Vdb
      sFHI8evUl+eemIkcibUfvcO5lFzMBgMT77yPMcP78fMP67l1+qOc2LWRXXuPcS5pMU4qJQ/P
      mYfKkMHS9z/FxtYWWwcvXpz/NAp5zcf0yoe2oqyIN19/kzKTnPJyI/MXLMTL1YG3lyxCX25G
      o9MhVznj46QkM7cAjdbA28vfwcnWmrUr3+VcYjYyYwVB4YN4fMbdjSq7BnV0o79d8xF5pRKX
      E1PQFBbwyJPzGdCrE9+u+YghE+7i8/eW4t97GA9OvbXOe1EfjblHR/f+xJebd6GUSfQeNp77
      /zGB0wd/Z8/xC6SnpFCq0zJw9GQeuH0ILy58g5j4FF58MY+gzhE88tC0WtdaJpMRFj4AN9ln
      lJqgMCWG9z78DDuVihJtGU88Px+KUli15jtKjFZcOPwboyZMY0S/kHqvXVlhBp989SvPzZkF
      QNKF40RdLOLO0X15bckbGGXWlJXreeKZ+YT4e9S+/zIZXXoOwtN6DToTxB2u6/mDt19dQJlB
      orhEi7Xak4UL5mFVksE3u04wc/odAKz54D2mP/40qmqNCnNFCQsXv4YkV6ArLub2f84kyNFc
      6xzHDo/g66+/4LHHngQkvln9EftPJoDZwLip9zNl3NA6r/1Dd0+yHGv/jp8ZPeV+wjtW3ndr
      pR1DhvQH4PTB3ylVeROz/zdiC4wsjZxX5zHeffNNZs+dh8paxterPsTs0on7/nEbZQVprNpy
      gM4eVrXeNYANqz4iMzWDoqJCHn16Hv3DO9X77AluAKRqHN//s/Th6k3SlWz49B3p6+37JUmS
      pIKsZGnGv5+UzJIkLY98Tjp87rIkSZL0w+r3pXUbf5UkSZLOHNwhfbxuqyT9uc/x+HRJkiQp
      +fxRac7zi6UKXZ704MzZkra8QpIkSfrfskjpp72nJENxuvSv5xZLkiRJZpNRysrKspSRXlK5
      7yfLI6UL6SUWbXOfmC0lZeVLkiRJX/9vubRp57Ea2l9+eo4Un5IupaenS+npaZLeYJK+XLlU
      2rz7qCRJkhR/fJ+04K2VkiRJ0uOPzJBy8jWSJEnSi4//Szp3uVL3mg/ekKLOVX7OzK7UJJlN
      0n/n/EtKKdJL2ow4afGyjyRJkuotu4rt6z+W5i94TVq5cqW0cuVKaePmXyzn+HvUWUmSJCk7
      4aT08vIVlu2zHnlcOnI65qr3Yt+2DdLWvYcl6YrPDd2jCm2eNOuRx6WyCqMkmY3S3P88IqXk
      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
    </thumbnail>
    <thumbnail height='192' name='DrillDown.Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='88' name='Enroll Female' width='208'>
      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
    </thumbnail>
    <thumbnail height='88' name='GPI' width='248'>
      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
      DCkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GPI.Dropdown.Indiv' width='192'>
      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
      Nm0CCNEI/x/DV0AFU2PiLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Main.Scatter' width='192'>
      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
      mAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maps_basicdistribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Overview' width='384'>
      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
      iadfSmnZFosFi8XMhjXLeewb/wt1WD6nKyk7KzMdSZLo8/n55W+fvaLtjsXjLF00nzSPmx/8
      28+56/abL2lfXug4mVNekiz7Rz97gkce/CTRWIyOrm6eeOrKPu/jldU8fP8niKsqr7z1LmtX
      Lk3Zvhxe9urlS1K2L4eXfd0161K2L6tqarn347ditVr515/+hsUL5ib3zXhcStl3fvRDKfte
      Di/7jltvStm+HF72bR+5MWX70pRftvC74/pkJ1BcVXE67Xxw+Dg3bNnAzr0HeeG1d3jwrtuY
      P7ecZ15+k/0HjzGnvISOzm5+/fvneeCu20YEgAuV88RTL3HgyAk2rV/FUy+8TkdXDyWF+Xxw
      +Pi4ttFiNtPa3gEGaJpGdlYGP/7l77jzox/iuZff4sCRE6xYspCX3tjOzj0HqKltYOumtWzf
      tS+lZV+zfjV/eP5V9h48Mq6BzJdS9q69Bzlb20BBXi7v7z+UsrJffnMHK5ct4p9+/CtuvmHL
      FZftsNt4c/sucrIyaGxq5cy5+kvalxc6TtwuZ7Lsc3WNvPLWDrp6elm9fDF7Dxy9ou329vnw
      +YOcPnOOgrwciosKUrYvh5f9u2dfTtm+HFx2YX4umRnpKduXedlZ/PyJpzl87BQfuXErB4+e
      TO6b8biUsn/522dT9r0cXnZuTlbK9uXwsn/9++dSti+nZBNQc2t78vd9B49xz5238Nhn78fl
      dJKbncnc8lK+/vjD9PT2cc361Xz1Cw+RlZlxSeUAXLNuFfsOHsUwjCHPHY/2zi7U/oRwHV09
      5OVm89UvPMTc8hIA0jwubFYrHZ3dVJQV8+VHH8QfCKa87F17D7Bl4xq+951vprxsgPvvuo0n
      n3slpWW3d3QRDIX56hceYvniBciydEVlN7W2c/MNm8nPzSYQCl3yvrzQcTK87GuvWcfnH7qH
      c3WNV/yZdHb1sHzJQq5Zv5rm1vaU7svhZUPq9uXgspta2lK6L7ft3MPXHvssn7rnDhx2W0q/
      l8PLTuX3cnjZqdyXw8uG1O3LKdkENJjX5+f7//IzFs2fw4J55RQX5rP/0FE8bicWi5kf/uRX
      pKd5uPPWmy6pHIBbbtrK3/zg3694Gw3D4Ce//B0mk8xjDz8AwP2fvI0nn381+Zy//Ycf85d/
      8hh2m5VwJJqysv2BIM+89CZLF81HliX0S5hs5mJlu11O3E4Hre2d4y5zvGU/8dSLxOMqGeme
      S9rm0cpesWQh//Dvv+D6zetZNG8Ou8dxVjSW4cfJ4LLXr1rOgaMneH//Ib79zS/x4uvbrmi7
      169ezlMvvEZXTy8P3nU7O3bvS9m+HF726TPnUrYvh5f9y98+k7J92dzawd//8D+4+YbNBAJX
      ll59PGWn6ns5vOxUfi+Hl53K7+WUDAD33HkLalzlCw/dy8tvbufuO27B5w/w22dexu1y8NC9
      H6e1vZMz5+p5/JEH0HSdX/3uuUsqx2G38cpb76LrOnabjU/fcwfxeJwHPvkxfv/cq6Ns1VBb
      Nq5hyYK5gITPH2D96uWkedz8/L+eAqDqzDmaWtoAWLNiKR+7+XoOHDk+roPsUsrOy8nixq0b
      eWPbznEdZJda9m+fuXj75eWUfeO1mygrKeRXv7t4m/HFynY47Dz6qbvp9faxa+8hvvDQvZe0
      Ly90nBTk5STLfvXtd7n7jluw2aw89cLrV7zd4UiUB++6DUVR+K8/PM+6VctSti+Hl53KfTm8
      7FTuS4/HxQOf/BhNLe28/s7OIfvmyedfvejZ+qWUffcdt6Tsezm87A9ff03K9uXwsudVlKZs
      X4pxAIIgCLPUlLwHIAiCIFx9IgAIgiDMUiIACIIgzFIiAAiCIMxSIgAIgiDMUiIACIIgzFIi
      AAiCMCP81Z9+hSUL57F00Xy+8aVHJntzpgUxDkAQhBmhvLSIP/vjL6DGVf7vv/wnm9at5IbN
      Gzh68jQnKs/wwF23IUkSf/bX3+ev/vTLZKR72LX3INduWse5+kb+6ce/muy3MOHEFYAgCDNC
      XUMzLa3tNDS10NrWwWfv+zg7du/nzltvoqm1jbO1DZSXFFGQl826Vcv4l//4DU6HA58/wLu7
      90/25k8KEQAEQZgxKqvPUXnmHADBUIRINMrvn3uVzz14F2frGqhvakGSJOoamqmpbWD/oaO8
      9MZ2vv3NL03ylk+OKZkOWhAE4XIYhkFnVw893j6Onapi45qVePt87Np7kGvWr6aqppZjJ08T
      jkSoqW2gpDCfG7Zs4OU3d4w7w+tMIu4BCIIgzFKiCUgQ/n97dSAAAAAAIMjfepBLIpgSAMCU
      AACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCUAACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCU
      AACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCUAACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCU
      AACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCUAACmBAAwJQCAKQEATAkAYEoAAFMCAJgSAMCU
      AACmBAAwJQCAqQDdt5ezDg8Q+QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Overview (7)' width='384'>
      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
      TIHfm1UZ1224kplNdfh9HiwWM5vWX8HPfvMAly2aR1GBb6qMyvISgsEwC+fO5pFt23lqx86s
      +ya3XLuemU31uF0O7HYba1ct56e/uZ+1VyzHZrWy9cntPLJtO9WV5XSf6eORbc/xxDMvUl9b
      RSKZXb/sLTdspKW5HqvVgsvpYMVlC/nZbx/gho1ryaQzbH1Sfxx1NZU01FVjs1r57YOP8p2v
      35TV/QPceuMm5rQ0YTQYKCrwMW9OCz+/50EWzZvD0kVzCYUj3H3fVr5xyw3MaKyjddYMFs2b
      nfX9Fxb4WL/6cubOngnApqtWc6y9g2dffIW7bt/MmhVL6esf5L4/PMmdN19PLB7nvkee5IWX
      3+Cm6zdkVUZ5aTGrli9m/pwWADZfu549Bw6z89W3+eatN7Jh7QpOnDzN1m3bueOm65g9s4nj
      J0/zyLbtnOrszqqMmqoKli6cy4LWWQDctvkaXn59F2+8s487b7mB665ew/5DR3ly+05u33It
      L72xi0e2bScSjWIwZDd4sLmhlnmzZ7Bwnl7GN2+9gaeff4lDbSe46YYNbLn2Kl7ftZcdL73O
      rZs38a3bN3P3fY9gMZtZMn9OVmXMmdnE7JmNzG/Vn6s/+frXePiJ5+ju7ePaq9Zw5y03sHXb
      dgYGh9m4dhXrrljGjIZaqspLs7p/gIVzZ9HS3MDsmXq7dNftm7l/61NMBIKsW7WMb956I/c9
      so1INMrqFUvpHxzil/c+RCQSY3GWj2PZ4vnMaKpnRmOd/lzddiP3PvQEKArLlyzgrts3c/d9
      WzGaDCxdOJdli+fz3Iuv8si27QSCoazKuOLyJTQ31FJfWwXAnbfccHEFQCQa4//+/F7Gx99P
      ZrvNijY5ZGzB3Fl4XE7+6s++SX1NFWTA7XISCIYoKSr4yP098/zLvPrm7qnLmqbhdjnpPNND
      U30NwVAYVVUwGoycOt3N3fdt5cSp09Oq8+PPvMDbe94fk20waHhcTrp7+qirrSQYCmOzWgiG
      w3T3niWZSvHdb92GpqmMjGZ3VPvw48+y9+ARABT0E09ul4Pes/1UV5YRCIbwe930nR1kdHyc
      kqICvn7TdbS2NGf9OH7/h20cPnpiqgyT0YDbpR+NVJQVEwiGKC8tor2jk9HxCcYngiyYO4sd
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Overview (8)' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='108' name='Overview Enrol Ratio' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='108' name='Overview GPI' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABsCAYAAABjNmXyAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJwklEQVR4nO3de3CU1R3G8SfZDYFECQkhQBAQDCQk5RYFi4qpFEq5tCACSieM9UKlVsSp
      psXOOIhMvYDTWIVREGyrRAQvreCUcWwVQQKE+6VQIBC8jZTmYoCEQNhs/9hNqpJsNps9yWbP
      9/Pve/LLec8veZ8977ubRLjdbrcAANaJbO0JAABaBwEAAJYiAADAUgQAAFiKAAAASxEAAGAp
      AgAALOVsbMCQrEktMQ8AQAtjBwAAliIAAMBSBAAAWIoAAABLEQAAYCkCAAAsRQAAgKWaHQD5
      G1YHYx4AgBbGDgAALEUAAIClCAAAsBQBAACWIgAAwFIEAABYigAAAEs1+v8AAAChaVXORZ/H
      sxe383mcHQAAWIoAAABLEQAAYCkCAAAsRQAAgKUIAACwFAEAAJYiAADAUgQAAFiKAAAASxEA
      AGApAgAALEUAAIClCAAAsBQBAACWIgAAwFIEAABYigAAAEsRAABgKQIAACxFAACApQgAALAU
      AQAAliIAAMBSBAAAWIoAAABLEQAAYCkCAAAsRQAAgKUIAACwFAEAAJYiAADAUgQAAFiKAAAA
      SxEAAGApAgAALEUAAIClCAAAsBQBAACWcrb2BAAAgcle3K5ZX88OAAAsRQAAgKUIAACwFAEA
      AJYKykPg/A2rg1EGANCC2AEAgKUi3G6329eAIVmTWmouAIAW1OwdALd/Qkf+htX0IwTQh9BC
      PxrGLSAAsBQBAACWIgAAwFIEAABYigAAAEsRAABgKQIAACxFAACApQgAALAUfwoCACzFDgAA
      LEUAAIClCAAAsBQBAACWIgAAwFIEAABYigAAAEsRAABgKQIAACxFAACApVosABwOh2I6tA96
      3diYDoqMjAh63VBhat3QNPQhtNCP4HCa/gZTJo7R2FEjNSgjVe2jo3Xi5Ofate+glq7MU/mZ
      cwHV7JaUqNl3zVDmoHT1uipZ5yoqtffAYb274Z/6YOOWIJ9B6zCxbrU6xXXUvdnTNGLYED31
      3DLt3HswSLMOPyb6MKD/NbrlpuuVnpqiAanXKD6uo748dVpHC4u0ctVbOnSkMMhnET6C3Y+U
      Pr1164TRGpjeX927Jimxc7zOnK3Ql1/9R7v2HdRra97V6eISA2cSGoz+Mbg5s2bqnuyp9R4r
      LPpUsx+er+KSsibV7HVVspb/4Ql169rlsmNut1uLX1ih199+L6D5hgoT6yZ5dkszp0/SzNsn
      KzamgyTp5VfXaunKvGbNN1wFuw+xsTGac2+2pk8e3+Cu1e12a9HzK7T6nbb9M2xCsPvxzPwc
      jR11k88x1dWXNGfeQm3bubdJc20rjAXApHE/1IJ5D0qSNm4p0PK/vKHTxaUak3WjHnngbjkc
      Dh04dFQzf5njd83IyEitf/0l9ejeVVVVF/T73Je0Zfsu9ezRXXPvu1OZg9IlSb/KWaAtBbsD
      mndrM7Fu7aKiNG3yON2bPVXxneK+dYwAqJ+JPrz47OMaMWyoJOng4WP6OL9Au/cfksvl0ohh
      Q/XjUSPVu2eyXC6Xpt09VydOfm7k3NoiE/14Y0Wu0vr11ZHCIq392wYdO35Sp04XKzamg26+
      YZju+tkUdYrrqIqKSo27fZbOnG3ezjsUGbsFNOO2iZKkgt37lTP/GVVXX5IkrX7nPZ2rqNDC
      3z2kgen9lZHWT//69zG/at484jr16N5VNTU1evixp+su8qVl5Zozb6Feef5Jpab00YzbJrbZ
      ADCxblk3DlPOA/dIks5XVSnvrfVKTIjX5PGjzZxEGDDRh+joaFVXX9Lzy1/VqjfX6ZuvvfYe
      OKy8N9dpzcpcde+apO9fO5gA+AYT/fjjslflcrlUsHv/ZceKPvtCW3fuVd5Lzyo2NkZDBg7Q
      pvwdwTuhEGHkIfDA9P5K69dXkpT74p/rmlVr/fsf1d3nnD55nN91p3nHbt6267ILfEVFpZas
      WCVJumF4ppK7JQU8/9Ziat3cbulidbXy3lqvCXf8QkteXqWz5yqCN/EwY6oPn2zbqezZj+i1
      te+qvo33mbPntHWH51bD1b16BDr9sGOqH1t37Kn34l/raGGRvvjqlCSpZ3K3pk67TTASANdn
      DpYkHS/6TIePHq93zHvvfyRJGp450O+6w4cO8n7th/Uezy/Yo9KyckVGRui6of7XDRWm1q1g
      936Nv32WFr+wQqVl5c2faJgz1YdX8t7WkcIin2N69/Rc+ItLv/a7brgz1Y/GxHeKU8/k7pKk
      Q0fq/75tnZEASOwcL0k+b8N8st1zLDEhwa+acR2vVFSU547Vlu3113W5XNq+a58kKamzf3VD
      iYl1kzyvLAN5aGwrU31oTPb0n+rawRmSpD37DwWtblvXGv1ITIjX8tyFcjodKi0r1/5DR4JS
      N9QYeQbQJdHTBF8XnZJSz7GoKKfiOl6p8jNnfdZM8tasPF+lyvNVDY4r9tat/aFpS0ysG5qu
      pfvgdDo0Z9ZM3XnHrZKkTfk7tGPPgYDrhZuW6IfD4VCXxAT1TO6mcaOzNG70SHVo317lZ87p
      /pzH5XK5Aj+BEGYmALwX35KyhrexFZXndeHCRUVHt1OXzgmNNizR+4reV01JKvFundtkABhY
      NzRdS/ah11XJeuqxXysjrZ8kz+263yxYHFCtcGW6H2tWPqd+fa++7K25H2zM14t/ej2sH8Yb
      uQXkdEZJki5duuRzXO3x2ls7vtSOabSmq7ZmVKM1Q42JdUPTtVQfpkwcozUrc+su/qvWrtP9
      OY+rqupCQPXClel+NPTXBLp2SajrTbgycgUp9Sb1d99z/k1RUU7FxsZI+v+rdl9qx/iqKXk+
      5epvzVBjYt3QdKb7EBXl1KMPzdaUiWMkSWVfl2vBoiXauKUgwBmHN9P9mH73XF0RG6vOCZ2U
      lJigG6/P1KiRIzQoI02DMtKUkZqiRS+8rJoanx+ZapOM7ABOF5dKkhJ8NKz2WE2Nu9HbOpL0
      X2/NuCuvkMPhaHBc5/hOnvElpX7PN1SYWDc0nck+OJ0OLV00v+7iv33XPk39+YNc/H0w/XtR
      eb5Kp4tLdPjocX2cv0NP5i7T2Gn3aM1f/y5JumPKBI0f/YPAJh/ijARAsffim56W0uCYdO/W
      qqy83K8HLCVlX6umxq2IiAgN6N+3wXEZqSnfmkNbYmLd0HQm+/DoQ/dpeKbn7cwfbd6mB377
      BEHeiNb4vXC5XHrquWX6cPM2SdLIEdc1u2YoMhIAx06clCTdMGxo3Svy75owJkuSVHjiU79q
      ulwuFX3qeRgz8Ue31DsmpU9v9U/p452Df3VDiYl1Q9OZ6sPg76Xptp+MlSRt+McmPTJ/0WUf
      asLlWvP3Yqf33Vip3utKuPkf/MEnoRe/mk4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='108' name='Overview GPI (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAABsCAYAAABjNmXyAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAB/ElEQVR4nO3d0WnCYBhA0VrEedzAEVzANTqFaxQcwQ0cqi9/J2iEJiSBe85rEvngf7h8
      EfQwxhgfAOR8bj0AANsQAIAoAQCIEgCAKAEAiBIAgCgBAIg6vrvhfLmuMQcAK7MBAEQJAECU
      AABECQBAlAAARAkAQJQAAETNDsDr+VhiDgBWZgMAiBIAgCgBAIgSAIAoAQCIEgCAKAEAiHr7
      fwAA7NP318/k9dv9NHndBgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAl
      AABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIA
      ECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAEHXcegAA/ud2P816
      3gYAECUAAFECABAlAABRi3wJ/Ho+lvgYAFZkAwCIOowxxtQN58t1rVkAWNHsDcDrn/14PR/O
      Ywecw744j795BQQQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAEOWnIACibAAAUQIAECUA
      AFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQJQAAUQIAECUAAFECABAlAABRAgAQ
      JQAAUQIAECUAAFECABAlAABRAgAQJQAAUb/JqyY9AsQu5AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Overview Map' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='POP.for.Drill.Down' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3QUd57v/Xd1UrdyAoEAgcjRZIwBkwzGHsM424zD2p7xeHbHe2fm7uze
      uXvvzrNz9j7r8aZnz+717Hhs45xxNs5kY3IWUQIBkgDl1AqtDlXPHxICDJimLQlEfV7n+Fjq
      /tWvv1SX6lPhV1WGZVkWIiJiO47LXYCIiFweCgAREZtSAIiI2JQCQETEprpVAJimeblLEBG5
      aigARERsqlsFgIiIdBwFgIiITSkARERsSgEgImJTCgAREZtSAIiI2JQCQETEphQAIiI2pQAQ
      EbEpBYCIiE0pAEREbEoBICJiUwoAERGbUgCIiNiU63IXcLWwLAvLurRpDAMMw+icgkRELkIB
      0AEsy+Kd1ftYs/MY0WaA02Hw6MIJDO2XEVV7h8PA43LGXqSIyLcYlnWp262x27d9PRt37GfA
      8HHMnjYRR/vGr0Xx4b2sWrcFb3ImN990E0k+9znTh8NhXK4rL7NKKup5/N8/jWnaaHcA3E4n
      f734Oq4d2TemzxER+bYuW5tWFh9k+ZYCHrrvHr587w22Z/Rg0vAcAIKNlSz9eBWP/PjHnDiw
      iaUffckj99wS9crxcotEWp9UlpHs468XT8PlvPiplTdX7mH34bKo+rcsCIYjfLDuIJOH98Hh
      6CYzRkSuaF0WAEWHDzJ5xlxSkpKYPWcGK7bltwdAc3UZaf1GkpacQOrkmWzY/iyBsInXZZz1
      GEjTNAmHw11VctRO1eh2OcntnYI7igD4H4uvoyUUiar/3YfL+Ne3NmKaJpFIBD0ZU0Q6QpcF
      QEN9Aym5XgB88Sl4ONr+XmLP/tQe/Zzlqz1EmusoqvBjRkxwOc8KAMuyrsjnAkfMUytyCzMS
      wYxiA91hgM8T3TF9j+t0oEQiEe0BiEiH6LIASExOoKkxAEBzUz1By9P+njMuiT//2WMcKy7B
      G9+Xw4UluFxODMPA7T59LuBKPQfgdrXWaBgGbo+nw0/Wnvo3G4aBx+NRAIhIh+iy6wByBg1n
      x7qVVFZX8fWqtQweOZSG6lIOFpZgmSYVFVX07tOXssN59MgdhceplZyISGfqss3pzH5DuX58
      OV9+/gVZA8cxfmg/GiuK8Te0AFB8eD8bNtcTn5LFovnTus0JYBGR7qoLj6cYjJl8PWMmn34l
      OSuHSVmtP0+f94OuK0VERHQrCBERu1IAiIjYlAJARMSmFAAiIjalABARsSkFgIiITSkARERs
      SgEgImJTCgAREZtSAIiI2JQCQETEphQAIiI2deXdXP8KYVkWZpSPS462nYjIlUQBcB6WZbF8
      2xE+3VjQ+kDeiwhFrrynlImIXIwC4DwipsUnG/I5crL2kqabNrpfVA+EFxG5EigAzsPldPB/
      fjKHorK6qKdxOBwM65eBQ0+yEZFuQgFwAUnxcYzK7Xm5yxAR6TQ6XiEiYlMKABERm1IAiIjY
      lAJARMSmFAAiIjalABARsSkFgIiITek6gO7Ear3vkGVe/PYUBgaGAYYuTBORC1AAdCMHiiu5
      7x/ejaqt1+PiN/dN18VsInJBOgTUDYwc0IPRuT2xLGgJRaL6r66xhTdX7r3cpYvIFUx7AN2A
      L87N3z88i6ZAKKr2W/NP8H/f3Yyl21SLyHdQAHQTHrcTj9sZVdsEr7uTqxGRq4EOAYmI2JQC
      QETEprr0ENCJIwfZsbeAnCGjGD00l9MjFC3qq8vZum0nljuBiZMmkpro68rSRERsp8v2AOrL
      i3j745UMGT6cTSuWcaCovP09M9zCSy+8SHr2ADLj4dVXlxKKYqy7iIjErsv2AI4czGPC9Tcy
      dPAgEo0ZfL1rHyP6t45Rt6wwljORoYNzoSWTDTv2YVmcM4rFsixMU8/fvZgzZ5vml4hcSJcF
      QH1tHSk5yQAkp/TEHTnZ/p7DlcCY/qn8f//xB4zmKqbc/CPcDgPLMgmFTg99NE2TSCTSVSV3
      W+Fw6zwzTZNgMHiZqxGRK1WXBYDP5yMUDAMQDDYTNE8PaQw1lLHjeJD/8Ve/hFADzzz3GtPG
      DiMhzkVcXFx7u3A4jMulkasX43a3DgN1OBx4vd7LXI2IXKm67BxA7/4D2LlpI2HTZOemjfTO
      HUigoY7SihosK0I41HrfGsNwEIoEMXURk4hIp+qyzenswWMZUnCEZ//0J9J75XD72EH4TxSw
      ryjAnGnXMH9qf5Y89wxE4Pp5C0mM05a+iEhn6rK1rGE4mHnz7VxvWW1b+gYZ/YYxt1/r++Om
      zmHctbNpu4UluoeliEjn6tLN7FMr/gu9h25dLCLSZXQlsIiITSkARERsSgEgImJTCgAREZtS
      AIiI2JQCQETEphQAIiI2pQAQEbEpBYCIiE0pAEREbEoBICJiUwoAERGbUgCIiNiUAkBExKYU
      ACIiNqUAEBGxKQWAiIhNKQBERGxKASAiYlMKABERm1IAiIjYlAJARMSmFAAiIjalABARsSkF
      gIiITSkARERsSgEgImJTCgAREZtSAIiI2FSXB4BlWVhWV3+qiIh8m6srPyxv81rWb99P7ohx
      3DDzWpxG6+uhpmo+/nx1ezunL5Wb58/G49IOiohIZ+myNWxF0X5W7zzGgw8/RENRHtv2H2t/
      z+VL5Ya5c5k7dy7TJgwn/3ARhmF0VWkiIrbUZXsAxYfzmXz9HOK9Xq6fPZ0VW/OZMrI/AIbh
      ICU1FYAvV37E7BtuwO00sCwL0zTb+zBNk3A43FUld1tmpG2eWZbml4hcUJcFQIO/kZSBcQD4
      fMl4CJ3TpsVfzt7jQf7y1j7tr50ZAN8OBDk/s+0kiwWaXyJyQV0WAEnJiTT6mwFoaqwlSNxZ
      71uWxTervmLyrLm4na1HpgzDwO12t7cJh8O4XF162qJbcrmcQOv883g8l7kaEblSddk5gJwh
      I9ixbjml5eWsXrGWoaOG4a86wb6CIgAizbXsOFzHlFEDuqokERFb67IAyOgzmLnXjmDtqlVk
      jZjC2MF9sMwIwWDroaD6unpuWriwfetfREQ6VxceTzEYMf46Roy/rv2V5B79GNej9ef03v1J
      77piRERsTwfUr2KNzUF2HS6Lqm18nIvBfdI1/FbERhQAVyGno/UwWuHJWv6fJauinMbg8dun
      cMPE3M4sTUSuIAqAq9CkYdncMnUIB4oqo2pf39RCRW0T2/JPKABEbEQBcBVyOAwe++HEqNt/
      ufkwf/hgSydWJCJXIg25ERGxKQWAiIhNKQBERGxKASAiYlMKABERm1IAiIjYlAJARMSmFAAi
      IjalABARsSkFgIiITSkARERsSgEgImJTCgAREZtSAIiI2JQCQETEphQAIiI2pQAQEbEpBYCI
      iE0pAEREbEoBICJiUwoAERGbUgCIiNiUAkBExKYUACIiNuW63AWISPdWeKKGgpLqqNv74lxc
      N6ovbpezE6uSaCgAROQsgWCYqvqmqNpW1Dbxb29toL6xJer+DeCOmSP4s5vGxlihdBQFgIi0
      a2wO8sSr68gvqYqqvWVZhMImGck+hudkXrR9ZX0TB4uqou5fOtf3CoDm5mbq6+txOBykpqbi
      drsvOo1lWYCBYVz4feNCb4pIpzpyspY9R8pxOgxSE71RTeOLc/OLu65lWL+Mi7bduLeE37+2
      7vuWKR0kpgAoLi5m6dKlFBcXk5CQgGmaBAIBxo4dy2233UZKSso501hmmNWff8S+IydJy8rl
      zlsXEOc+fQzQX32Sd99fRlMwwsDhE1gwZwqKAZHLo2+PZH7/2A1RtXU4DHxxF9/4kyvPJQfA
      rl27WLZsGbfddhtDhw5t3+pvampi27Zt/Md//Ac///nPycw8e3fw+KE8Dtc4eexnP2Ptp0vZ
      mHeYWROGAmCZEd5/+12m3XIvQ/qkU+9v7IB/mojEyuEwSPB5LncZ0skuOQD69+/P3/7t3+Jw
      tI4gra2t5dixY/Tu3ZsZM2YwadKktsM8ZystPsq4KVNxu1yMnzyZrzYchrYAiIQaqAt5CVYV
      s+HEUUaNGo1B6+GgcDjc3odpmpimGeM/VS4kHGmdx6ZpEgwGL3M1cjmF2v7eLMvqlGUh3Mn9
      y6W55ABITU0lEolgWRbV1dX8+7//O6NHj+aDDz7g3nvvZfjw4eedrrmpmWRP68e53T5cRNrf
      s6wQ1eWl1DSH8UQaefa5F3j88Z/hdTnag6a1nXXW79IxDKN1nhoYmr8253AYZ/zc8cuC0dZ/
      4cla/v6FNVFNk5ro5Wc/nEii9kg6XEznAD7++GNSU1Pp378/ycnJTJ8+nUAgQGVl5QWnSU5L
      obaqHvr3wF9bQdiZ0P6eYcSR1rMXM6ZOwTDgcGExzS1hfO44nM7T5wksy8Ll0sCljuZs+0M3
      HIbmr805Ha1/b4bROcvCgF5ppCZ6qW0IsO9Y9COBEuPjePz2KR1ej93F9A3feuutrF+/npUr
      VzJ69Gg++eQTBg8ezLRp0y44zcDhY3nu5XfpkbCAbz5fwfV3/Bk1Jw5zoDTI1PHD6Jdi8unq
      9eRmeDlR10x8nFZEIh1h9c6jbNhTElXb+qbox/PHok/byeVjZbVRtd91qIzPNh2isTnUqXXZ
      VUxrWcuySE5OZtSoUZSVlZGZmcm0adO+c5cxKbMP992zkN37C5mx8G6G9c0kUO+gV48QhuHg
      tvseYsumTZyorOeRhx44a4SQiMTmaGkt//fdzYQjl3bubGgUQzpjlZ2ZRHZmUlRt/U06T9CZ
      YgqAV155BcuySExMpLCwkMWLF/PHP/6R22+/nYEDB15gKoOsvoOY33dQ+yu+lAxy20aMGq44
      pkyfGUs5InIBgWCYiGmSnuzjRzeMPusY/4XEuZ1cO6JvF1Qnl1tMAeD3+xk9ejRJSUns3buX
      Pn368Itf/IJIJHLxiUWkyyX6PMydkIvLqZP8ctolLw3hcJgf//jH1NfXU1hYyM9//nOcTidu
      txuv14tlWQoCEZFu4JL3ALZs2cLRo0e55ZZbSEpKar9tg2VZnDx5kvfee4877riD7OzsDi9W
      REQ6ziUHwLXXXktLSwv/+I//SEpKCr179yYcDlNcXIzD4WDx4sX07t27M2oVEZEOdMkB4HA4
      mD17NjNmzKC4uJjS0lJcLhcLFy4kKytLFxKJdLJdh0pZuf0oFudecf9tdQ0tnOfCfBHge9wN
      1OVykZubS25ubkfWIyLfoaqu9f77dZdw/32A3N6pOHSXXfkWXW0l0o00BkI0BUIk+jzcNXsk
      HtfF97jj3C6mjekX1RBQsZeYAyAUCvHss89y/Pjx9tceeeQRBg8e3CGFiciFxXvdLJgyiHib
      3Ib5WFktry/Pi6ptepKPeZMGashrFGIOgKKiIo4ePcrjjz/ePhKoZ8+eHVaYiEh6sg+Hw6Ck
      ws9bK/dGPV1tQ4DFN4zuxMquDjEHQHZ2NsnJyfTt2/esG7aJiHSUScOy+dVd13LoeE1U7QtP
      1LDnSDml1Q2dXNnVIaYA+Ju/+RtqampoaWnhsccea98D+Ku/+itGjhzZoQWKXO12Hy5j1Y4j
      UY3WaQyECNvsmRizxg1g1rgBUbVdtj6fPUfKO7egq0hMAfDEE08QiUSor68nLS0NgIaGBrze
      6J4hKiKtavzN/Msb6y/5Lpx9eyTjcWnPW76fmALA7XZTW1vLK6+8wq9//WsA1q9fT1xcHPPm
      zevQAkWuZi3BCIFgmHivm7tmjcDjvvifpMOAmWP76ySnfG8xBUBhYSEvv/wy+/fv55/+6Z+w
      LIuCggL++q//uqPrE7EFn8fFgimD9dQr6VIxBUDPnj1ZsGABLpeLRYsWYRgGaWlpZGVldXR9
      IiLSSWIKgMTEREaNGsWxY8eIi4ujb9++xMXFdXRtIiLSiWIeBurz+cjIyGDp0qVUVlaSnZ3N
      fffdR69evTqyPhER6STf615AkyZNIiEhgby8PPLy8vD7/QoAEZFuIuYAqK6u5rHHHmPOnDks
      XLiQn/70p7oTqIhINxLzGjstLY0nn3ySrKwsli5dyhNPPEFRUVFH1iYiIp0o5j0Ay7JoamrC
      7/dTUlKCaZqEw+GOrE1ERDpRzAHg9/tZtWoV11xzDXfeeSdJSUk6BNTNbdp3nEd+/2FUbZMT
      4vjbB2bQKz2xk6vqXkzT4uP1B3l71T7MKO7tYJoWwbCeoS2XR8wBkJKSwl133cWyZcvYvXs3
      c+fOZcyYMe33BZLuY8ygnqQleanxB6j2N0c1TbW/mde/yuOv7r2uk6vrXuobW3h9+R4Cwej3
      hg0Dbpxsn1s7y5Uj5gCor6/nySef5M477yQ+Pp6XXnqJRx99lBEjRnRkfdIFemck8e9/uQB/
      UzCq9uv3FPPGij2EtOV6johpYloWCV43/++jc6O6stfhMEhP8umBLdLlYg6AkydPMnDgQGbP
      no1hGNTU1HDw4EEFQDeVluQjLckXVduDRZWdXE3353Q6yEyJJzlBF0jKlSvmAOjfvz8nT57k
      mWeeIT4+nk2bNvE//+f/7MjaRESkE8UcAB6Ph//+3/87+/fvJxAI8Nvf/lb3AhIR6UZiDoC6
      ujr++Z//mSeffFLPARAR6YZiHreZkpLChAkTWLJkCcXFxZSUlBAIBDqyNhER6UQx7wE0NjZy
      7NgxAoEATz/9NACPPPIIgwcP7rDiRESk88QUAJZlkZiYyN/93d9hnvF80mguBLMsCzDQ5QIi
      IpdXTAHw2Wef4fF4GD9+PL/85S9xOByYpsk///M/k52dfcHp8javZf32fQwYMZ55M6/FeUYI
      FO7bzs4DRwFIy+rDrGnXomHRIiKdJ6ZzABs2bGDEiBGYpsnAgQN58cUX+cEPfkB+fv4Fp6ko
      2s/qnUU8+PDDNBblsW3/sdNvWhY7Nm1m3PTZzJ07l4ljR6F1v4hI54ppDyA+Pp7KykpGjx7N
      r3/9awzDoLq6mj59+lxwmuLD+Uy+fjbxXi/Xz57Oiq35TBnZHwDLMilviJDksnB54kiI92HQ
      erjozENMuuHcleHUd2Jalr6Pb4lE2q6Otlp/1vzpWpG2ZdPSshmVmALg9ttv54knnuCee+6h
      d+/ebN++nby8PB566KELTtPgbyRlYOtVkT5fMh5CZ70/algOm9av50TRETIGjeX2BTMx4KwA
      +HYgyOVhnXGTM30fZzOtU/OjdVnV/Olap5bNaNcVEdPk882HqahpjPozeqUnMn/yIJxXwTHq
      mAJg2LBh/O53v2P58uXs3buX/v3780//9E8kJSVdcJqk5EQa22401tRYS5DTl8gbDiczb1wE
      gBkJ8aen/0RzcAYJcU7c7tM3yAqHw7hcMQ9ckg7idDoBcBgGHs/F73VjJ25X21anYeB2uzV/
      upjr1LLpcEQ17z/fdIiXvsgjihu3tjMMiIvzsGBK9x/xGNPa1DAMBg4cyGOPPRb1NDlDRvDG
      R8sZ2HMha1esZeiMRfirTlBcHWbYgDQ+/2IDEyePo7HmOEG8uF26tbSIdK5qfzOWBUP6pjNu
      8MUfZ7v7cBkHi6uoqG3qguo6X5dtTmf0GcwNU6tYu2oVvUZey9jBfWisOk4wGMbhimdg31TW
      f7MOw+nh3sV343F2/90ruTocPl7NpxsPRXV//5ZgmHDYBG34dysj+/fggRuvuWi7Fz/bycHi
      qi6oqGvEHACmabJy5UqOHz/e/tr8+fO/YxiowYjxUxkxfmr7K8k9+jKuR+vPI8ZNYcS4KbGW
      I9IpguEIT77+DeWXcIwYICstAY/b2UlViXSMmAOguLiYpUuXctddd7U/BEb3BJKrjWVZ1De2
      4HQa3DtnFL4oH9oyfXQ/vB6dr5Ir2/d6Ili/fv2YN2+engImVz0HBvMnDSI9ObpnJoh0BzEH
      gGEY7Nu3j1/96lfto0L+/M//nKFDh3ZYcSIi0nliDoCkpCSeeuqps8aEJycnd0hRIiLS+WIO
      AIfDQV5eHq+//jrhcJi5c+eyePHijqxNREQ6UcyD7U+ePMmHH37Ik08+yVNPPUVpaSkbNmzo
      yNpERKQTxbwH0NTURHp6OikpKRiGQU5ODvX19R1Zm4iIdKKYA2DAgAEkJyfzy1/+EpfLhc/n
      43/9r//VkbWJiEgnijkAnE4nf/mXf0lVVRXhcJjMzMyz7tsjIiJXtpgC4A9/+AOLFi3i5Zdf
      pqWlpf31hx9+mEGDBnVYcSIi0nliCoBFixbRs2dPHnzwwbNuudqr18VvpiQiIleGmEYB5eTk
      0NLSwtatW8nNzSU3N5eKigoKCgo6uj4REekkMQVAY2MjBw8eZOvWrRQUFFBQUMCqVauoqanp
      6PpERKSTxHQIqLS0lA8//JBDhw7x1ltvAa17Bddee22HFiciIp0npgAYNGgQv/3tbzl06BCj
      Ro3q6JpERKQLxDwM1OPxsGbNGv7t3/4Nh8NBOBzmN7/5DSNHjuzI+kREpJPEHAAnTpygurqa
      O+64g9zcXLZt20Z8fHxH1iYiIp0o5gBwuVx4PB6ysrI4fPgwiYmJ7NmzhwEDBnRgeSIdb/fh
      Mt5bux/TjO5J4MFQBKdDz7yQq0/MAdCzZ0+mTJnCqFGj+Prrr6mqquJXv/pVR9Ym0inW7jrG
      joLSS5pmaJ8MfHF6wpdcXWJaov1+P5ZlMXHiRCKRCD/96U8BdAhIuoVT2/0/v20yib7ont4+
      emCPqB8HKdJdxBQAv//976mtrT3n9V/84hcMHz78excl0hUmDe9NRrI2WuTSHTlZy1dbC6Nq
      m5HsY9zgXjiuwMOIMQXAE0880dF1iIhc8VIS4gDYevAEWw+eiGoaj8vJrxdfx9SRfTuztJjE
      fFCzvr6ep556qv1mcKFQiJ/85Ce6GZyIXLVuuW4o/uYgJyr9UbUvPFFDWU0jRWV1V1cAxMfH
      88ADD7TfDO7NN9/E4Yj5AWMiIlc8j9vJny0YG3X7Zz7axicbr9x7pH2v5wFkZWW1/56Tk8P+
      /fvJzc3tkMJERKRzxRwAtbW1/Pa3vyUQCABgGAb/+3//7w4rTEREOlfMAZCWlsZTTz1FMBgk
      HA5rCKiISDcTcwCEw2H+5V/+hYMHD+JwOBgwYAC/+c1viIuL68j6RESkk8R81raoqIhAIMBz
      zz3Hs88+S2ZmJtu3b+/I2kREpBPFHAA9e/bE6XRSWlpKaWkp8fHx1NTUUFp6aZfYi4jI5RHz
      ISDTNGlpaeEPf/gD0HpIaP/+/ezYsUMng23ieKWfZRvyo2qbmuDlutF9cWqosMgVI+YASE5O
      5h/+4R8oKioiFAqRk5OD1+v9zmmKCvayfU8+OUNGM27UEM65MtoMs2XDBnJGTiQrTSeVr1SJ
      8a3neY6V1fHsx9Ed9jMM+Il/PIumD+vM0kTkEnyvk8D/+q//Sm1tLXFxcTQ2NvJ3f/d3pKam
      nrd9XdlR3vtiHbcuuok1ny3Dk5DE6NxepxtYFns3r+LTlRu5OXOoAuAKNmVENo/cPI4jJ6N7
      BvSx0jqOlNZSUlHfyZWJyKWIOQCOHDkCtN4XyDAMPvjgA9atW8fChQvP3/7gXibOmE9u//54
      b5zB2rz9ZwVAwF/Jyq2F3DR7Iqd2DCzLwrJO37Pdsqz2K4/l8jGAH04fGnX799ce4EhpLZbF
      lfH9tS1Tlqnl6Wpz5voimu/2VHuLzlkWrLZ7z16p666YAyAlJYXS0lJKSkrw+Xzs27eP+fPn
      X7B9fV0dKf2TAEhKzsQdOd7+nmVGWPbe+9zwwzsIHt9K6NTrlkU4HG5vZ5omkUgk1pLlMgm3
      fWcRM0IwGLzM1UCk7Q8xGAoRDDovczXSkdqXtUh0y1qkvb3ZKctmJGJeUj1d7Xs9EOb+++/n
      P//zP2lpaWH+/PlMmjTpgu3j430EW1pX7S0tTQTN03945YV7ySuqJHHvNk4WFxD2+OnfexE9
      k314PKfv1x4Oh3G59FCO7ubUd+ZyOi96nqgrOJ2ty15cnOeKqEc6jrttWXNGuax19rLpalvW
      XC7XFbmsxbQ2NU2Tr7/+mqNHj/L4448zYMAADOO773XdZ8BAln2znmtyb2Xbhg30GTydgL+G
      qkaTnv2G8t9+/hgA+11NhFJHkRqvC8pERDpTTGPyVq9ezSeffEJqaiq///3v8fsvfmvU3oPG
      MLKXhxeXLKE+LoupYwbSVFfBoaMncMd5yczMJDMzk379B9K/by88Lg0XFBHpTDHtAezatYsf
      //jHDB8+nKKiIo4fP05ycvJFpnIwbf4iprX9ZhgG6X2HMutbt8geMHRcLCWJiMgliikAgsEg
      33zzDQUFBRw5coSVK1dy6NAhpk6dSo8ePS443cUOE4mISNeJ6TjLnDlz8Hg81NbWMn78eJKT
      k6mtrT1rxI6IiFzZYtoDmDJlClOmTOnoWkRi0tQS4u2Ve6mqb46qfX5xVSdXJNI9aEyldHvL
      1ufz/tcHLmma7Mwk4txa/MXe9Bcg3V6Nv/WpdFNG9GH8kF4Xad1qzMCeJPo8F28ochVTAMhV
      Y0jfdH4wdcjlLkPkHIeOV/PV1sKo2vbJTGLkgAsPpulICgARkU6SnNB6QeumfcfZtO/4RVq3
      8npc/P3Ds7okBBQAIiKd5IfTh9HQHKSyrimq9gUl1VTWNVFUVqcAEBHpzuK9bh5dOCHq9v/6
      5nq+3l3UiRWdTQEgInKFaQmFaW4JXbwhEOd24Tjn6VrRUQCIiFxhnv90J89/ujOqtjlZKfz9
      w7PITLn0h2jpjmsiIleIH04fRmZKPB6XM6r/AIrK6th9uCymz9MegIjIFWJovwz+669+gGla
      F28M/OubG9h68ATF5fVRh0C8102cu+05BTFXKiIiHe5SrlD3elrbvrd2P++t3R/VNE6H0X7O
      QAEgItJN3T9/DDUNzTS3RH8jzqZAkEjbHoYCQESkm8rOTOKJn95wSdMEWsKYlgJARMR2vHGn
      V/saBSQiYlMKABERm1IAiIjYlM4BSJfZe7SCZz7eFlXb3hmJ/GDqEJwObaOIdBYFgHS67MxE
      DAOKy+spLq+PerqC4mp6ZyZdtJ0e8SgSGwWAdLqpI/vyN4unUVIR3cq/qKyedShydyUAAB+5
      SURBVHlFrNl1LOrPMAzISL70e6GI2JkCQDqdYRhMH5MTdXvTtBjaL4OK2saop8npmcLscf1j
      KU/EthQAcsVxOAxunTHscpchctXTGTYREZtSAIiI2JQCQETEphQAIiI2pQAQEbEpBYCIiE11
      6TDQ+qpS9h4spO/AofTNysRoe5C9ZVk01ldzsKAQhyeBkSOGtT+yTEREOkeX7QE015bz3Etv
      YLhcvPfayxwtq2l/z4qEWPb+hwQjFrUnD/PMC28QjvKZmCIiEpsu2wMo2LedsTNuZuqU4fRJ
      hg3b9pJ7ywwADKebex96BMMwCDbVcuDwm2j9LyLSubosAOqra8kckwFAamY2zv27298zDIOa
      kkI+XL6GY0ePcdt9j+B2GJimSSgUam/37d9FRM4UbFs/RCIRmpubL9o+3NY+HA5H1f5q02UB
      4IlzEwmbAETCQcKmcdb7yb36cfvtt3H04F5Wr17N8NwHiHM7iYuLa28TDodxuXT3ChE5P4/b
      DYDT6cTn8120vautvcvliqr91abLzgFk9enH3p07MS2L/bt2kt6nP6FAE7X1jZjhANV1jaSk
      pDF6whRcgVoCoUhXlSYiYktdtjndb9g4Une/wZIlS3B64rl39lBqT+xn85EAN143mI/ffxvL
      5cVsaSJ37HUk+dxdVZqIiC11WQA4nB4W3vsgwZYgLk8cTodBQu4Ybsltff+RnzxGOBzGMBw4
      XU6M7+5ORES+py49oG4YDuK83gu8Z+B2a6tfRKSr6EpgERGbUgCIiNiUAkBExKYUACIiNqUA
      EBGxKQWAiIhNKQBERGxKASAiYlMKABERm1IAiIjYlAJARMSmFAAiIjalABARsSkFgIiITSkA
      RERsSgEgImJTCgAREZtSAIiI2JQCQETEphQAIiI2pQAQEbEpBYCIiE0pAEREbEoBICJiUwoA
      ERGbUgCIiNiUAkBExKYUACIiNqUAEBGxKQWAiIhNdXkAmKaJZXX1p4qIyLe5uuqDrEiYrz55
      j4LiCpIy+nL3nQvxuZ2t71kmOzasZuvufEKRMKMnzWDmlLEYhtFV5YmI2E6X7QGUHNpFSWM8
      P/vZz8hJCrBx16H296xImLoGg/sfeoSfPvoIezavpTlkdlVpIiK21GV7AKXFRYydfB0ul4ux
      Eyby5YZDMGkYAA6Xhzk3zgHL4tC+PMz4dNxOB5ZlEQ6H2/uIRCJEIpGuKllEuplwpHV9YZom
      LS0tF21/an0SMSNRtb/adFkABJoDJLcd8nG5vbg4ews/Eg6yfNn7HK0K8cC9d+J2GliWhcNx
      eifFsiycTmdXlSwi3YzDaF1fGIaBy3Xx1dupw8yG4Yiq/dWmy/7FKekpVFXUQv8e1NeUE3Yn
      tr9nWSZfffg6gZShPHrrdTjbvxTjrBW+AkBEvsupDcZvrzsu1t4RZfurTZedAxg4fBy71n7C
      7j15LPt0FeMnjKT6eAHrtuwlEmpg0+4ieiYYbN64kS078ghHNFRIRKQzddkeQGJGNvcvvp29
      +UeYe+tihvTJpNnvJIcwDqePO25bxKmj/Q6PG7AAjQISEeksXXrQq0d2f2Zn92//3ZeURk5S
      689jxo/vylJERGxPVwKLiNiUAkBExKYUACIiNqUAEBGxKQWAiIhNKQBERGxKASAiYlMKABER
      m1IAiIjYlAJARMSmFAAiIjalABARsSkFgIiITSkARERsSgEgImJTCgAREZtSAIiI2JQCQETE
      phQAIiI2pQAQEbEpBYCIiE0pAEREbEoBICJiUwoAERGbUgCIiNiUAkBExKYUACIiNqUAEBGx
      KQWAiIhNKQBERGyqywPAsiwsq6s/VUREvs3VVR9kWRY7N6xi466D5Ay5hpvmTsPpME69i2ma
      7N22gVojjesnjeqqskREbKvL9gAqivbzzb5SHvnJTwiXH2DLvmPt71mWyXuvP8vegwXkFx7v
      qpJERGyty/YAig8XMHnGLLweD9NnzWD5pnymjh7Q9q6D23/0GM2lBby9/sxgsIhEIu2/m6ZJ
      OBzuqpJFpJuJmK3rC8uyolpXmKbZ+n/LnuuWLguAxoYGUnweALxxiXiM0zPbMAycTuNCk7Zr
      PX+gEwgicgFtq4eo1xVtbSwLW65buiwAklKSaahvAqCxoYYg3otOYxgGLtfZJX77dxGRU5xO
      JwAOhwO3233R9o629s4o219tuuwcwIAhI9m+9ktKTpxg5VdrGD5mOPUVJeQdOIplmZwoLqLk
      ZBl+fw3HjhUTDEcu3qmIiMSsywIgLXsgN80cz+YNG+g//nquGdQbw2j9eMsyKczfz7GqZob3
      SeXAgQKCEbOrShMRsaUuPJ5iMGTMJIaMmdT+SlJmNmMyW3+eccOCritFRER0JbCIiF0pAERE
      bEpDakTkqlNQUs2fPtp20XYHiyq7oJorlwJARK4a6ck+nA6Dkop6Sirqo5rGYRj0zkjs5Mqu
      TIbVja5+CIfDug5ARL7TurwiTlT6o26flZbAjGtycDrsd0RcASAiYlP2izwREQEUACIitqUA
      EBGxKQWAiIhNKQBERGxKASAiYlMKABERm1IAiIjYlAJARMSmFAAiIjalABARsSkFgIiITSkA
      RERsSgEgImJT3ep20MFgkG5UrojIFa1bBcCZgsEgbrcbwzAu2tayLEKhEB6PJ6q+w+EwhmHg
      dDqjan+p/UciESzLuqRnGwSDwU7r/1Lm5dXQfyztu+t329n9X+q8NE0T0zSj7j8UCuF0OnFE
      +bAW0zSJRCK43e5u2f+lfFcd0X+3PQR0qbl1JbWPJXM7s/8rrf2lTnOl1a/23922O3+3l+pK
      q//b7bttAIiIyPfTbZ+vGO3hmVjaG4YR9S5tLP07HI5LTu7O7P9S52Vn928YRtS7tLH039nL
      zqXU3t37dzgcl/S30t37PzVNZ/Ufy7L5ffrvtucARETk+9EhIBERm1IAiIjYlPN3v/vd7y53
      EZeDZUYoL68kITEBo+33I4fyOVFeTVp6Ok4HlJ08QV29H7/fj9/fgDc+HqfDQailiZr6JuJ9
      3gv239Lkp74phM/bOuSqpbmBAwcO0BiySEtOJNTSTGlZeVvffpoDQRLifVRXlFJ4+AiBMKQk
      J164/+YG6htb8HnjAAg2N7D/wAEagyZpKUnn9N/U1n9NZQXVtbX4/X4cLg8e9/lPAwWbG6ht
      CBDva+s/0Mj+/QdoaDFJTU4kHGqhrLSM+lP9NwdxEKa8orL9M4Nh64LzqLaqAlxxuJwOwKKm
      opT8Q0dw+xKJ93rw19VQWVXd3peJgziPixNFRzhWcpKklFTcrgsfL62tqsByxuF2tfVfWUZ+
      QSEuXwLxXg9YJiXHCik6Xkp8UnL7fIiEAlTW+EmI912wb8s0KS8rJyExsXXZsUyOFRZQfLKC
      1PR0XA6jtf+iIxSVnCQ+sbX/YHMjhw4doryyhuTU1LZ/+7lCgbOXr3Cwmf37D+BvDpOWkoRh
      GISDAQryD1Jd10hKagoOA2qqKqmuaf1ucbiJ85x/qGLr8tt4Tv/1TSFSz+j/UP5BquoaSUlJ
      IRhopKy8ov37aAlFiPf5ON/h53CwmaraRhLiT/Uf4MD+/dSd2X8owKH8fCpr/aSmpuBwGDTV
      13DgYD4RPCQm+rjQke36mkrChhtP2/dfV11Ofv5hDI+PhLbltbaqjPxDhTg88e2vWZZFeVkZ
      8QkJ33nc3F9TSQg3Hrez7fMqOJh/GNxeEtv+TXVV5eQfOozD3fqZlmVyovgox44Vt792wf5r
      qwhZrvb+/TWVHCw4hOWKa++/vrqCgwWHMdxeEnxeLMs8Y33UQJwv/rzLz6l/46llEyxKjhVy
      rKS0/W/GskyOHyvk2PEyewZA6ZEDvPLaa6zbtIep06fiJMJn777E0aogLbUlrNq8n0ljR7Bn
      6xaKT5ZRUVHOp++/x+CxkynavZFX31pKUUUzE8YMO0/vFltWf8lrb79DdbOT0cNyaWmsYclz
      z+JLTmf3+uX4nRlkJRhs37GbsvJySgoPsHzdDgZmJ/Lpio14vR52b1pDabOXwTlZ5/S/be1X
      vPb2O1Q0wpjhgwg21bHkuWfwJqeTt3EFdY40eiU52b6ztf/jR/L5as1WpkwZw0svvkLINKko
      L8d0J9IzPfmc/revW8Frb79Dab3J2JGDCQXqWfLM03iTM9i7aSU1VgrZye7T/R8t4ItVGxkx
      uB95e/dTXl7O4T1b2HqokknXDD+r91BzAx+/+ybvvP8J2UNH0zMtieOHdvHmR8vJSE3ikw/e
      ZeCoiTSVF7M3/xDl5eXkbV5Dkd9BQ8kevskrIo5mPvh8LZMnT8T5rb/jUHMjn7z3Fu+8v4ys
      QSPolZ7MycI9vP7+F2SkJfHph+/Tf8QEtqz4gJ2FFbitAJ98+hXDR4/l2J4tvPLmW+QXVTNl
      /OjzLjuVJYW89tqrrFi9makzr8dlWKxe9gb7SvzQXMGXa7cyYdwYvv7sPbbnn8RtBPnksy8Y
      OnwEn370Hi2mC3/1ST78Yj1Tp4zDcdaKyGL3hjW89tbbFFcFGD96GJFgE889/RSexAwObFtL
      WSCOgb1SeO7pZwi746ksyWf9ziOMGzWQV158mZZI63cbdnrplZl6zne7Z9PXvPrm2xwrb2TC
      NcMxwwGe++P/xZWYQcGOdZxocjMoO5UlTz9L0Omj6vghvt5+mKHZaezI20t5eTnHDuzkm7wi
      powf/a0AsNi7ZR2vvvk2haV+Jo0dgRVpYcnT/4kjIZ1Du9ZTUm8wuG86LzzzLAFHHDUnC1mz
      NZ/h/ZL5ryVvkd4jnVVffkJCVi5ZaWdvAIWDAb74cClvv/cRqdmD6Nszjcrj+bz85gekp6ew
      /JMP6TlwFC2Vh3n53a9IS43ns08/o+/gEbha6nnj9Vf48KMvmTR7Dj7XuSvPSDDAlx+9w9vv
      fkhSr1z69Uqn6sQhXnrjfdLTU1jx6Udk9h9JuOYoLy39grTURD779FOyB46geN9Gtu8vxu20
      +OrTj0nKHkKP1ISz+w+1sPzjd3nr3Q9I6NGfnN6ZVJ88zEuvv0taeiqrPvuYtH7DseqKef7t
      T0lPTeSLTz+lV+5wkl2N/OHZt3E6TMrLy4lPyyIl4eyQqa84weuvvcKyT1Zy7Zy5xDlg88oP
      2bT/OG6zkc+Xf801Y8exZfUyNu0/gSvi776jgL6PUMTFPfc/wDuvvQdAJNDIkVoHf/HoDzAw
      ee1PT1HWZDF1zjwAqo8XcPREPdkZiTSW9uCB++/iyzX7L9C7RUJ6Xxbf1ZOtB6oBqCopIHPY
      DObOnkpoymiefukjZox7mPkLFgCw/ov3mDxjFr37DeOhB4fjMAxOZCexYlfFeT/Bl9qHH939
      QzbuKQOg5vghUgdP44bZ0whPHct/Pf8u14//MfNvvBGAjV99wKTps7CaGknI6MVNba9fiC+l
      N/fdcxvrdpQAUHviMEm5U7lh9vVErhvHfz23lJkTf8K8tn62rPwYz/RZ9O6XS+9+uViWyQev
      LmHm9dPP6TscCjNi4kwSvXHtI4n25uUxb9FiRuak0ivRYNP2PG6dO4V+Q0dimSFeeuYw0yaP
      Zvnbr3HPo39BksvA9L/CvsJyxg3ueVb/kXCYYeNnkOjzQtvwhn15u5i7aDFj+qeTnezi6IE9
      lJRVcdNdD5GV4qWm7CR1Dc044lJ46KEf8d5HGy44b0Jhg0V3L2bZW++0ftuREHuKG3j8L+7D
      YUD9S3+iuKaJ4rJKFtz2IL3T4qmrOEltY4S7f/QgDocDM9zCngPPYVqcE2CexJ7cf99dLF93
      EICG8iPE9Z3IvDmziEyfwNPPvcH0ET0JJfRgwfy50FLP0y+8T6ilBVdi6kW/W1dCJg8+cDef
      r9oDQGP5UZy9xzNv9kzM6RP403Nv0Dg6m6AvnZtuvAGCfp5e8g7JvfuxoHc/LMvis7de4PqZ
      M3GcZyPa5cvgwQfv4ZMvdwLQXHkMel7D/DmzsMKT+NOzr9EwNoeAJ4Wbb5wHoUaefvYtDu/f
      y+RZc5k1aRQTBmfxxlebGJ1761l7AWYkwoARk0lJjIe2ZefA7u1M/8FiJg/pyYAeiWzYtpOe
      4VJuXLSI0QN6MzDTx/pNu1kwcSAzb74TI/TWBeeNaZrkDJtIanICZtvCk5+3g+sW3MO1w3sx
      sFcyX2/bTrZRxQ0LFzJ2YB+GZMWzZuMu7l04kzFTnBiAK1RNZaUf+vc4q3/LNOk7ZDy3pCTS
      0rZsFuzdyeR5dzFtVB+GZKeyatt2+rvrmHvzLYwf0o9hvZNYvmEHKeMyGTRuEgsWTLtg/aFg
      hHmL7oZ332qfb7sKTnLfQz8lwesk4n+NguMnyS8o4Z5H/4IEl2HPAOg3eDCYze0LsNPtwRn0
      k3/0BD0SXTgcJlVVTWTFJwEWa1etZtrsH+I0HAwfPZK6iiPf0buDkdeM4uSRvPZX4pPTOFG4
      noqqYQQb62lq9GMBBhBqqmVbQTk//ukPMRwODu7ezLZd+ygprePPHv3Jefo3GHnNKMqL9rW/
      4ktJo/TIGiqqhhNq9hNo8mOa4HBCqLmOrQdP8tBPFxLwn6Sy9DhvvP46Dk888xfcSHpS/Dn9
      jxgzisqSA6f7T06j7Oh2yqtGEW72E2huIGJaOB0G4eZ6Nu8r4cFHb2pv7y8voiTg49aczHOq
      9yWnMiw5lRP7N7e/lpqWwr49e8hOHkOgJUhVVaD9vZL83RiZuWSnJ5PkdbJvXwHD+mUQshzU
      1lYBZweANymFYUkplBVsO6P/VPbn5dEvZSzNgRYcwPVTx/HsH58iOyOBJkcPFvVIwd0rlYC/
      9IKHHgB6D8gFK4jR1spwOEgwWth7qJg+aT4wLCqrGpkxdQJL/vQHsjMTabDSuaVXCsHGapZ9
      toKjhYWMn7MI1zkfZDB8zEhqywvbX4lLSqWiaB1lleMxWxoIBpowfJkMSmnhD08/i9lQxajp
      t2CGm6muKOPNN17HdMRx44IFZKZ++xCiwfDRI6mvPHZW/1XFqyivmojV0kiwpQkrLo0h6RGe
      +uMz0FTD8Kk3cepgW0tdGQcqLRYM7nWeuWMwbPRIGmqK21/xJKVSXXKYsspqCDURCjZjelIZ
      3tPgP//rTzibaxk8+UYy0iJs3rqfawb1oaGxhcbaqnMC0uNLYMSIwWw+sf9UtpOakcHOvN0M
      7jGJxqYANTW1DM9JZV/ePvqkePG3hKmvqSS19/WkWhbffMe36/bGM3LkELaV59PS3n86W/bs
      ZmiWl4bGADU1dYwemMqevH3kpMVT3xKhvqYCw+Fg45ovOJBfSL2ZxE8fzjmnf1ecj5GjhrKj
      6vDp/tMz2Lgvj+HZCfgbAtTW1DFuWBo79+xjQGYi9S1h/DWV1PjjOX44j9deLSQ5M5v5N8zC
      6z77EGhGn35kWJGzTuwmxxnszS9kcJ90LCtCZVUTCW4H+w8cZnB2mj0D4NsMl5e7bl/Emg0b
      MBxuKusDeH2tx0/ryo5yoiWehTk9L9LLhaX0GsS8aytZvXI5cfHxWE5X+2K4Y9Mahk6YRkJc
      61eRM3AECSk92LHpG7Zu3c2i+RdO/FOSegzgxmkVrF65grj4BEyHq33XfNfmtQwaO5WkOBeW
      pw//7fE/xzJNDu/dyvvLVvOTH/3gov0nZORw88wxrGnv//TY47yt6+g/ZgrJ3tb5ZVkma1av
      5Po5N513C/F8Jkybj3/VSpYvXwHhJuIS+rb2ZYZZvW4js374AIbhYMHtd7Jy9VpOHHZQV1nF
      sMEXPgdzpnHXzaNu1QqWL1+BEWmmd98BbNqyk0W3301OjwQ++eADisprGNQ7PbqCz2A4XNx5
      912sWLOeAsNFWW0DQ3xutqzawS233cWAnkl89uEHHC2rZlBWCtdfP5PcnGzWb/yaaRNH4js3
      Bc4Sl5zNrfMmsnbVCuJ8CYQsgxZ/OUerTO656w7Mxio++vIbZk59mF/8t8exTIvjh3bz9vtf
      8BcP33neY/RncidmcfuCa9v6jydoQqihisKKEPfcdSc01/Dh52sJTBtLnAPWrvqS6XPn44xy
      7LnT14O7bp7G16tX4vHF0xKBcGM1h0oD3Hv3XThaann/k1XMnf4I46r9rFi+nAQfOFxx3xnE
      p4ycOIsqf+t367SCuD3JjLpuNrVrVrFixUpcRjNu97kbItEaNn4mlfUrWb5iBU5CeDwJjLh2
      JjVrV7NixQrcjhZc7tZDbSPHTiYrO4d1q1ax/3AJE0cOuGj/Q8ZOp6JuFStWrMBJGLfHy7BJ
      M6j+urV/jzOEy51I7qjJ/MXQcZiRMOu++pivtx5g/nWjLtr/wtvuZMXqryk+ZFBXUcfw4XHc
      dMcdrFq7juICh70DwDpjEUvOzOaOO+8i1FzHH58uIjstDrBYu3ol1826ufXEXrtoFs2z2wwb
      M4nR46dy4tAOKutb34u0+Nm4p4RHftq6Em5u8OPweOnXP5fUJDcvvb0CviMAzryAY8joCYwa
      N4XSI7spr43gMCASbGDD7iIeats6b66vJWDEkZ4cT89ePTH3VX9n/dYZPw8eOZ6R10ym7Nge
      yqpDuByt/a/fdYT7fzyvvWVD1XGO1Dr5waDsKOZRK4fDxax5N+N0wPIPXicpdyAApUf2Ekzs
      R06PFAA88SnccusdWOEgLz/3NAP69/7Ofq22r8AwXMy84WZcDlj58ZvEpfTG37CF/jnZpPjc
      ZCXHU1PfAG0BcKkXxviSM7n9zruIBJt49uli+mXGs9nfTP+cPqTGu+mVkkBVdS09Ezz07NWb
      nlk92bt1M9XNEfokXWAg3hmLT+7Qaxg2ehIVRfs4WdWM2dyINzmVnpkZkBqPo6me+tpaHE43
      mamJ9OydhRX6rr3Usw0YMpohoyZQVXKAk5XN0NJEXGIKWT0yIJKAs7meQNiCYCV5Jc386rZz
      t26/S87gUQwaOZ7q4/mcLG/ECDXjjk8iq0c6RiQRd6CB5jCMvXYmk90u9m5aTsCT8J3hdfo7
      cjBt9gLcDoNvvnqflJSB4HAxbfaNOJ0G33z+Hqk9ci+p3rP7N5g6cx5up4ONKz4kKT4Xw+Hi
      ulnzcToNNnz1AYl9c/HX1ZGQlEpKajpmQzU7jh37jgA4e11y7fU34HY62Lx6GQnu/hgOJ1Nn
      zsPpNNi84iN8vXOpqaogPiWD+IQ4emSmURoKRVW/Jz6FhbfejhVp4dXnX6B/rwy8iR4W3noH
      ZihgzwBY+9VH5B8tpaK2gpefe4Ypc26m+dhODpyopam+luvm3YzXaRBuqqa8JYGbclt3d81Q
      E+8ufZequjqqa5t4/vnnueXO+8lKOX0yxmyp57U33sXf4MffGOKFupMsWrSIFR8uJeTyUlvX
      yL0PPIhhGBw5mMfQ8deR2Lb1XHa0gE/XbCQ5NZm66hpmzF94Tu1m0M8bb75Lnb+e+oYgL7xU
      xqIf3srKj94m5PJSXePn3gcewjAMjuXvYdDYa0lq25sJNNbw9odf4o33UVfXyMI77z1P/w28
      +dY71NX7qfMHeP7FchbdejurP3qLoMtHVU0999z/ZxiGQfGhffQfPZmU+NM3l9q7eyfTZs0+
      59j2KWVFB/joi6+pr63GfaySAwOHceP4/rz58Wq8cQ4MbwazR7auYHbu3svsWTe370nk79nC
      hl0FEGyk98jpZKeeuwdQXpzPh5+vae2/sIz8AUO5adJAXv9wFfFeB1ZcOjNG5OINTOCVF14g
      OcFNxJHEdf0y+GDpa5RX11FeWc+SZ5/hprsebD2sc4ZNa78g7+AxymqreHXJs4ybNgdPbSE7
      DpURaKhj9LS5pPi8TLtuIq+9+DzJCR7CRgJ39M1k2duvE3D5cJgBPL2G0Svx7D8/M9TEO0vf
      obquvm35quKWO+7lm49fp9nho7q6jtsXP0BaupdM1yaWvPAihJrJGXcdXrOBN5Z+gscXT11t
      HTfddu85K1Ar1MQ777xLVW091TWNLFnyPLfc+SM2LHuNRsNHTXUdt917H6kZ8WR5N/Lc8y9i
      hJvpc81UUuIc7Ny6g6kzb7jgd2uFm3nvnXeprK2jsrqBJUue4wd3PsCmZa/S0Nb/D+/+EWk9
      EslO3MCS51/EEQnQa/S1JBoNvLjkTRISfNQGDP7swR+ds5lVW3aEpR8up8Ffi+E6xqGCgdw5
      awwvL/0cn89FxJnI4jlDqa86ztIPvsDrcRD2pHHf/CHs37Geb7btpaK6lrdfXMKQMZO4YdqE
      s/qvqzjG2+9/SaO/FstZSGHBQe6eO46Xl36Gz+sm5Ihn8b3D8deU8tZ7n+HzOAm6Urh/zjDy
      vv6KLQeOkpKSQE2tn9vuuf+c+eOvKubNdz+nsaEWy1HAkcP53H3DRF5d+gler5ug4WXxvSNp
      qCvnzXeW4YtzEXAk8cDiERw/sI033n6PxEQvDS0G990/+5z+d29Zy+adBymvreONJc8yYsJU
      shx1rNt1mEiwkf4jJ9E7PZE9W79my55CzJYGXQl8imVZtASav3No5PdhRiI0BwJ4ffE4v+PY
      iGlGCAVDuNwenBcYJnih6ZqbL96/ZZkEW4K4PB6cl3BJ++n+fZc0XbTCoSDBUIT47xh+iWXR
      0hLAMpx446K/Y+KZ/ft83vbDV+FwiHDEIs4T/d0sz19W67JjOM8eehkJhwhFTOI8HgzDaLtr
      bBBw4LnAEM3z9m+aNDU34/X6zlgmLILBIBjO9uXVsiyCLS2XvOxE23+sLNOkubkZj9d3xtDF
      c/uPhMMEWoL44n3fGh313cKhEMFQ+Ozvtv37Pv9Q1UsRDocIBkNtfZ3u/9tDYSPhMKFwBI/H
      gyPa45+0LieBYKitr1P9h2gJhc/q3/z/27dXGwBAKAaAKNh/Wv4JFiT63c3Qpqp7pzFXKiV/
      5bW3+nbm6pEBAAjKExggKAMAENQBT0x5h0d7Oh8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter.Dash.Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Time-chart' width='384'>
      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
      gm3lTuvLHOjtHvUPa7zc/gBrf//jtO3bjdPjGdmrt6wch15+gRW3fgjDMHC4XKy6/SNE21vY
      +diDzFi1dlzXLM9YdTEOl5vu44dPq32wr5dEdyeV8xZhmCaXfezPAUj0dLH14Z9z5ac+O+aG
      +k0un491v/9JWvftwuXxvq12i0MbX2DZrXeMzCPW0Xbq/MXsca+b+hVrcPz/7d37U1TnHcfx
      9zl75S53BOS2LMgC4h0Q0AhR0XqbtEkTkyZjmmbaSftLfusv+SfanzpNb2nSJm2SxsTEqlHj
      BRVQ1HhBQECuC6Lcd5ez59IfDq6gUM1MOinhec0ww3DZ+Zxnz+6z53me832s1gfZp8e//SPD
      jA16Kdn9Y2RZZt1zr9B3/TKy1YY9POKRN4q5WJ1OSve9St/1K9icYWiaSsvJo5Tu+ylJucu5
      8M93uNfVTnzmk5XweNjaZ1+hs7GOsYE+JEnGYrPRc+UCW998C13TOP/e22SuKiVrbTnJ7gJu
      njhMZ+NZcjc89djHTitejWSxMNTRhqFpOCOjaDl5lPUvvEqyu4ALH/6Ve10dlL/0OmCO/Ta8
      /ycSXW4k6fFts/bZl83s3j4kScJqt9N9qYGtb76FoWuce/f3ZK4uQ5Ikbp09waq9Lzz2XAll
      L1qJJMsMdbShaxqOiEgz+/P7Sc73cPHDdxn19rL++f30Xm3CYrVhDw9/oufU5nBStu81eq9d
      wh4egc3pJC4jm4Ka7Qx1tKGpKo7I+a9wHye1sARJlhjqaMXQVBwR8eSUVtHVdJ7hni5k2YIt
      LIzI+CTKX3odb8s1rh89SOX+N54o/5ofvkhn41lG+3uRJAlndDRlP3md7suNWGw2bGHhRMQl
      UPOrX2MYBl0Xz9N25gRFtXsen92zAkkys+u6SlhkLK7yjXRdrGe45zaSxRK6/+j+8NOT3uNg
      czgp3fcavVebcEREYnM6iU3LwLNl58JbBWQYBqqioKsquqqiBYOoUwHiM13klFYxcXeIxJw8
      DMOg7cwxcjc8hSSbk35acPr/dA0tqDB9C8QsWjBo/p2howWDYBhY7Q7cVTUoPh/J+YUA3Lvd
      jj0sPFSDpb/5KpoyRXTSUpyR0Si+yW+QPWc6+x2SXPnmJ+gzx8zxT1kmGPDTeeEcit9HYHxs
      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
    </thumbnail>
  </thumbnails>
</workbook>
